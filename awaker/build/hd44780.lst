ARM GAS  /tmp/ccdIBtGv.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"hd44780.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.section	.bss.Handle_Lcd,"aw",%nobits
  19              		.align	2
  22              	Handle_Lcd:
  23 0000 00000000 		.space	60
  23      00000000 
  23      00000000 
  23      00000000 
  23      00000000 
  24              		.section	.bss.Handle_Brigt,"aw",%nobits
  25              		.align	2
  28              	Handle_Brigt:
  29 0000 00000000 		.space	60
  29      00000000 
  29      00000000 
  29      00000000 
  29      00000000 
  30              		.section	.bss.Handle_Con,"aw",%nobits
  31              		.align	2
  34              	Handle_Con:
  35 0000 00000000 		.space	60
  35      00000000 
  35      00000000 
  35      00000000 
  35      00000000 
  36              		.section	.bss.Lcd_Conf,"aw",%nobits
  37              		.align	2
  40              	Lcd_Conf:
  41 0000 00000000 		.space	20
  41      00000000 
  41      00000000 
  41      00000000 
  41      00000000 
  42              		.section	.bss.Queue,"aw",%nobits
  43              		.align	2
  46              	Queue:
  47 0000 00000000 		.space	3000
  47      00000000 
  47      00000000 
  47      00000000 
  47      00000000 
ARM GAS  /tmp/ccdIBtGv.s 			page 2


  48              		.section	.bss.Queue_Head,"aw",%nobits
  49              		.align	1
  52              	Queue_Head:
  53 0000 0000     		.space	2
  54              		.section	.bss.Queue_Tail,"aw",%nobits
  55              		.align	1
  58              	Queue_Tail:
  59 0000 0000     		.space	2
  60              		.section	.text.init_delay,"ax",%progbits
  61              		.align	2
  62              		.thumb
  63              		.thumb_func
  65              	init_delay:
  66              	.LFB63:
  67              		.file 1 "hd44780/hd44780.c"
   1:hd44780/hd44780.c **** /*
   2:hd44780/hd44780.c ****  * STM32F4-HD44780
   3:hd44780/hd44780.c ****  *
   4:hd44780/hd44780.c ****  * An interrupt driven library for HD44780-based LCD displays
   5:hd44780/hd44780.c ****  *
   6:hd44780/hd44780.c ****  * http://eartoearoak.com/software/stm32f4-hd44780
   7:hd44780/hd44780.c ****  *
   8:hd44780/hd44780.c ****  * Copyright 2013 - 2015 Al Brown
   9:hd44780/hd44780.c ****  *
  10:hd44780/hd44780.c ****  * This program is free software: you can redistribute it and/or modify
  11:hd44780/hd44780.c ****  * it under the terms of the GNU General Public License as published by
  12:hd44780/hd44780.c ****  * the Free Software Foundation, or (at your option)
  13:hd44780/hd44780.c ****  * any later version.
  14:hd44780/hd44780.c ****  *
  15:hd44780/hd44780.c ****  * This program is distributed in the hope that it will be useful,
  16:hd44780/hd44780.c ****  * but WITHOUT ANY WARRANTY; without even the implied warranty of
  17:hd44780/hd44780.c ****  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  18:hd44780/hd44780.c ****  * GNU General Public License for more details.
  19:hd44780/hd44780.c ****  *
  20:hd44780/hd44780.c ****  * You should have received a copy of the GNU General Public License
  21:hd44780/hd44780.c ****  * along with this program.  If not, see <http://www.gnu.org/licenses/>.
  22:hd44780/hd44780.c ****  */
  23:hd44780/hd44780.c **** 
  24:hd44780/hd44780.c **** #include <stdarg.h>
  25:hd44780/hd44780.c **** #include <stdbool.h>
  26:hd44780/hd44780.c **** #include <stdio.h>
  27:hd44780/hd44780.c **** 
  28:hd44780/hd44780.c **** #include <stm32f1xx.h>
  29:hd44780/hd44780.c **** 
  30:hd44780/hd44780.c **** #include "hd44780.h"
  31:hd44780/hd44780.c **** 
  32:hd44780/hd44780.c **** #define BKL_FREQ			250000
  33:hd44780/hd44780.c **** #define CON_FREQ			BKL_FREQ
  34:hd44780/hd44780.c **** 
  35:hd44780/hd44780.c **** #define HD44780_TIMER 		TIM3
  36:hd44780/hd44780.c **** #define HD44780_CLK_EN		__TIM3_CLK_ENABLE
  37:hd44780/hd44780.c **** #define HD44780_PRIORITY 	1
  38:hd44780/hd44780.c **** #define HD44780_IRQ 		TIM3_IRQn
  39:hd44780/hd44780.c **** #define HD44780_HANDLER		TIM3_IRQHandler
  40:hd44780/hd44780.c **** 
  41:hd44780/hd44780.c **** //#define BKL_GPIO_EN			__GPIOA_CLK_ENABLE
  42:hd44780/hd44780.c **** //#define BKL_GPIO			GPIOA
ARM GAS  /tmp/ccdIBtGv.s 			page 3


  43:hd44780/hd44780.c **** //#define BKL_PIN				GPIO_PIN_15
  44:hd44780/hd44780.c ****  //#define BKL_AF 				GPIO_AF9_TIM12
  45:hd44780/hd44780.c ****  //#define BKL_TIMER 			TIM12
  46:hd44780/hd44780.c ****  //#define BKL_CHANNEL			TIM_CHANNEL_2
  47:hd44780/hd44780.c ****  //#define BKL_CLK_EN			__TIM12_CLK_ENABLE
  48:hd44780/hd44780.c ****  //#define BKL_PERIOD			(HAL_RCC_GetHCLKFreq() /2) / BKL_FREQ
  49:hd44780/hd44780.c ****  //
  50:hd44780/hd44780.c **** //#define CON_GPIO_EN			__GPIOB_CLK_ENABLE
  51:hd44780/hd44780.c **** //#define CON_GPIO			GPIOB
  52:hd44780/hd44780.c **** //#define CON_PIN				GPIO_PIN_9
  53:hd44780/hd44780.c ****  //#define CON_AF 				GPIO_AF3_TIM11
  54:hd44780/hd44780.c ****  //#define CON_TIMER 			TIM11
  55:hd44780/hd44780.c ****  //#define CON_CHANNEL			TIM_CHANNEL_1
  56:hd44780/hd44780.c ****  //#define CON_CLK_EN			__TIM11_CLK_ENABLE
  57:hd44780/hd44780.c ****  //#define CON_PERIOD			HAL_RCC_GetHCLKFreq() / CON_FREQ
  58:hd44780/hd44780.c **** 
  59:hd44780/hd44780.c **** #define MAX_CONTRAST		3000
  60:hd44780/hd44780.c **** 
  61:hd44780/hd44780.c **** #define NONE 0
  62:hd44780/hd44780.c **** 
  63:hd44780/hd44780.c **** #define HD44780_4BIT 		0x00
  64:hd44780/hd44780.c **** #define HDD44780_ENTRY_LEFT	0x02
  65:hd44780/hd44780.c **** #define HD44780_DISPLAY_ON	0x04
  66:hd44780/hd44780.c **** #define HD44780_CURSOR_ON	0x02
  67:hd44780/hd44780.c **** #define HD44780_BLINK_ON	0x01
  68:hd44780/hd44780.c **** 
  69:hd44780/hd44780.c **** #define HD44780_CLEAR		0x0001
  70:hd44780/hd44780.c **** #define HD44780_HOME		0x0002
  71:hd44780/hd44780.c **** #define HD44780_ENTRY		0x0004
  72:hd44780/hd44780.c **** #define HD44780_DISPLAY		0x0008
  73:hd44780/hd44780.c **** #define HD44780_CURSOR		0x0010
  74:hd44780/hd44780.c **** #define HD44780_FUNCTION	0x0020
  75:hd44780/hd44780.c **** #define HD44780_CGRAM		0x0040
  76:hd44780/hd44780.c **** #define HD44780_DGRAM		0x0080
  77:hd44780/hd44780.c **** 
  78:hd44780/hd44780.c **** #define SYSTICK_US			(SystemCoreClock / 1000000)
  79:hd44780/hd44780.c **** 
  80:hd44780/hd44780.c **** typedef enum {
  81:hd44780/hd44780.c **** 	HD44780_WAIT = 1, HD44780_WAIT_NOT_BUSY, HD44780_WRITE
  82:hd44780/hd44780.c **** } hd44780_command_type;
  83:hd44780/hd44780.c **** 
  84:hd44780/hd44780.c **** typedef struct {
  85:hd44780/hd44780.c **** 	hd44780_command_type command;
  86:hd44780/hd44780.c **** 	bool reg;
  87:hd44780/hd44780.c **** 	uint16_t data;
  88:hd44780/hd44780.c **** 	uint8_t nibble;
  89:hd44780/hd44780.c **** } hd44780_task_type;
  90:hd44780/hd44780.c **** 
  91:hd44780/hd44780.c **** typedef struct {
  92:hd44780/hd44780.c **** 	GPIO_TypeDef *gpio;
  93:hd44780/hd44780.c **** 	uint16_t rs;
  94:hd44780/hd44780.c **** 	uint16_t rw;
  95:hd44780/hd44780.c **** 	uint16_t e;
  96:hd44780/hd44780.c **** 	uint16_t db4;
  97:hd44780/hd44780.c **** 	uint16_t db5;
  98:hd44780/hd44780.c **** 	uint16_t db6;
  99:hd44780/hd44780.c **** 	uint16_t db7;
ARM GAS  /tmp/ccdIBtGv.s 			page 4


 100:hd44780/hd44780.c **** 	uint8_t lines;
 101:hd44780/hd44780.c **** 	uint8_t font;
 102:hd44780/hd44780.c **** } hd44780_conf_type;
 103:hd44780/hd44780.c **** 
 104:hd44780/hd44780.c **** void HD44780_HANDLER(void);
 105:hd44780/hd44780.c **** 
 106:hd44780/hd44780.c **** static TIM_HandleTypeDef Handle_Lcd;
 107:hd44780/hd44780.c **** static TIM_HandleTypeDef Handle_Brigt;
 108:hd44780/hd44780.c **** static TIM_HandleTypeDef Handle_Con;
 109:hd44780/hd44780.c **** 
 110:hd44780/hd44780.c **** static hd44780_conf_type Lcd_Conf;
 111:hd44780/hd44780.c **** static volatile hd44780_task_type Queue[HD44780_QUEUE_SIZE];
 112:hd44780/hd44780.c **** static volatile uint16_t Queue_Head = 0;
 113:hd44780/hd44780.c **** static volatile uint16_t Queue_Tail = 0;
 114:hd44780/hd44780.c **** 
 115:hd44780/hd44780.c **** static void init_delay(void) {
  68              		.loc 1 115 0
  69              		.cfi_startproc
  70              		@ args = 0, pretend = 0, frame = 0
  71              		@ frame_needed = 1, uses_anonymous_args = 0
  72              		@ link register save eliminated.
  73 0000 80B4     		push	{r7}
  74              	.LCFI0:
  75              		.cfi_def_cfa_offset 4
  76              		.cfi_offset 7, -4
  77 0002 00AF     		add	r7, sp, #0
  78              	.LCFI1:
  79              		.cfi_def_cfa_register 7
 116:hd44780/hd44780.c **** 
 117:hd44780/hd44780.c **** 	CoreDebug->DEMCR |= CoreDebug_DEMCR_TRCENA_Msk;
  80              		.loc 1 117 0
  81 0004 094A     		ldr	r2, .L2
  82 0006 094B     		ldr	r3, .L2
  83 0008 DB68     		ldr	r3, [r3, #12]
  84 000a 43F08073 		orr	r3, r3, #16777216
  85 000e D360     		str	r3, [r2, #12]
 118:hd44780/hd44780.c **** 	DWT->CYCCNT = 0;
  86              		.loc 1 118 0
  87 0010 074B     		ldr	r3, .L2+4
  88 0012 0022     		movs	r2, #0
  89 0014 5A60     		str	r2, [r3, #4]
 119:hd44780/hd44780.c **** 	DWT->CTRL |= DWT_CTRL_CYCCNTENA_Msk;
  90              		.loc 1 119 0
  91 0016 064A     		ldr	r2, .L2+4
  92 0018 054B     		ldr	r3, .L2+4
  93 001a 1B68     		ldr	r3, [r3]
  94 001c 43F00103 		orr	r3, r3, #1
  95 0020 1360     		str	r3, [r2]
 120:hd44780/hd44780.c **** }
  96              		.loc 1 120 0
  97 0022 BD46     		mov	sp, r7
  98              	.LCFI2:
  99              		.cfi_def_cfa_register 13
 100              		@ sp needed
 101 0024 5DF8047B 		ldr	r7, [sp], #4
 102              	.LCFI3:
 103              		.cfi_restore 7
ARM GAS  /tmp/ccdIBtGv.s 			page 5


 104              		.cfi_def_cfa_offset 0
 105 0028 7047     		bx	lr
 106              	.L3:
 107 002a 00BF     		.align	2
 108              	.L2:
 109 002c F0ED00E0 		.word	-536810000
 110 0030 001000E0 		.word	-536866816
 111              		.cfi_endproc
 112              	.LFE63:
 114              		.section	.text.delay_us,"ax",%progbits
 115              		.align	2
 116              		.thumb
 117              		.thumb_func
 119              	delay_us:
 120              	.LFB64:
 121:hd44780/hd44780.c **** 
 122:hd44780/hd44780.c **** static void delay_us(uint8_t delay) {
 121              		.loc 1 122 0
 122              		.cfi_startproc
 123              		@ args = 0, pretend = 0, frame = 24
 124              		@ frame_needed = 1, uses_anonymous_args = 0
 125              		@ link register save eliminated.
 126 0000 80B4     		push	{r7}
 127              	.LCFI4:
 128              		.cfi_def_cfa_offset 4
 129              		.cfi_offset 7, -4
 130 0002 87B0     		sub	sp, sp, #28
 131              	.LCFI5:
 132              		.cfi_def_cfa_offset 32
 133 0004 00AF     		add	r7, sp, #0
 134              	.LCFI6:
 135              		.cfi_def_cfa_register 7
 136 0006 0346     		mov	r3, r0
 137 0008 FB71     		strb	r3, [r7, #7]
 123:hd44780/hd44780.c **** 
 124:hd44780/hd44780.c **** 	uint32_t ccr_start = DWT->CYCCNT;
 138              		.loc 1 124 0
 139 000a 124B     		ldr	r3, .L10
 140 000c 5B68     		ldr	r3, [r3, #4]
 141 000e 3B61     		str	r3, [r7, #16]
 142              	.L8:
 143              	.LBB2:
 125:hd44780/hd44780.c **** 
 126:hd44780/hd44780.c **** 	while (1) {
 127:hd44780/hd44780.c **** 		uint32_t ccr = DWT->CYCCNT;
 144              		.loc 1 127 0
 145 0010 104B     		ldr	r3, .L10
 146 0012 5B68     		ldr	r3, [r3, #4]
 147 0014 FB60     		str	r3, [r7, #12]
 128:hd44780/hd44780.c **** 		long elapsed = ccr - ccr_start;
 148              		.loc 1 128 0
 149 0016 FA68     		ldr	r2, [r7, #12]
 150 0018 3B69     		ldr	r3, [r7, #16]
 151 001a D31A     		subs	r3, r2, r3
 152 001c 7B61     		str	r3, [r7, #20]
 129:hd44780/hd44780.c **** 
 130:hd44780/hd44780.c **** 		if (elapsed < 0)
ARM GAS  /tmp/ccdIBtGv.s 			page 6


 153              		.loc 1 130 0
 154 001e 7B69     		ldr	r3, [r7, #20]
 155 0020 002B     		cmp	r3, #0
 156 0022 03DA     		bge	.L5
 131:hd44780/hd44780.c **** 			elapsed = ccr_start + ccr;
 157              		.loc 1 131 0
 158 0024 3A69     		ldr	r2, [r7, #16]
 159 0026 FB68     		ldr	r3, [r7, #12]
 160 0028 1344     		add	r3, r3, r2
 161 002a 7B61     		str	r3, [r7, #20]
 162              	.L5:
 132:hd44780/hd44780.c **** 
 133:hd44780/hd44780.c **** 		if ((elapsed / SYSTICK_US) >= delay)
 163              		.loc 1 133 0
 164 002c 7A69     		ldr	r2, [r7, #20]
 165 002e 0A4B     		ldr	r3, .L10+4
 166 0030 1B68     		ldr	r3, [r3]
 167 0032 0A49     		ldr	r1, .L10+8
 168 0034 A1FB0313 		umull	r1, r3, r1, r3
 169 0038 9B0C     		lsrs	r3, r3, #18
 170 003a B2FBF3F2 		udiv	r2, r2, r3
 171 003e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 172 0040 9A42     		cmp	r2, r3
 173 0042 00D3     		bcc	.L6
 134:hd44780/hd44780.c **** 			break;
 174              		.loc 1 134 0
 175 0044 00E0     		b	.L9
 176              	.L6:
 177              	.LBE2:
 135:hd44780/hd44780.c **** 	}
 178              		.loc 1 135 0
 179 0046 E3E7     		b	.L8
 180              	.L9:
 136:hd44780/hd44780.c **** 
 137:hd44780/hd44780.c **** }
 181              		.loc 1 137 0
 182 0048 1C37     		adds	r7, r7, #28
 183              	.LCFI7:
 184              		.cfi_def_cfa_offset 4
 185 004a BD46     		mov	sp, r7
 186              	.LCFI8:
 187              		.cfi_def_cfa_register 13
 188              		@ sp needed
 189 004c 5DF8047B 		ldr	r7, [sp], #4
 190              	.LCFI9:
 191              		.cfi_restore 7
 192              		.cfi_def_cfa_offset 0
 193 0050 7047     		bx	lr
 194              	.L11:
 195 0052 00BF     		.align	2
 196              	.L10:
 197 0054 001000E0 		.word	-536866816
 198 0058 00000000 		.word	SystemCoreClock
 199 005c 83DE1B43 		.word	1125899907
 200              		.cfi_endproc
 201              	.LFE64:
 203              		.section	.text.set_output,"ax",%progbits
ARM GAS  /tmp/ccdIBtGv.s 			page 7


 204              		.align	2
 205              		.thumb
 206              		.thumb_func
 208              	set_output:
 209              	.LFB65:
 138:hd44780/hd44780.c **** 
 139:hd44780/hd44780.c **** static void set_output(const bool output) {
 210              		.loc 1 139 0
 211              		.cfi_startproc
 212              		@ args = 0, pretend = 0, frame = 32
 213              		@ frame_needed = 1, uses_anonymous_args = 0
 214 0000 80B5     		push	{r7, lr}
 215              	.LCFI10:
 216              		.cfi_def_cfa_offset 8
 217              		.cfi_offset 7, -8
 218              		.cfi_offset 14, -4
 219 0002 88B0     		sub	sp, sp, #32
 220              	.LCFI11:
 221              		.cfi_def_cfa_offset 40
 222 0004 00AF     		add	r7, sp, #0
 223              	.LCFI12:
 224              		.cfi_def_cfa_register 7
 225 0006 0346     		mov	r3, r0
 226 0008 FB71     		strb	r3, [r7, #7]
 140:hd44780/hd44780.c **** 
 141:hd44780/hd44780.c **** 	GPIO_InitTypeDef gpio_init;
 142:hd44780/hd44780.c **** 	uint32_t pins;
 143:hd44780/hd44780.c **** 	uint8_t dir;
 144:hd44780/hd44780.c **** 
 145:hd44780/hd44780.c **** 	pins = Lcd_Conf.db4 | Lcd_Conf.db5 | Lcd_Conf.db6 | Lcd_Conf.db7;
 227              		.loc 1 145 0
 228 000a 1A4B     		ldr	r3, .L14
 229 000c 5A89     		ldrh	r2, [r3, #10]
 230 000e 194B     		ldr	r3, .L14
 231 0010 9B89     		ldrh	r3, [r3, #12]
 232 0012 1343     		orrs	r3, r3, r2
 233 0014 9AB2     		uxth	r2, r3
 234 0016 174B     		ldr	r3, .L14
 235 0018 DB89     		ldrh	r3, [r3, #14]
 236 001a 1343     		orrs	r3, r3, r2
 237 001c 9AB2     		uxth	r2, r3
 238 001e 154B     		ldr	r3, .L14
 239 0020 1B8A     		ldrh	r3, [r3, #16]
 240 0022 1343     		orrs	r3, r3, r2
 241 0024 9BB2     		uxth	r3, r3
 242 0026 FB61     		str	r3, [r7, #28]
 146:hd44780/hd44780.c **** 	dir = GPIO_MODE_INPUT;
 243              		.loc 1 146 0
 244 0028 0023     		movs	r3, #0
 245 002a FB76     		strb	r3, [r7, #27]
 147:hd44780/hd44780.c **** 
 148:hd44780/hd44780.c **** 	if (output) {
 246              		.loc 1 148 0
 247 002c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 248 002e 002B     		cmp	r3, #0
 249 0030 0DD0     		beq	.L13
 149:hd44780/hd44780.c **** 		pins = pins | Lcd_Conf.rs | Lcd_Conf.rw | Lcd_Conf.e;
ARM GAS  /tmp/ccdIBtGv.s 			page 8


 250              		.loc 1 149 0
 251 0032 104B     		ldr	r3, .L14
 252 0034 9B88     		ldrh	r3, [r3, #4]
 253 0036 1A46     		mov	r2, r3
 254 0038 FB69     		ldr	r3, [r7, #28]
 255 003a 1343     		orrs	r3, r3, r2
 256 003c 0D4A     		ldr	r2, .L14
 257 003e D288     		ldrh	r2, [r2, #6]
 258 0040 1343     		orrs	r3, r3, r2
 259 0042 0C4A     		ldr	r2, .L14
 260 0044 1289     		ldrh	r2, [r2, #8]
 261 0046 1343     		orrs	r3, r3, r2
 262 0048 FB61     		str	r3, [r7, #28]
 150:hd44780/hd44780.c **** 		dir = GPIO_MODE_OUTPUT_PP;
 263              		.loc 1 150 0
 264 004a 0123     		movs	r3, #1
 265 004c FB76     		strb	r3, [r7, #27]
 266              	.L13:
 151:hd44780/hd44780.c **** 	}
 152:hd44780/hd44780.c **** 
 153:hd44780/hd44780.c **** 	gpio_init.Pin = pins;
 267              		.loc 1 153 0
 268 004e FB69     		ldr	r3, [r7, #28]
 269 0050 BB60     		str	r3, [r7, #8]
 154:hd44780/hd44780.c **** 	gpio_init.Mode = dir;
 270              		.loc 1 154 0
 271 0052 FB7E     		ldrb	r3, [r7, #27]	@ zero_extendqisi2
 272 0054 FB60     		str	r3, [r7, #12]
 155:hd44780/hd44780.c **** 	gpio_init.Pull = GPIO_NOPULL;
 273              		.loc 1 155 0
 274 0056 0023     		movs	r3, #0
 275 0058 3B61     		str	r3, [r7, #16]
 156:hd44780/hd44780.c **** 	gpio_init.Speed = GPIO_SPEED_MEDIUM;
 276              		.loc 1 156 0
 277 005a 0123     		movs	r3, #1
 278 005c 7B61     		str	r3, [r7, #20]
 157:hd44780/hd44780.c **** 
 158:hd44780/hd44780.c **** 	HAL_GPIO_Init(Lcd_Conf.gpio, &gpio_init);
 279              		.loc 1 158 0
 280 005e 054B     		ldr	r3, .L14
 281 0060 1A68     		ldr	r2, [r3]
 282 0062 07F10803 		add	r3, r7, #8
 283 0066 1046     		mov	r0, r2
 284 0068 1946     		mov	r1, r3
 285 006a FFF7FEFF 		bl	HAL_GPIO_Init
 159:hd44780/hd44780.c **** }
 286              		.loc 1 159 0
 287 006e 2037     		adds	r7, r7, #32
 288              	.LCFI13:
 289              		.cfi_def_cfa_offset 8
 290 0070 BD46     		mov	sp, r7
 291              	.LCFI14:
 292              		.cfi_def_cfa_register 13
 293              		@ sp needed
 294 0072 80BD     		pop	{r7, pc}
 295              	.L15:
 296              		.align	2
ARM GAS  /tmp/ccdIBtGv.s 			page 9


 297              	.L14:
 298 0074 00000000 		.word	Lcd_Conf
 299              		.cfi_endproc
 300              	.LFE65:
 302              		.section	.text.enable,"ax",%progbits
 303              		.align	2
 304              		.thumb
 305              		.thumb_func
 307              	enable:
 308              	.LFB66:
 160:hd44780/hd44780.c **** 
 161:hd44780/hd44780.c **** static void enable(const bool pulse) {
 309              		.loc 1 161 0
 310              		.cfi_startproc
 311              		@ args = 0, pretend = 0, frame = 8
 312              		@ frame_needed = 1, uses_anonymous_args = 0
 313 0000 80B5     		push	{r7, lr}
 314              	.LCFI15:
 315              		.cfi_def_cfa_offset 8
 316              		.cfi_offset 7, -8
 317              		.cfi_offset 14, -4
 318 0002 82B0     		sub	sp, sp, #8
 319              	.LCFI16:
 320              		.cfi_def_cfa_offset 16
 321 0004 00AF     		add	r7, sp, #0
 322              	.LCFI17:
 323              		.cfi_def_cfa_register 7
 324 0006 0346     		mov	r3, r0
 325 0008 FB71     		strb	r3, [r7, #7]
 162:hd44780/hd44780.c **** 
 163:hd44780/hd44780.c **** 	if (pulse) {
 326              		.loc 1 163 0
 327 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 328 000c 002B     		cmp	r3, #0
 329 000e 0AD0     		beq	.L17
 164:hd44780/hd44780.c **** 		HAL_GPIO_TogglePin(Lcd_Conf.gpio, Lcd_Conf.e);
 330              		.loc 1 164 0
 331 0010 0C4B     		ldr	r3, .L18
 332 0012 1A68     		ldr	r2, [r3]
 333 0014 0B4B     		ldr	r3, .L18
 334 0016 1B89     		ldrh	r3, [r3, #8]
 335 0018 1046     		mov	r0, r2
 336 001a 1946     		mov	r1, r3
 337 001c FFF7FEFF 		bl	HAL_GPIO_TogglePin
 165:hd44780/hd44780.c **** 		delay_us(50);
 338              		.loc 1 165 0
 339 0020 3220     		movs	r0, #50
 340 0022 FFF7FEFF 		bl	delay_us
 341              	.L17:
 166:hd44780/hd44780.c **** 	}
 167:hd44780/hd44780.c **** 	HAL_GPIO_TogglePin(Lcd_Conf.gpio, Lcd_Conf.e);
 342              		.loc 1 167 0
 343 0026 074B     		ldr	r3, .L18
 344 0028 1A68     		ldr	r2, [r3]
 345 002a 064B     		ldr	r3, .L18
 346 002c 1B89     		ldrh	r3, [r3, #8]
 347 002e 1046     		mov	r0, r2
ARM GAS  /tmp/ccdIBtGv.s 			page 10


 348 0030 1946     		mov	r1, r3
 349 0032 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 168:hd44780/hd44780.c **** 	delay_us(50);
 350              		.loc 1 168 0
 351 0036 3220     		movs	r0, #50
 352 0038 FFF7FEFF 		bl	delay_us
 169:hd44780/hd44780.c **** }
 353              		.loc 1 169 0
 354 003c 0837     		adds	r7, r7, #8
 355              	.LCFI18:
 356              		.cfi_def_cfa_offset 8
 357 003e BD46     		mov	sp, r7
 358              	.LCFI19:
 359              		.cfi_def_cfa_register 13
 360              		@ sp needed
 361 0040 80BD     		pop	{r7, pc}
 362              	.L19:
 363 0042 00BF     		.align	2
 364              	.L18:
 365 0044 00000000 		.word	Lcd_Conf
 366              		.cfi_endproc
 367              	.LFE66:
 369              		.section	.text.write,"ax",%progbits
 370              		.align	2
 371              		.thumb
 372              		.thumb_func
 374              	write:
 375              	.LFB67:
 170:hd44780/hd44780.c **** 
 171:hd44780/hd44780.c **** static void write(const uint8_t data, const bool reg) {
 376              		.loc 1 171 0
 377              		.cfi_startproc
 378              		@ args = 0, pretend = 0, frame = 8
 379              		@ frame_needed = 1, uses_anonymous_args = 0
 380 0000 80B5     		push	{r7, lr}
 381              	.LCFI20:
 382              		.cfi_def_cfa_offset 8
 383              		.cfi_offset 7, -8
 384              		.cfi_offset 14, -4
 385 0002 82B0     		sub	sp, sp, #8
 386              	.LCFI21:
 387              		.cfi_def_cfa_offset 16
 388 0004 00AF     		add	r7, sp, #0
 389              	.LCFI22:
 390              		.cfi_def_cfa_register 7
 391 0006 0346     		mov	r3, r0
 392 0008 0A46     		mov	r2, r1
 393 000a FB71     		strb	r3, [r7, #7]
 394 000c 1346     		mov	r3, r2
 395 000e BB71     		strb	r3, [r7, #6]
 172:hd44780/hd44780.c **** 
 173:hd44780/hd44780.c **** 	set_output(true);
 396              		.loc 1 173 0
 397 0010 0120     		movs	r0, #1
 398 0012 FFF7FEFF 		bl	set_output
 174:hd44780/hd44780.c **** 
 175:hd44780/hd44780.c **** 	HAL_GPIO_WritePin(Lcd_Conf.gpio, Lcd_Conf.rw, GPIO_PIN_RESET);
ARM GAS  /tmp/ccdIBtGv.s 			page 11


 399              		.loc 1 175 0
 400 0016 294B     		ldr	r3, .L21
 401 0018 1A68     		ldr	r2, [r3]
 402 001a 284B     		ldr	r3, .L21
 403 001c DB88     		ldrh	r3, [r3, #6]
 404 001e 1046     		mov	r0, r2
 405 0020 1946     		mov	r1, r3
 406 0022 0022     		movs	r2, #0
 407 0024 FFF7FEFF 		bl	HAL_GPIO_WritePin
 176:hd44780/hd44780.c **** 	HAL_GPIO_WritePin(Lcd_Conf.gpio, Lcd_Conf.rs, !reg);
 408              		.loc 1 176 0
 409 0028 244B     		ldr	r3, .L21
 410 002a 1968     		ldr	r1, [r3]
 411 002c 234B     		ldr	r3, .L21
 412 002e 9A88     		ldrh	r2, [r3, #4]
 413 0030 BB79     		ldrb	r3, [r7, #6]
 414 0032 83F00103 		eor	r3, r3, #1
 415 0036 DBB2     		uxtb	r3, r3
 416 0038 0846     		mov	r0, r1
 417 003a 1146     		mov	r1, r2
 418 003c 1A46     		mov	r2, r3
 419 003e FFF7FEFF 		bl	HAL_GPIO_WritePin
 177:hd44780/hd44780.c **** 	HAL_GPIO_WritePin(Lcd_Conf.gpio, Lcd_Conf.db7, (data & 0x8) >> 3);
 420              		.loc 1 177 0
 421 0042 1E4B     		ldr	r3, .L21
 422 0044 1968     		ldr	r1, [r3]
 423 0046 1D4B     		ldr	r3, .L21
 424 0048 1A8A     		ldrh	r2, [r3, #16]
 425 004a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 426 004c 03F00803 		and	r3, r3, #8
 427 0050 DB10     		asrs	r3, r3, #3
 428 0052 DBB2     		uxtb	r3, r3
 429 0054 0846     		mov	r0, r1
 430 0056 1146     		mov	r1, r2
 431 0058 1A46     		mov	r2, r3
 432 005a FFF7FEFF 		bl	HAL_GPIO_WritePin
 178:hd44780/hd44780.c **** 	HAL_GPIO_WritePin(Lcd_Conf.gpio, Lcd_Conf.db6, (data & 0x4) >> 2);
 433              		.loc 1 178 0
 434 005e 174B     		ldr	r3, .L21
 435 0060 1968     		ldr	r1, [r3]
 436 0062 164B     		ldr	r3, .L21
 437 0064 DA89     		ldrh	r2, [r3, #14]
 438 0066 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 439 0068 03F00403 		and	r3, r3, #4
 440 006c 9B10     		asrs	r3, r3, #2
 441 006e DBB2     		uxtb	r3, r3
 442 0070 0846     		mov	r0, r1
 443 0072 1146     		mov	r1, r2
 444 0074 1A46     		mov	r2, r3
 445 0076 FFF7FEFF 		bl	HAL_GPIO_WritePin
 179:hd44780/hd44780.c **** 	HAL_GPIO_WritePin(Lcd_Conf.gpio, Lcd_Conf.db5, (data & 0x2) >> 1);
 446              		.loc 1 179 0
 447 007a 104B     		ldr	r3, .L21
 448 007c 1968     		ldr	r1, [r3]
 449 007e 0F4B     		ldr	r3, .L21
 450 0080 9A89     		ldrh	r2, [r3, #12]
 451 0082 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
ARM GAS  /tmp/ccdIBtGv.s 			page 12


 452 0084 03F00203 		and	r3, r3, #2
 453 0088 5B10     		asrs	r3, r3, #1
 454 008a DBB2     		uxtb	r3, r3
 455 008c 0846     		mov	r0, r1
 456 008e 1146     		mov	r1, r2
 457 0090 1A46     		mov	r2, r3
 458 0092 FFF7FEFF 		bl	HAL_GPIO_WritePin
 180:hd44780/hd44780.c **** 	HAL_GPIO_WritePin(Lcd_Conf.gpio, Lcd_Conf.db4, (data & 0x1));
 459              		.loc 1 180 0
 460 0096 094B     		ldr	r3, .L21
 461 0098 1968     		ldr	r1, [r3]
 462 009a 084B     		ldr	r3, .L21
 463 009c 5A89     		ldrh	r2, [r3, #10]
 464 009e FB79     		ldrb	r3, [r7, #7]
 465 00a0 03F00103 		and	r3, r3, #1
 466 00a4 DBB2     		uxtb	r3, r3
 467 00a6 0846     		mov	r0, r1
 468 00a8 1146     		mov	r1, r2
 469 00aa 1A46     		mov	r2, r3
 470 00ac FFF7FEFF 		bl	HAL_GPIO_WritePin
 181:hd44780/hd44780.c **** 	enable(true);
 471              		.loc 1 181 0
 472 00b0 0120     		movs	r0, #1
 473 00b2 FFF7FEFF 		bl	enable
 182:hd44780/hd44780.c **** }
 474              		.loc 1 182 0
 475 00b6 0837     		adds	r7, r7, #8
 476              	.LCFI23:
 477              		.cfi_def_cfa_offset 8
 478 00b8 BD46     		mov	sp, r7
 479              	.LCFI24:
 480              		.cfi_def_cfa_register 13
 481              		@ sp needed
 482 00ba 80BD     		pop	{r7, pc}
 483              	.L22:
 484              		.align	2
 485              	.L21:
 486 00bc 00000000 		.word	Lcd_Conf
 487              		.cfi_endproc
 488              	.LFE67:
 490              		.section	.text.read_busy,"ax",%progbits
 491              		.align	2
 492              		.thumb
 493              		.thumb_func
 495              	read_busy:
 496              	.LFB68:
 183:hd44780/hd44780.c **** 
 184:hd44780/hd44780.c **** static bool read_busy(void) {
 497              		.loc 1 184 0
 498              		.cfi_startproc
 499              		@ args = 0, pretend = 0, frame = 8
 500              		@ frame_needed = 1, uses_anonymous_args = 0
 501 0000 80B5     		push	{r7, lr}
 502              	.LCFI25:
 503              		.cfi_def_cfa_offset 8
 504              		.cfi_offset 7, -8
 505              		.cfi_offset 14, -4
ARM GAS  /tmp/ccdIBtGv.s 			page 13


 506 0002 82B0     		sub	sp, sp, #8
 507              	.LCFI26:
 508              		.cfi_def_cfa_offset 16
 509 0004 00AF     		add	r7, sp, #0
 510              	.LCFI27:
 511              		.cfi_def_cfa_register 7
 185:hd44780/hd44780.c **** 
 186:hd44780/hd44780.c **** 	uint8_t data;
 187:hd44780/hd44780.c **** 
 188:hd44780/hd44780.c **** 	set_output(false);
 512              		.loc 1 188 0
 513 0006 0020     		movs	r0, #0
 514 0008 FFF7FEFF 		bl	set_output
 189:hd44780/hd44780.c **** 	HAL_GPIO_WritePin(Lcd_Conf.gpio, Lcd_Conf.rs | Lcd_Conf.db7,
 515              		.loc 1 189 0
 516 000c 194B     		ldr	r3, .L26
 517 000e 1968     		ldr	r1, [r3]
 518 0010 184B     		ldr	r3, .L26
 519 0012 9A88     		ldrh	r2, [r3, #4]
 520 0014 174B     		ldr	r3, .L26
 521 0016 1B8A     		ldrh	r3, [r3, #16]
 522 0018 1343     		orrs	r3, r3, r2
 523 001a 9BB2     		uxth	r3, r3
 524 001c 0846     		mov	r0, r1
 525 001e 1946     		mov	r1, r3
 526 0020 0022     		movs	r2, #0
 527 0022 FFF7FEFF 		bl	HAL_GPIO_WritePin
 190:hd44780/hd44780.c **** 			GPIO_PIN_RESET);
 191:hd44780/hd44780.c **** 	HAL_GPIO_WritePin(Lcd_Conf.gpio, Lcd_Conf.rw, GPIO_PIN_SET);
 528              		.loc 1 191 0
 529 0026 134B     		ldr	r3, .L26
 530 0028 1A68     		ldr	r2, [r3]
 531 002a 124B     		ldr	r3, .L26
 532 002c DB88     		ldrh	r3, [r3, #6]
 533 002e 1046     		mov	r0, r2
 534 0030 1946     		mov	r1, r3
 535 0032 0122     		movs	r2, #1
 536 0034 FFF7FEFF 		bl	HAL_GPIO_WritePin
 192:hd44780/hd44780.c **** 	enable(false);
 537              		.loc 1 192 0
 538 0038 0020     		movs	r0, #0
 539 003a FFF7FEFF 		bl	enable
 193:hd44780/hd44780.c **** 	data = HAL_GPIO_ReadPin(Lcd_Conf.gpio, Lcd_Conf.db7);
 540              		.loc 1 193 0
 541 003e 0D4B     		ldr	r3, .L26
 542 0040 1A68     		ldr	r2, [r3]
 543 0042 0C4B     		ldr	r3, .L26
 544 0044 1B8A     		ldrh	r3, [r3, #16]
 545 0046 1046     		mov	r0, r2
 546 0048 1946     		mov	r1, r3
 547 004a FFF7FEFF 		bl	HAL_GPIO_ReadPin
 548 004e 0346     		mov	r3, r0
 549 0050 FB71     		strb	r3, [r7, #7]
 194:hd44780/hd44780.c **** 	enable(false);
 550              		.loc 1 194 0
 551 0052 0020     		movs	r0, #0
 552 0054 FFF7FEFF 		bl	enable
ARM GAS  /tmp/ccdIBtGv.s 			page 14


 195:hd44780/hd44780.c **** 	enable(true);
 553              		.loc 1 195 0
 554 0058 0120     		movs	r0, #1
 555 005a FFF7FEFF 		bl	enable
 196:hd44780/hd44780.c **** 
 197:hd44780/hd44780.c **** 	if (data == 1)
 556              		.loc 1 197 0
 557 005e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 558 0060 012B     		cmp	r3, #1
 559 0062 01D1     		bne	.L24
 198:hd44780/hd44780.c **** 		return (true);
 560              		.loc 1 198 0
 561 0064 0123     		movs	r3, #1
 562 0066 00E0     		b	.L25
 563              	.L24:
 199:hd44780/hd44780.c **** 
 200:hd44780/hd44780.c **** 	return (false);
 564              		.loc 1 200 0
 565 0068 0023     		movs	r3, #0
 566              	.L25:
 201:hd44780/hd44780.c **** 
 202:hd44780/hd44780.c **** }
 567              		.loc 1 202 0
 568 006a 1846     		mov	r0, r3
 569 006c 0837     		adds	r7, r7, #8
 570              	.LCFI28:
 571              		.cfi_def_cfa_offset 8
 572 006e BD46     		mov	sp, r7
 573              	.LCFI29:
 574              		.cfi_def_cfa_register 13
 575              		@ sp needed
 576 0070 80BD     		pop	{r7, pc}
 577              	.L27:
 578 0072 00BF     		.align	2
 579              	.L26:
 580 0074 00000000 		.word	Lcd_Conf
 581              		.cfi_endproc
 582              	.LFE68:
 584              		.section	.text.task_add,"ax",%progbits
 585              		.align	2
 586              		.thumb
 587              		.thumb_func
 589              	task_add:
 590              	.LFB69:
 203:hd44780/hd44780.c **** 
 204:hd44780/hd44780.c **** static void task_add(const hd44780_command_type command, const bool reg,
 205:hd44780/hd44780.c **** 		const uint16_t data, uint8_t nibbles) {
 591              		.loc 1 205 0
 592              		.cfi_startproc
 593              		@ args = 0, pretend = 0, frame = 8
 594              		@ frame_needed = 1, uses_anonymous_args = 0
 595              		@ link register save eliminated.
 596 0000 90B4     		push	{r4, r7}
 597              	.LCFI30:
 598              		.cfi_def_cfa_offset 8
 599              		.cfi_offset 4, -8
 600              		.cfi_offset 7, -4
ARM GAS  /tmp/ccdIBtGv.s 			page 15


 601 0002 82B0     		sub	sp, sp, #8
 602              	.LCFI31:
 603              		.cfi_def_cfa_offset 16
 604 0004 00AF     		add	r7, sp, #0
 605              	.LCFI32:
 606              		.cfi_def_cfa_register 7
 607 0006 0446     		mov	r4, r0
 608 0008 0846     		mov	r0, r1
 609 000a 1146     		mov	r1, r2
 610 000c 1A46     		mov	r2, r3
 611 000e 2346     		mov	r3, r4
 612 0010 FB71     		strb	r3, [r7, #7]
 613 0012 0346     		mov	r3, r0
 614 0014 BB71     		strb	r3, [r7, #6]
 615 0016 0B46     		mov	r3, r1	@ movhi
 616 0018 BB80     		strh	r3, [r7, #4]	@ movhi
 617 001a 1346     		mov	r3, r2
 618 001c FB70     		strb	r3, [r7, #3]
 206:hd44780/hd44780.c **** 
 207:hd44780/hd44780.c **** 	if (command == HD44780_WAIT_NOT_BUSY)
 619              		.loc 1 207 0
 620 001e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 621 0020 022B     		cmp	r3, #2
 622 0022 01D1     		bne	.L29
 208:hd44780/hd44780.c **** 		nibbles = 2;
 623              		.loc 1 208 0
 624 0024 0223     		movs	r3, #2
 625 0026 FB70     		strb	r3, [r7, #3]
 626              	.L29:
 209:hd44780/hd44780.c **** 
 210:hd44780/hd44780.c **** 	nibbles--;
 627              		.loc 1 210 0
 628 0028 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 629 002a 013B     		subs	r3, r3, #1
 630 002c FB70     		strb	r3, [r7, #3]
 211:hd44780/hd44780.c **** 
 212:hd44780/hd44780.c **** 	if (Queue_Head != (Queue_Tail + 1) % (HD44780_QUEUE_SIZE - 1)) {
 631              		.loc 1 212 0
 632 002e 2D4B     		ldr	r3, .L31
 633 0030 1B88     		ldrh	r3, [r3]	@ movhi
 634 0032 9BB2     		uxth	r3, r3
 635 0034 1846     		mov	r0, r3
 636 0036 2C4B     		ldr	r3, .L31+4
 637 0038 1B88     		ldrh	r3, [r3]	@ movhi
 638 003a 9BB2     		uxth	r3, r3
 639 003c 5A1C     		adds	r2, r3, #1
 640 003e 2B4B     		ldr	r3, .L31+8
 641 0040 83FB0213 		smull	r1, r3, r3, r2
 642 0044 9911     		asrs	r1, r3, #6
 643 0046 D317     		asrs	r3, r2, #31
 644 0048 CB1A     		subs	r3, r1, r3
 645 004a 40F2F311 		movw	r1, #499
 646 004e 01FB03F3 		mul	r3, r1, r3
 647 0052 D31A     		subs	r3, r2, r3
 648 0054 9842     		cmp	r0, r3
 649 0056 40D0     		beq	.L28
 213:hd44780/hd44780.c **** 		Queue[Queue_Tail].command = command;
ARM GAS  /tmp/ccdIBtGv.s 			page 16


 650              		.loc 1 213 0
 651 0058 234B     		ldr	r3, .L31+4
 652 005a 1B88     		ldrh	r3, [r3]	@ movhi
 653 005c 9BB2     		uxth	r3, r3
 654 005e 1946     		mov	r1, r3
 655 0060 234A     		ldr	r2, .L31+12
 656 0062 0B46     		mov	r3, r1
 657 0064 5B00     		lsls	r3, r3, #1
 658 0066 0B44     		add	r3, r3, r1
 659 0068 5B00     		lsls	r3, r3, #1
 660 006a 1344     		add	r3, r3, r2
 661 006c FA79     		ldrb	r2, [r7, #7]
 662 006e 1A70     		strb	r2, [r3]
 214:hd44780/hd44780.c **** 		Queue[Queue_Tail].reg = reg;
 663              		.loc 1 214 0
 664 0070 1D4B     		ldr	r3, .L31+4
 665 0072 1B88     		ldrh	r3, [r3]	@ movhi
 666 0074 9BB2     		uxth	r3, r3
 667 0076 1946     		mov	r1, r3
 668 0078 1D4A     		ldr	r2, .L31+12
 669 007a 0B46     		mov	r3, r1
 670 007c 5B00     		lsls	r3, r3, #1
 671 007e 0B44     		add	r3, r3, r1
 672 0080 5B00     		lsls	r3, r3, #1
 673 0082 1344     		add	r3, r3, r2
 674 0084 BA79     		ldrb	r2, [r7, #6]
 675 0086 5A70     		strb	r2, [r3, #1]
 215:hd44780/hd44780.c **** 		Queue[Queue_Tail].data = data;
 676              		.loc 1 215 0
 677 0088 174B     		ldr	r3, .L31+4
 678 008a 1B88     		ldrh	r3, [r3]	@ movhi
 679 008c 9BB2     		uxth	r3, r3
 680 008e 1946     		mov	r1, r3
 681 0090 174A     		ldr	r2, .L31+12
 682 0092 0B46     		mov	r3, r1
 683 0094 5B00     		lsls	r3, r3, #1
 684 0096 0B44     		add	r3, r3, r1
 685 0098 5B00     		lsls	r3, r3, #1
 686 009a 1344     		add	r3, r3, r2
 687 009c BA88     		ldrh	r2, [r7, #4]	@ movhi
 688 009e 5A80     		strh	r2, [r3, #2]	@ movhi
 216:hd44780/hd44780.c **** 		Queue[Queue_Tail].nibble = nibbles;
 689              		.loc 1 216 0
 690 00a0 114B     		ldr	r3, .L31+4
 691 00a2 1B88     		ldrh	r3, [r3]	@ movhi
 692 00a4 9BB2     		uxth	r3, r3
 693 00a6 1946     		mov	r1, r3
 694 00a8 114A     		ldr	r2, .L31+12
 695 00aa 0B46     		mov	r3, r1
 696 00ac 5B00     		lsls	r3, r3, #1
 697 00ae 0B44     		add	r3, r3, r1
 698 00b0 5B00     		lsls	r3, r3, #1
 699 00b2 1344     		add	r3, r3, r2
 700 00b4 FA78     		ldrb	r2, [r7, #3]
 701 00b6 1A71     		strb	r2, [r3, #4]
 217:hd44780/hd44780.c **** 		Queue_Tail = (uint16_t) (Queue_Tail + 1) % (HD44780_QUEUE_SIZE - 1);
 702              		.loc 1 217 0
ARM GAS  /tmp/ccdIBtGv.s 			page 17


 703 00b8 0B4B     		ldr	r3, .L31+4
 704 00ba 1B88     		ldrh	r3, [r3]	@ movhi
 705 00bc 9BB2     		uxth	r3, r3
 706 00be 0133     		adds	r3, r3, #1
 707 00c0 9BB2     		uxth	r3, r3
 708 00c2 0A4A     		ldr	r2, .L31+8
 709 00c4 A2FB0312 		umull	r1, r2, r2, r3
 710 00c8 9209     		lsrs	r2, r2, #6
 711 00ca 40F2F311 		movw	r1, #499
 712 00ce 01FB02F2 		mul	r2, r1, r2
 713 00d2 9B1A     		subs	r3, r3, r2
 714 00d4 9AB2     		uxth	r2, r3
 715 00d6 044B     		ldr	r3, .L31+4
 716 00d8 1A80     		strh	r2, [r3]	@ movhi
 717              	.L28:
 218:hd44780/hd44780.c **** 	} else
 219:hd44780/hd44780.c **** 		assert_param(false);
 220:hd44780/hd44780.c **** }
 718              		.loc 1 220 0
 719 00da 0837     		adds	r7, r7, #8
 720              	.LCFI33:
 721              		.cfi_def_cfa_offset 8
 722 00dc BD46     		mov	sp, r7
 723              	.LCFI34:
 724              		.cfi_def_cfa_register 13
 725              		@ sp needed
 726 00de 90BC     		pop	{r4, r7}
 727              	.LCFI35:
 728              		.cfi_restore 7
 729              		.cfi_restore 4
 730              		.cfi_def_cfa_offset 0
 731 00e0 7047     		bx	lr
 732              	.L32:
 733 00e2 00BF     		.align	2
 734              	.L31:
 735 00e4 00000000 		.word	Queue_Head
 736 00e8 00000000 		.word	Queue_Tail
 737 00ec 396BD520 		.word	550857529
 738 00f0 00000000 		.word	Queue
 739              		.cfi_endproc
 740              	.LFE69:
 742              		.section	.text.task_del,"ax",%progbits
 743              		.align	2
 744              		.thumb
 745              		.thumb_func
 747              	task_del:
 748              	.LFB70:
 221:hd44780/hd44780.c **** 
 222:hd44780/hd44780.c **** static void task_del(void) {
 749              		.loc 1 222 0
 750              		.cfi_startproc
 751              		@ args = 0, pretend = 0, frame = 0
 752              		@ frame_needed = 1, uses_anonymous_args = 0
 753              		@ link register save eliminated.
 754 0000 80B4     		push	{r7}
 755              	.LCFI36:
 756              		.cfi_def_cfa_offset 4
ARM GAS  /tmp/ccdIBtGv.s 			page 18


 757              		.cfi_offset 7, -4
 758 0002 00AF     		add	r7, sp, #0
 759              	.LCFI37:
 760              		.cfi_def_cfa_register 7
 223:hd44780/hd44780.c **** 
 224:hd44780/hd44780.c **** 	if (Queue_Head != Queue_Tail) {
 761              		.loc 1 224 0
 762 0004 0E4B     		ldr	r3, .L35
 763 0006 1B88     		ldrh	r3, [r3]	@ movhi
 764 0008 9AB2     		uxth	r2, r3
 765 000a 0E4B     		ldr	r3, .L35+4
 766 000c 1B88     		ldrh	r3, [r3]	@ movhi
 767 000e 9BB2     		uxth	r3, r3
 768 0010 9A42     		cmp	r2, r3
 769 0012 10D0     		beq	.L33
 225:hd44780/hd44780.c **** 		Queue_Head = (uint16_t) (Queue_Head + 1) % (HD44780_QUEUE_SIZE - 1);
 770              		.loc 1 225 0
 771 0014 0A4B     		ldr	r3, .L35
 772 0016 1B88     		ldrh	r3, [r3]	@ movhi
 773 0018 9BB2     		uxth	r3, r3
 774 001a 0133     		adds	r3, r3, #1
 775 001c 9BB2     		uxth	r3, r3
 776 001e 0A4A     		ldr	r2, .L35+8
 777 0020 A2FB0312 		umull	r1, r2, r2, r3
 778 0024 9209     		lsrs	r2, r2, #6
 779 0026 40F2F311 		movw	r1, #499
 780 002a 01FB02F2 		mul	r2, r1, r2
 781 002e 9B1A     		subs	r3, r3, r2
 782 0030 9AB2     		uxth	r2, r3
 783 0032 034B     		ldr	r3, .L35
 784 0034 1A80     		strh	r2, [r3]	@ movhi
 785              	.L33:
 226:hd44780/hd44780.c **** 	}
 227:hd44780/hd44780.c **** }
 786              		.loc 1 227 0
 787 0036 BD46     		mov	sp, r7
 788              	.LCFI38:
 789              		.cfi_def_cfa_register 13
 790              		@ sp needed
 791 0038 5DF8047B 		ldr	r7, [sp], #4
 792              	.LCFI39:
 793              		.cfi_restore 7
 794              		.cfi_def_cfa_offset 0
 795 003c 7047     		bx	lr
 796              	.L36:
 797 003e 00BF     		.align	2
 798              	.L35:
 799 0040 00000000 		.word	Queue_Head
 800 0044 00000000 		.word	Queue_Tail
 801 0048 396BD520 		.word	550857529
 802              		.cfi_endproc
 803              	.LFE70:
 805              		.section	.text.exec,"ax",%progbits
 806              		.align	2
 807              		.thumb
 808              		.thumb_func
 810              	exec:
ARM GAS  /tmp/ccdIBtGv.s 			page 19


 811              	.LFB71:
 228:hd44780/hd44780.c **** 
 229:hd44780/hd44780.c **** static void exec(void) {
 812              		.loc 1 229 0
 813              		.cfi_startproc
 814              		@ args = 0, pretend = 0, frame = 8
 815              		@ frame_needed = 1, uses_anonymous_args = 0
 816 0000 80B5     		push	{r7, lr}
 817              	.LCFI40:
 818              		.cfi_def_cfa_offset 8
 819              		.cfi_offset 7, -8
 820              		.cfi_offset 14, -4
 821 0002 82B0     		sub	sp, sp, #8
 822              	.LCFI41:
 823              		.cfi_def_cfa_offset 16
 824 0004 00AF     		add	r7, sp, #0
 825              	.LCFI42:
 826              		.cfi_def_cfa_register 7
 230:hd44780/hd44780.c **** 
 231:hd44780/hd44780.c **** 	volatile hd44780_task_type *task;
 232:hd44780/hd44780.c **** 
 233:hd44780/hd44780.c **** 	if (Queue_Head != Queue_Tail) {
 827              		.loc 1 233 0
 828 0006 324B     		ldr	r3, .L46
 829 0008 1B88     		ldrh	r3, [r3]	@ movhi
 830 000a 9AB2     		uxth	r2, r3
 831 000c 314B     		ldr	r3, .L46+4
 832 000e 1B88     		ldrh	r3, [r3]	@ movhi
 833 0010 9BB2     		uxth	r3, r3
 834 0012 9A42     		cmp	r2, r3
 835 0014 58D0     		beq	.L37
 234:hd44780/hd44780.c **** 		task = &Queue[Queue_Head];
 836              		.loc 1 234 0
 837 0016 2E4B     		ldr	r3, .L46
 838 0018 1B88     		ldrh	r3, [r3]	@ movhi
 839 001a 9BB2     		uxth	r3, r3
 840 001c 1A46     		mov	r2, r3
 841 001e 1346     		mov	r3, r2
 842 0020 5B00     		lsls	r3, r3, #1
 843 0022 1344     		add	r3, r3, r2
 844 0024 5B00     		lsls	r3, r3, #1
 845 0026 2C4A     		ldr	r2, .L46+8
 846 0028 1344     		add	r3, r3, r2
 847 002a 7B60     		str	r3, [r7, #4]
 235:hd44780/hd44780.c **** 		switch (task->command) {
 848              		.loc 1 235 0
 849 002c 7B68     		ldr	r3, [r7, #4]
 850 002e 1B78     		ldrb	r3, [r3]
 851 0030 DBB2     		uxtb	r3, r3
 852 0032 022B     		cmp	r3, #2
 853 0034 15D0     		beq	.L39
 854 0036 032B     		cmp	r3, #3
 855 0038 21D0     		beq	.L40
 856 003a 012B     		cmp	r3, #1
 857 003c 44D1     		bne	.L37
 236:hd44780/hd44780.c **** 		case HD44780_WAIT:
 237:hd44780/hd44780.c **** 			if (task->data > 0)
ARM GAS  /tmp/ccdIBtGv.s 			page 20


 858              		.loc 1 237 0
 859 003e 7B68     		ldr	r3, [r7, #4]
 860 0040 5B88     		ldrh	r3, [r3, #2]	@ movhi
 861 0042 9BB2     		uxth	r3, r3
 862 0044 002B     		cmp	r3, #0
 863 0046 07D0     		beq	.L42
 238:hd44780/hd44780.c **** 				task->data--;
 864              		.loc 1 238 0
 865 0048 7B68     		ldr	r3, [r7, #4]
 866 004a 5B88     		ldrh	r3, [r3, #2]	@ movhi
 867 004c 9BB2     		uxth	r3, r3
 868 004e 013B     		subs	r3, r3, #1
 869 0050 9AB2     		uxth	r2, r3
 870 0052 7B68     		ldr	r3, [r7, #4]
 871 0054 5A80     		strh	r2, [r3, #2]	@ movhi
 239:hd44780/hd44780.c **** 			else {
 240:hd44780/hd44780.c **** 				task_del();
 241:hd44780/hd44780.c **** 				exec();
 242:hd44780/hd44780.c **** 			}
 243:hd44780/hd44780.c **** 			break;
 872              		.loc 1 243 0
 873 0056 37E0     		b	.L37
 874              	.L42:
 240:hd44780/hd44780.c **** 				exec();
 875              		.loc 1 240 0
 876 0058 FFF7FEFF 		bl	task_del
 241:hd44780/hd44780.c **** 			}
 877              		.loc 1 241 0
 878 005c FFF7D0FF 		bl	exec
 879              		.loc 1 243 0
 880 0060 32E0     		b	.L37
 881              	.L39:
 244:hd44780/hd44780.c **** 		case HD44780_WAIT_NOT_BUSY:
 245:hd44780/hd44780.c **** 			if (!read_busy()) {
 882              		.loc 1 245 0
 883 0062 FFF7FEFF 		bl	read_busy
 884 0066 0346     		mov	r3, r0
 885 0068 83F00103 		eor	r3, r3, #1
 886 006c DBB2     		uxtb	r3, r3
 887 006e 002B     		cmp	r3, #0
 888 0070 04D0     		beq	.L44
 246:hd44780/hd44780.c **** 				task_del();
 889              		.loc 1 246 0
 890 0072 FFF7FEFF 		bl	task_del
 247:hd44780/hd44780.c **** 				exec();
 891              		.loc 1 247 0
 892 0076 FFF7C3FF 		bl	exec
 248:hd44780/hd44780.c **** 			}
 249:hd44780/hd44780.c **** 			break;
 893              		.loc 1 249 0
 894 007a 25E0     		b	.L37
 895              	.L44:
 896 007c 24E0     		b	.L37
 897              	.L40:
 250:hd44780/hd44780.c **** 		case HD44780_WRITE:
 251:hd44780/hd44780.c **** 			if (task->nibble == 1)
 898              		.loc 1 251 0
ARM GAS  /tmp/ccdIBtGv.s 			page 21


 899 007e 7B68     		ldr	r3, [r7, #4]
 900 0080 1B79     		ldrb	r3, [r3, #4]
 901 0082 DBB2     		uxtb	r3, r3
 902 0084 012B     		cmp	r3, #1
 903 0086 0CD1     		bne	.L45
 252:hd44780/hd44780.c **** 				write((uint8_t) (task->data >> 4), task->reg);
 904              		.loc 1 252 0
 905 0088 7B68     		ldr	r3, [r7, #4]
 906 008a 5B88     		ldrh	r3, [r3, #2]	@ movhi
 907 008c 9BB2     		uxth	r3, r3
 908 008e 1B09     		lsrs	r3, r3, #4
 909 0090 9BB2     		uxth	r3, r3
 910 0092 DAB2     		uxtb	r2, r3
 911 0094 7B68     		ldr	r3, [r7, #4]
 912 0096 5B78     		ldrb	r3, [r3, #1]
 913 0098 DBB2     		uxtb	r3, r3
 914 009a 1046     		mov	r0, r2
 915 009c 1946     		mov	r1, r3
 916 009e FFF7FEFF 		bl	write
 917              	.L45:
 253:hd44780/hd44780.c **** 			write(task->data & 0xf, task->reg);
 918              		.loc 1 253 0
 919 00a2 7B68     		ldr	r3, [r7, #4]
 920 00a4 5B88     		ldrh	r3, [r3, #2]	@ movhi
 921 00a6 9BB2     		uxth	r3, r3
 922 00a8 DBB2     		uxtb	r3, r3
 923 00aa 03F00F03 		and	r3, r3, #15
 924 00ae DAB2     		uxtb	r2, r3
 925 00b0 7B68     		ldr	r3, [r7, #4]
 926 00b2 5B78     		ldrb	r3, [r3, #1]
 927 00b4 DBB2     		uxtb	r3, r3
 928 00b6 1046     		mov	r0, r2
 929 00b8 1946     		mov	r1, r3
 930 00ba FFF7FEFF 		bl	write
 254:hd44780/hd44780.c **** 			task_del();
 931              		.loc 1 254 0
 932 00be FFF7FEFF 		bl	task_del
 255:hd44780/hd44780.c **** 			exec();
 933              		.loc 1 255 0
 934 00c2 FFF79DFF 		bl	exec
 256:hd44780/hd44780.c **** 			break;
 935              		.loc 1 256 0
 936 00c6 00BF     		nop
 937              	.L37:
 257:hd44780/hd44780.c **** 		}
 258:hd44780/hd44780.c **** 	}
 259:hd44780/hd44780.c **** }
 938              		.loc 1 259 0
 939 00c8 0837     		adds	r7, r7, #8
 940              	.LCFI43:
 941              		.cfi_def_cfa_offset 8
 942 00ca BD46     		mov	sp, r7
 943              	.LCFI44:
 944              		.cfi_def_cfa_register 13
 945              		@ sp needed
 946 00cc 80BD     		pop	{r7, pc}
 947              	.L47:
ARM GAS  /tmp/ccdIBtGv.s 			page 22


 948 00ce 00BF     		.align	2
 949              	.L46:
 950 00d0 00000000 		.word	Queue_Head
 951 00d4 00000000 		.word	Queue_Tail
 952 00d8 00000000 		.word	Queue
 953              		.cfi_endproc
 954              	.LFE71:
 956              		.section	.text.hd44780_brightness,"ax",%progbits
 957              		.align	2
 958              		.global	hd44780_brightness
 959              		.thumb
 960              		.thumb_func
 962              	hd44780_brightness:
 963              	.LFB72:
 260:hd44780/hd44780.c **** 
 261:hd44780/hd44780.c **** /**
 262:hd44780/hd44780.c ****  * Set the brightness
 263:hd44780/hd44780.c ****  *
 264:hd44780/hd44780.c ****  * @param brightness	0-100
 265:hd44780/hd44780.c ****  *
 266:hd44780/hd44780.c ****  */
 267:hd44780/hd44780.c **** void hd44780_brightness(const uint8_t brightness) {
 964              		.loc 1 267 0
 965              		.cfi_startproc
 966              		@ args = 0, pretend = 0, frame = 16
 967              		@ frame_needed = 1, uses_anonymous_args = 0
 968 0000 80B5     		push	{r7, lr}
 969              	.LCFI45:
 970              		.cfi_def_cfa_offset 8
 971              		.cfi_offset 7, -8
 972              		.cfi_offset 14, -4
 973 0002 84B0     		sub	sp, sp, #16
 974              	.LCFI46:
 975              		.cfi_def_cfa_offset 24
 976 0004 00AF     		add	r7, sp, #0
 977              	.LCFI47:
 978              		.cfi_def_cfa_register 7
 979 0006 0346     		mov	r3, r0
 980 0008 FB71     		strb	r3, [r7, #7]
 268:hd44780/hd44780.c **** 
 269:hd44780/hd44780.c **** 	uint32_t bright;
 270:hd44780/hd44780.c **** 
 271:hd44780/hd44780.c **** 	bright = (uint32_t) (100 - brightness);
 981              		.loc 1 271 0
 982 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 983 000c C3F16403 		rsb	r3, r3, #100
 984 0010 FB60     		str	r3, [r7, #12]
 272:hd44780/hd44780.c **** 	//bright *= BKL_PERIOD;
 273:hd44780/hd44780.c **** 	bright /= 100;
 985              		.loc 1 273 0
 986 0012 FB68     		ldr	r3, [r7, #12]
 987 0014 094A     		ldr	r2, .L49
 988 0016 A2FB0323 		umull	r2, r3, r2, r3
 989 001a 5B09     		lsrs	r3, r3, #5
 990 001c FB60     		str	r3, [r7, #12]
 274:hd44780/hd44780.c **** 	//__HAL_TIM_SetCompare(&Handle_Brigt, BKL_CHANNEL, bright);
 275:hd44780/hd44780.c **** 	HAL_GPIO_WritePin(GPIOA, GPIO_PIN_7, brightness ? GPIO_PIN_SET : GPIO_PIN_RESET);
ARM GAS  /tmp/ccdIBtGv.s 			page 23


 991              		.loc 1 275 0
 992 001e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 993 0020 002B     		cmp	r3, #0
 994 0022 14BF     		ite	ne
 995 0024 0123     		movne	r3, #1
 996 0026 0023     		moveq	r3, #0
 997 0028 DBB2     		uxtb	r3, r3
 998 002a 0548     		ldr	r0, .L49+4
 999 002c 8021     		movs	r1, #128
 1000 002e 1A46     		mov	r2, r3
 1001 0030 FFF7FEFF 		bl	HAL_GPIO_WritePin
 276:hd44780/hd44780.c **** }
 1002              		.loc 1 276 0
 1003 0034 1037     		adds	r7, r7, #16
 1004              	.LCFI48:
 1005              		.cfi_def_cfa_offset 8
 1006 0036 BD46     		mov	sp, r7
 1007              	.LCFI49:
 1008              		.cfi_def_cfa_register 13
 1009              		@ sp needed
 1010 0038 80BD     		pop	{r7, pc}
 1011              	.L50:
 1012 003a 00BF     		.align	2
 1013              	.L49:
 1014 003c 1F85EB51 		.word	1374389535
 1015 0040 00080140 		.word	1073809408
 1016              		.cfi_endproc
 1017              	.LFE72:
 1019              		.section	.text.hd44780_contrast,"ax",%progbits
 1020              		.align	2
 1021              		.global	hd44780_contrast
 1022              		.thumb
 1023              		.thumb_func
 1025              	hd44780_contrast:
 1026              	.LFB73:
 277:hd44780/hd44780.c **** 
 278:hd44780/hd44780.c **** /**
 279:hd44780/hd44780.c ****  * Set the contrast
 280:hd44780/hd44780.c ****  *
 281:hd44780/hd44780.c ****  * @param contrast	0-100
 282:hd44780/hd44780.c ****  *
 283:hd44780/hd44780.c ****  */
 284:hd44780/hd44780.c **** void hd44780_contrast(const uint8_t contrast) {
 1027              		.loc 1 284 0
 1028              		.cfi_startproc
 1029              		@ args = 0, pretend = 0, frame = 16
 1030              		@ frame_needed = 1, uses_anonymous_args = 0
 1031              		@ link register save eliminated.
 1032 0000 80B4     		push	{r7}
 1033              	.LCFI50:
 1034              		.cfi_def_cfa_offset 4
 1035              		.cfi_offset 7, -4
 1036 0002 85B0     		sub	sp, sp, #20
 1037              	.LCFI51:
 1038              		.cfi_def_cfa_offset 24
 1039 0004 00AF     		add	r7, sp, #0
 1040              	.LCFI52:
ARM GAS  /tmp/ccdIBtGv.s 			page 24


 1041              		.cfi_def_cfa_register 7
 1042 0006 0346     		mov	r3, r0
 1043 0008 FB71     		strb	r3, [r7, #7]
 285:hd44780/hd44780.c **** 
 286:hd44780/hd44780.c **** 	uint32_t cont;
 287:hd44780/hd44780.c **** 
 288:hd44780/hd44780.c **** 	cont = (uint32_t) (100 - contrast);
 1044              		.loc 1 288 0
 1045 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1046 000c C3F16403 		rsb	r3, r3, #100
 1047 0010 FB60     		str	r3, [r7, #12]
 289:hd44780/hd44780.c **** 	//cont *= BKL_PERIOD * 2;
 290:hd44780/hd44780.c **** 	cont /= 100;
 1048              		.loc 1 290 0
 1049 0012 FB68     		ldr	r3, [r7, #12]
 1050 0014 044A     		ldr	r2, .L52
 1051 0016 A2FB0323 		umull	r2, r3, r2, r3
 1052 001a 5B09     		lsrs	r3, r3, #5
 1053 001c FB60     		str	r3, [r7, #12]
 291:hd44780/hd44780.c **** 	//__HAL_TIM_SetCompare(&Handle_Con, CON_CHANNEL, cont);
 292:hd44780/hd44780.c **** }
 1054              		.loc 1 292 0
 1055 001e 1437     		adds	r7, r7, #20
 1056              	.LCFI53:
 1057              		.cfi_def_cfa_offset 4
 1058 0020 BD46     		mov	sp, r7
 1059              	.LCFI54:
 1060              		.cfi_def_cfa_register 13
 1061              		@ sp needed
 1062 0022 5DF8047B 		ldr	r7, [sp], #4
 1063              	.LCFI55:
 1064              		.cfi_restore 7
 1065              		.cfi_def_cfa_offset 0
 1066 0026 7047     		bx	lr
 1067              	.L53:
 1068              		.align	2
 1069              	.L52:
 1070 0028 1F85EB51 		.word	1374389535
 1071              		.cfi_endproc
 1072              	.LFE73:
 1074              		.section	.text.hd44780_clear,"ax",%progbits
 1075              		.align	2
 1076              		.global	hd44780_clear
 1077              		.thumb
 1078              		.thumb_func
 1080              	hd44780_clear:
 1081              	.LFB74:
 293:hd44780/hd44780.c **** 
 294:hd44780/hd44780.c **** /**
 295:hd44780/hd44780.c ****  * Clear the LCD
 296:hd44780/hd44780.c ****  */
 297:hd44780/hd44780.c **** void hd44780_clear(void) {
 1082              		.loc 1 297 0
 1083              		.cfi_startproc
 1084              		@ args = 0, pretend = 0, frame = 0
 1085              		@ frame_needed = 1, uses_anonymous_args = 0
 1086 0000 80B5     		push	{r7, lr}
ARM GAS  /tmp/ccdIBtGv.s 			page 25


 1087              	.LCFI56:
 1088              		.cfi_def_cfa_offset 8
 1089              		.cfi_offset 7, -8
 1090              		.cfi_offset 14, -4
 1091 0002 00AF     		add	r7, sp, #0
 1092              	.LCFI57:
 1093              		.cfi_def_cfa_register 7
 298:hd44780/hd44780.c **** 
 299:hd44780/hd44780.c **** 	task_add(HD44780_WRITE, true, HD44780_CLEAR, 2);
 1094              		.loc 1 299 0
 1095 0004 0320     		movs	r0, #3
 1096 0006 0121     		movs	r1, #1
 1097 0008 0122     		movs	r2, #1
 1098 000a 0223     		movs	r3, #2
 1099 000c FFF7FEFF 		bl	task_add
 300:hd44780/hd44780.c **** 	task_add(HD44780_WAIT_NOT_BUSY, NONE, NONE, NONE);
 1100              		.loc 1 300 0
 1101 0010 0220     		movs	r0, #2
 1102 0012 0021     		movs	r1, #0
 1103 0014 0022     		movs	r2, #0
 1104 0016 0023     		movs	r3, #0
 1105 0018 FFF7FEFF 		bl	task_add
 301:hd44780/hd44780.c **** }
 1106              		.loc 1 301 0
 1107 001c 80BD     		pop	{r7, pc}
 1108              		.cfi_endproc
 1109              	.LFE74:
 1111              		.section	.text.hd44780_home,"ax",%progbits
 1112              		.align	2
 1113              		.global	hd44780_home
 1114              		.thumb
 1115              		.thumb_func
 1117              	hd44780_home:
 1118              	.LFB75:
 302:hd44780/hd44780.c **** 
 303:hd44780/hd44780.c **** /**
 304:hd44780/hd44780.c ****  * Move cursor home
 305:hd44780/hd44780.c ****  */
 306:hd44780/hd44780.c **** void hd44780_home(void) {
 1119              		.loc 1 306 0
 1120              		.cfi_startproc
 1121              		@ args = 0, pretend = 0, frame = 0
 1122              		@ frame_needed = 1, uses_anonymous_args = 0
 1123 0000 80B5     		push	{r7, lr}
 1124              	.LCFI58:
 1125              		.cfi_def_cfa_offset 8
 1126              		.cfi_offset 7, -8
 1127              		.cfi_offset 14, -4
 1128 0002 00AF     		add	r7, sp, #0
 1129              	.LCFI59:
 1130              		.cfi_def_cfa_register 7
 307:hd44780/hd44780.c **** 
 308:hd44780/hd44780.c **** 	task_add(HD44780_WRITE, true, HD44780_HOME, 2);
 1131              		.loc 1 308 0
 1132 0004 0320     		movs	r0, #3
 1133 0006 0121     		movs	r1, #1
 1134 0008 0222     		movs	r2, #2
ARM GAS  /tmp/ccdIBtGv.s 			page 26


 1135 000a 0223     		movs	r3, #2
 1136 000c FFF7FEFF 		bl	task_add
 309:hd44780/hd44780.c **** 	task_add(HD44780_WAIT_NOT_BUSY, NONE, NONE, NONE);
 1137              		.loc 1 309 0
 1138 0010 0220     		movs	r0, #2
 1139 0012 0021     		movs	r1, #0
 1140 0014 0022     		movs	r2, #0
 1141 0016 0023     		movs	r3, #0
 1142 0018 FFF7FEFF 		bl	task_add
 310:hd44780/hd44780.c **** }
 1143              		.loc 1 310 0
 1144 001c 80BD     		pop	{r7, pc}
 1145              		.cfi_endproc
 1146              	.LFE75:
 1148              		.section	.text.hd44780_display,"ax",%progbits
 1149              		.align	2
 1150              		.global	hd44780_display
 1151              		.thumb
 1152              		.thumb_func
 1154              	hd44780_display:
 1155              	.LFB76:
 311:hd44780/hd44780.c **** 
 312:hd44780/hd44780.c **** /**
 313:hd44780/hd44780.c ****  * Display settings
 314:hd44780/hd44780.c ****  *
 315:hd44780/hd44780.c ****  * @param enable	LCD on/off
 316:hd44780/hd44780.c ****  * @param cursor	Cursor on/off
 317:hd44780/hd44780.c ****  * @param blink		Blinking cursor on/off
 318:hd44780/hd44780.c ****  *
 319:hd44780/hd44780.c ****  */
 320:hd44780/hd44780.c **** void hd44780_display(const bool enable, const bool cursor, const bool blink) {
 1156              		.loc 1 320 0
 1157              		.cfi_startproc
 1158              		@ args = 0, pretend = 0, frame = 16
 1159              		@ frame_needed = 1, uses_anonymous_args = 0
 1160 0000 80B5     		push	{r7, lr}
 1161              	.LCFI60:
 1162              		.cfi_def_cfa_offset 8
 1163              		.cfi_offset 7, -8
 1164              		.cfi_offset 14, -4
 1165 0002 84B0     		sub	sp, sp, #16
 1166              	.LCFI61:
 1167              		.cfi_def_cfa_offset 24
 1168 0004 00AF     		add	r7, sp, #0
 1169              	.LCFI62:
 1170              		.cfi_def_cfa_register 7
 1171 0006 0346     		mov	r3, r0
 1172 0008 FB71     		strb	r3, [r7, #7]
 1173 000a 0B46     		mov	r3, r1
 1174 000c BB71     		strb	r3, [r7, #6]
 1175 000e 1346     		mov	r3, r2
 1176 0010 7B71     		strb	r3, [r7, #5]
 321:hd44780/hd44780.c **** 
 322:hd44780/hd44780.c **** 	uint16_t command = HD44780_DISPLAY;
 1177              		.loc 1 322 0
 1178 0012 0823     		movs	r3, #8
 1179 0014 FB81     		strh	r3, [r7, #14]	@ movhi
ARM GAS  /tmp/ccdIBtGv.s 			page 27


 323:hd44780/hd44780.c **** 
 324:hd44780/hd44780.c **** 	if (enable)
 1180              		.loc 1 324 0
 1181 0016 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1182 0018 002B     		cmp	r3, #0
 1183 001a 04D0     		beq	.L57
 325:hd44780/hd44780.c **** 		command |= HD44780_DISPLAY_ON;
 1184              		.loc 1 325 0
 1185 001c FB89     		ldrh	r3, [r7, #14]	@ movhi
 1186 001e 43F00403 		orr	r3, r3, #4
 1187 0022 FB81     		strh	r3, [r7, #14]	@ movhi
 1188 0024 06E0     		b	.L58
 1189              	.L57:
 326:hd44780/hd44780.c **** 	else {
 327:hd44780/hd44780.c **** 		Queue_Head = Queue_Tail = 0;
 1190              		.loc 1 327 0
 1191 0026 0021     		movs	r1, #0
 1192 0028 114B     		ldr	r3, .L61
 1193 002a 0A46     		mov	r2, r1	@ movhi
 1194 002c 1A80     		strh	r2, [r3]	@ movhi
 1195 002e 114B     		ldr	r3, .L61+4
 1196 0030 0A46     		mov	r2, r1	@ movhi
 1197 0032 1A80     		strh	r2, [r3]	@ movhi
 1198              	.L58:
 328:hd44780/hd44780.c **** 	}
 329:hd44780/hd44780.c **** 	if (cursor)
 1199              		.loc 1 329 0
 1200 0034 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 1201 0036 002B     		cmp	r3, #0
 1202 0038 03D0     		beq	.L59
 330:hd44780/hd44780.c **** 		command |= HD44780_CURSOR_ON;
 1203              		.loc 1 330 0
 1204 003a FB89     		ldrh	r3, [r7, #14]	@ movhi
 1205 003c 43F00203 		orr	r3, r3, #2
 1206 0040 FB81     		strh	r3, [r7, #14]	@ movhi
 1207              	.L59:
 331:hd44780/hd44780.c **** 	if (blink)
 1208              		.loc 1 331 0
 1209 0042 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 1210 0044 002B     		cmp	r3, #0
 1211 0046 03D0     		beq	.L60
 332:hd44780/hd44780.c **** 		command |= HD44780_BLINK_ON;
 1212              		.loc 1 332 0
 1213 0048 FB89     		ldrh	r3, [r7, #14]	@ movhi
 1214 004a 43F00103 		orr	r3, r3, #1
 1215 004e FB81     		strh	r3, [r7, #14]	@ movhi
 1216              	.L60:
 333:hd44780/hd44780.c **** 
 334:hd44780/hd44780.c **** 	task_add(HD44780_WRITE, true, command, 2);
 1217              		.loc 1 334 0
 1218 0050 FB89     		ldrh	r3, [r7, #14]
 1219 0052 0320     		movs	r0, #3
 1220 0054 0121     		movs	r1, #1
 1221 0056 1A46     		mov	r2, r3
 1222 0058 0223     		movs	r3, #2
 1223 005a FFF7FEFF 		bl	task_add
 335:hd44780/hd44780.c **** 	task_add(HD44780_WAIT_NOT_BUSY, NONE, NONE, NONE);
ARM GAS  /tmp/ccdIBtGv.s 			page 28


 1224              		.loc 1 335 0
 1225 005e 0220     		movs	r0, #2
 1226 0060 0021     		movs	r1, #0
 1227 0062 0022     		movs	r2, #0
 1228 0064 0023     		movs	r3, #0
 1229 0066 FFF7FEFF 		bl	task_add
 336:hd44780/hd44780.c **** }
 1230              		.loc 1 336 0
 1231 006a 1037     		adds	r7, r7, #16
 1232              	.LCFI63:
 1233              		.cfi_def_cfa_offset 8
 1234 006c BD46     		mov	sp, r7
 1235              	.LCFI64:
 1236              		.cfi_def_cfa_register 13
 1237              		@ sp needed
 1238 006e 80BD     		pop	{r7, pc}
 1239              	.L62:
 1240              		.align	2
 1241              	.L61:
 1242 0070 00000000 		.word	Queue_Tail
 1243 0074 00000000 		.word	Queue_Head
 1244              		.cfi_endproc
 1245              	.LFE76:
 1247              		.section	.rodata
 1248              		.align	2
 1249              	.LC0:
 1250 0000 00       		.byte	0
 1251 0001 40       		.byte	64
 1252 0002 14       		.byte	20
 1253 0003 54       		.byte	84
 1254              		.section	.text.hd44780_position,"ax",%progbits
 1255              		.align	2
 1256              		.global	hd44780_position
 1257              		.thumb
 1258              		.thumb_func
 1260              	hd44780_position:
 1261              	.LFB77:
 337:hd44780/hd44780.c **** 
 338:hd44780/hd44780.c **** /**
 339:hd44780/hd44780.c ****  * Position the cursor
 340:hd44780/hd44780.c ****  *
 341:hd44780/hd44780.c ****  * @param row	Row
 342:hd44780/hd44780.c ****  * @param col	Column
 343:hd44780/hd44780.c ****  */
 344:hd44780/hd44780.c **** void hd44780_position(const uint8_t row, const uint8_t col) {
 1262              		.loc 1 344 0
 1263              		.cfi_startproc
 1264              		@ args = 0, pretend = 0, frame = 16
 1265              		@ frame_needed = 1, uses_anonymous_args = 0
 1266 0000 80B5     		push	{r7, lr}
 1267              	.LCFI65:
 1268              		.cfi_def_cfa_offset 8
 1269              		.cfi_offset 7, -8
 1270              		.cfi_offset 14, -4
 1271 0002 84B0     		sub	sp, sp, #16
 1272              	.LCFI66:
 1273              		.cfi_def_cfa_offset 24
ARM GAS  /tmp/ccdIBtGv.s 			page 29


 1274 0004 00AF     		add	r7, sp, #0
 1275              	.LCFI67:
 1276              		.cfi_def_cfa_register 7
 1277 0006 0346     		mov	r3, r0
 1278 0008 0A46     		mov	r2, r1
 1279 000a FB71     		strb	r3, [r7, #7]
 1280 000c 1346     		mov	r3, r2
 1281 000e BB71     		strb	r3, [r7, #6]
 345:hd44780/hd44780.c **** 
 346:hd44780/hd44780.c **** 	uint16_t command = HD44780_DGRAM;
 1282              		.loc 1 346 0
 1283 0010 8023     		movs	r3, #128
 1284 0012 FB81     		strh	r3, [r7, #14]	@ movhi
 347:hd44780/hd44780.c **** 	const uint8_t offsets[] = { 0x00, 0x40, 0x14, 0x54 };
 1285              		.loc 1 347 0
 1286 0014 114A     		ldr	r2, .L64
 1287 0016 07F10803 		add	r3, r7, #8
 1288 001a 1068     		ldr	r0, [r2]	@ unaligned
 1289 001c 1860     		str	r0, [r3]	@ unaligned
 348:hd44780/hd44780.c **** 
 349:hd44780/hd44780.c **** 	command |= (uint16_t) (col + offsets[row]);
 1290              		.loc 1 349 0
 1291 001e BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 1292 0020 9AB2     		uxth	r2, r3
 1293 0022 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1294 0024 07F11001 		add	r1, r7, #16
 1295 0028 0B44     		add	r3, r3, r1
 1296 002a 13F8083C 		ldrb	r3, [r3, #-8]	@ zero_extendqisi2
 1297 002e 9BB2     		uxth	r3, r3
 1298 0030 1344     		add	r3, r3, r2
 1299 0032 9AB2     		uxth	r2, r3
 1300 0034 FB89     		ldrh	r3, [r7, #14]	@ movhi
 1301 0036 1343     		orrs	r3, r3, r2
 1302 0038 FB81     		strh	r3, [r7, #14]	@ movhi
 350:hd44780/hd44780.c **** 	task_add(HD44780_WRITE, true, command, 2);
 1303              		.loc 1 350 0
 1304 003a FB89     		ldrh	r3, [r7, #14]
 1305 003c 0320     		movs	r0, #3
 1306 003e 0121     		movs	r1, #1
 1307 0040 1A46     		mov	r2, r3
 1308 0042 0223     		movs	r3, #2
 1309 0044 FFF7FEFF 		bl	task_add
 351:hd44780/hd44780.c **** 	task_add(HD44780_WAIT_NOT_BUSY, NONE, NONE, NONE);
 1310              		.loc 1 351 0
 1311 0048 0220     		movs	r0, #2
 1312 004a 0021     		movs	r1, #0
 1313 004c 0022     		movs	r2, #0
 1314 004e 0023     		movs	r3, #0
 1315 0050 FFF7FEFF 		bl	task_add
 352:hd44780/hd44780.c **** }
 1316              		.loc 1 352 0
 1317 0054 1037     		adds	r7, r7, #16
 1318              	.LCFI68:
 1319              		.cfi_def_cfa_offset 8
 1320 0056 BD46     		mov	sp, r7
 1321              	.LCFI69:
 1322              		.cfi_def_cfa_register 13
ARM GAS  /tmp/ccdIBtGv.s 			page 30


 1323              		@ sp needed
 1324 0058 80BD     		pop	{r7, pc}
 1325              	.L65:
 1326 005a 00BF     		.align	2
 1327              	.L64:
 1328 005c 00000000 		.word	.LC0
 1329              		.cfi_endproc
 1330              	.LFE77:
 1332              		.section	.text.hd44780_cgram,"ax",%progbits
 1333              		.align	2
 1334              		.global	hd44780_cgram
 1335              		.thumb
 1336              		.thumb_func
 1338              	hd44780_cgram:
 1339              	.LFB78:
 353:hd44780/hd44780.c **** 
 354:hd44780/hd44780.c **** /**
 355:hd44780/hd44780.c ****  * Set a UDG
 356:hd44780/hd44780.c ****  *
 357:hd44780/hd44780.c ****  * @param pos	UDG number
 358:hd44780/hd44780.c ****  * @param udg	UDG definition
 359:hd44780/hd44780.c ****  */
 360:hd44780/hd44780.c **** void hd44780_cgram(const uint8_t pos, const char udg[8]) {
 1340              		.loc 1 360 0
 1341              		.cfi_startproc
 1342              		@ args = 0, pretend = 0, frame = 16
 1343              		@ frame_needed = 1, uses_anonymous_args = 0
 1344 0000 80B5     		push	{r7, lr}
 1345              	.LCFI70:
 1346              		.cfi_def_cfa_offset 8
 1347              		.cfi_offset 7, -8
 1348              		.cfi_offset 14, -4
 1349 0002 84B0     		sub	sp, sp, #16
 1350              	.LCFI71:
 1351              		.cfi_def_cfa_offset 24
 1352 0004 00AF     		add	r7, sp, #0
 1353              	.LCFI72:
 1354              		.cfi_def_cfa_register 7
 1355 0006 0346     		mov	r3, r0
 1356 0008 3960     		str	r1, [r7]
 1357 000a FB71     		strb	r3, [r7, #7]
 361:hd44780/hd44780.c **** 
 362:hd44780/hd44780.c **** 	uint8_t i;
 363:hd44780/hd44780.c **** 	uint16_t command = HD44780_CGRAM;
 1358              		.loc 1 363 0
 1359 000c 4023     		movs	r3, #64
 1360 000e BB81     		strh	r3, [r7, #12]	@ movhi
 364:hd44780/hd44780.c **** 
 365:hd44780/hd44780.c **** 	assert_param(pos < 8);
 366:hd44780/hd44780.c **** 
 367:hd44780/hd44780.c **** 	command |= (uint16_t) (pos * 8);
 1361              		.loc 1 367 0
 1362 0010 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1363 0012 9BB2     		uxth	r3, r3
 1364 0014 DB00     		lsls	r3, r3, #3
 1365 0016 9AB2     		uxth	r2, r3
 1366 0018 BB89     		ldrh	r3, [r7, #12]	@ movhi
ARM GAS  /tmp/ccdIBtGv.s 			page 31


 1367 001a 1343     		orrs	r3, r3, r2
 1368 001c BB81     		strh	r3, [r7, #12]	@ movhi
 368:hd44780/hd44780.c **** 
 369:hd44780/hd44780.c **** 	task_add(HD44780_WRITE, true, command, 2);
 1369              		.loc 1 369 0
 1370 001e BB89     		ldrh	r3, [r7, #12]
 1371 0020 0320     		movs	r0, #3
 1372 0022 0121     		movs	r1, #1
 1373 0024 1A46     		mov	r2, r3
 1374 0026 0223     		movs	r3, #2
 1375 0028 FFF7FEFF 		bl	task_add
 370:hd44780/hd44780.c **** 	task_add(HD44780_WAIT, true, 1, 1);
 1376              		.loc 1 370 0
 1377 002c 0120     		movs	r0, #1
 1378 002e 0121     		movs	r1, #1
 1379 0030 0122     		movs	r2, #1
 1380 0032 0123     		movs	r3, #1
 1381 0034 FFF7FEFF 		bl	task_add
 371:hd44780/hd44780.c **** 	for (i = 0; i < 8; i++) {
 1382              		.loc 1 371 0
 1383 0038 0023     		movs	r3, #0
 1384 003a FB73     		strb	r3, [r7, #15]
 1385 003c 13E0     		b	.L67
 1386              	.L68:
 372:hd44780/hd44780.c **** 		task_add(HD44780_WRITE, false, (uint16_t) udg[i], 2);
 1387              		.loc 1 372 0 discriminator 3
 1388 003e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1389 0040 3A68     		ldr	r2, [r7]
 1390 0042 1344     		add	r3, r3, r2
 1391 0044 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1392 0046 9BB2     		uxth	r3, r3
 1393 0048 0320     		movs	r0, #3
 1394 004a 0021     		movs	r1, #0
 1395 004c 1A46     		mov	r2, r3
 1396 004e 0223     		movs	r3, #2
 1397 0050 FFF7FEFF 		bl	task_add
 373:hd44780/hd44780.c **** 		task_add(HD44780_WAIT_NOT_BUSY, NONE, NONE, NONE);
 1398              		.loc 1 373 0 discriminator 3
 1399 0054 0220     		movs	r0, #2
 1400 0056 0021     		movs	r1, #0
 1401 0058 0022     		movs	r2, #0
 1402 005a 0023     		movs	r3, #0
 1403 005c FFF7FEFF 		bl	task_add
 371:hd44780/hd44780.c **** 	for (i = 0; i < 8; i++) {
 1404              		.loc 1 371 0 discriminator 3
 1405 0060 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1406 0062 0133     		adds	r3, r3, #1
 1407 0064 FB73     		strb	r3, [r7, #15]
 1408              	.L67:
 371:hd44780/hd44780.c **** 	for (i = 0; i < 8; i++) {
 1409              		.loc 1 371 0 is_stmt 0 discriminator 1
 1410 0066 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1411 0068 072B     		cmp	r3, #7
 1412 006a E8D9     		bls	.L68
 374:hd44780/hd44780.c **** 	}
 375:hd44780/hd44780.c **** }
 1413              		.loc 1 375 0 is_stmt 1
ARM GAS  /tmp/ccdIBtGv.s 			page 32


 1414 006c 1037     		adds	r7, r7, #16
 1415              	.LCFI73:
 1416              		.cfi_def_cfa_offset 8
 1417 006e BD46     		mov	sp, r7
 1418              	.LCFI74:
 1419              		.cfi_def_cfa_register 13
 1420              		@ sp needed
 1421 0070 80BD     		pop	{r7, pc}
 1422              		.cfi_endproc
 1423              	.LFE78:
 1425 0072 00BF     		.section	.text.hd44780_put,"ax",%progbits
 1426              		.align	2
 1427              		.global	hd44780_put
 1428              		.thumb
 1429              		.thumb_func
 1431              	hd44780_put:
 1432              	.LFB79:
 376:hd44780/hd44780.c **** 
 377:hd44780/hd44780.c **** /**
 378:hd44780/hd44780.c ****  * Send a single character to the LCD
 379:hd44780/hd44780.c ****  *
 380:hd44780/hd44780.c ****  * @param chr	Character to send
 381:hd44780/hd44780.c ****  */
 382:hd44780/hd44780.c **** void hd44780_put(const char chr) {
 1433              		.loc 1 382 0
 1434              		.cfi_startproc
 1435              		@ args = 0, pretend = 0, frame = 8
 1436              		@ frame_needed = 1, uses_anonymous_args = 0
 1437 0000 80B5     		push	{r7, lr}
 1438              	.LCFI75:
 1439              		.cfi_def_cfa_offset 8
 1440              		.cfi_offset 7, -8
 1441              		.cfi_offset 14, -4
 1442 0002 82B0     		sub	sp, sp, #8
 1443              	.LCFI76:
 1444              		.cfi_def_cfa_offset 16
 1445 0004 00AF     		add	r7, sp, #0
 1446              	.LCFI77:
 1447              		.cfi_def_cfa_register 7
 1448 0006 0346     		mov	r3, r0
 1449 0008 FB71     		strb	r3, [r7, #7]
 383:hd44780/hd44780.c **** 
 384:hd44780/hd44780.c **** 	task_add(HD44780_WRITE, false, (uint16_t) chr, 2);
 1450              		.loc 1 384 0
 1451 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1452 000c 9BB2     		uxth	r3, r3
 1453 000e 0320     		movs	r0, #3
 1454 0010 0021     		movs	r1, #0
 1455 0012 1A46     		mov	r2, r3
 1456 0014 0223     		movs	r3, #2
 1457 0016 FFF7FEFF 		bl	task_add
 385:hd44780/hd44780.c **** 	task_add(HD44780_WAIT_NOT_BUSY, NONE, NONE, NONE);
 1458              		.loc 1 385 0
 1459 001a 0220     		movs	r0, #2
 1460 001c 0021     		movs	r1, #0
 1461 001e 0022     		movs	r2, #0
 1462 0020 0023     		movs	r3, #0
ARM GAS  /tmp/ccdIBtGv.s 			page 33


 1463 0022 FFF7FEFF 		bl	task_add
 386:hd44780/hd44780.c **** }
 1464              		.loc 1 386 0
 1465 0026 0837     		adds	r7, r7, #8
 1466              	.LCFI78:
 1467              		.cfi_def_cfa_offset 8
 1468 0028 BD46     		mov	sp, r7
 1469              	.LCFI79:
 1470              		.cfi_def_cfa_register 13
 1471              		@ sp needed
 1472 002a 80BD     		pop	{r7, pc}
 1473              		.cfi_endproc
 1474              	.LFE79:
 1476              		.section	.text.hd44780_print,"ax",%progbits
 1477              		.align	2
 1478              		.global	hd44780_print
 1479              		.thumb
 1480              		.thumb_func
 1482              	hd44780_print:
 1483              	.LFB80:
 387:hd44780/hd44780.c **** 
 388:hd44780/hd44780.c **** /**
 389:hd44780/hd44780.c ****  * Send a string to the LCD
 390:hd44780/hd44780.c ****  *
 391:hd44780/hd44780.c ****  * @param string	String to send
 392:hd44780/hd44780.c ****  */
 393:hd44780/hd44780.c **** void hd44780_print(const char *string) {
 1484              		.loc 1 393 0
 1485              		.cfi_startproc
 1486              		@ args = 0, pretend = 0, frame = 16
 1487              		@ frame_needed = 1, uses_anonymous_args = 0
 1488 0000 80B5     		push	{r7, lr}
 1489              	.LCFI80:
 1490              		.cfi_def_cfa_offset 8
 1491              		.cfi_offset 7, -8
 1492              		.cfi_offset 14, -4
 1493 0002 84B0     		sub	sp, sp, #16
 1494              	.LCFI81:
 1495              		.cfi_def_cfa_offset 24
 1496 0004 00AF     		add	r7, sp, #0
 1497              	.LCFI82:
 1498              		.cfi_def_cfa_register 7
 1499 0006 7860     		str	r0, [r7, #4]
 394:hd44780/hd44780.c **** 
 395:hd44780/hd44780.c **** 	uint8_t i = 0;
 1500              		.loc 1 395 0
 1501 0008 0023     		movs	r3, #0
 1502 000a FB73     		strb	r3, [r7, #15]
 396:hd44780/hd44780.c **** 
 397:hd44780/hd44780.c **** 	while (string[i]) {
 1503              		.loc 1 397 0
 1504 000c 13E0     		b	.L71
 1505              	.L72:
 398:hd44780/hd44780.c **** 		task_add(HD44780_WRITE, false, (uint16_t) string[i], 2);
 1506              		.loc 1 398 0
 1507 000e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1508 0010 7A68     		ldr	r2, [r7, #4]
ARM GAS  /tmp/ccdIBtGv.s 			page 34


 1509 0012 1344     		add	r3, r3, r2
 1510 0014 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1511 0016 9BB2     		uxth	r3, r3
 1512 0018 0320     		movs	r0, #3
 1513 001a 0021     		movs	r1, #0
 1514 001c 1A46     		mov	r2, r3
 1515 001e 0223     		movs	r3, #2
 1516 0020 FFF7FEFF 		bl	task_add
 399:hd44780/hd44780.c **** 		task_add(HD44780_WAIT_NOT_BUSY, NONE, NONE, NONE);
 1517              		.loc 1 399 0
 1518 0024 0220     		movs	r0, #2
 1519 0026 0021     		movs	r1, #0
 1520 0028 0022     		movs	r2, #0
 1521 002a 0023     		movs	r3, #0
 1522 002c FFF7FEFF 		bl	task_add
 400:hd44780/hd44780.c **** 		i++;
 1523              		.loc 1 400 0
 1524 0030 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1525 0032 0133     		adds	r3, r3, #1
 1526 0034 FB73     		strb	r3, [r7, #15]
 1527              	.L71:
 397:hd44780/hd44780.c **** 		task_add(HD44780_WRITE, false, (uint16_t) string[i], 2);
 1528              		.loc 1 397 0
 1529 0036 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1530 0038 7A68     		ldr	r2, [r7, #4]
 1531 003a 1344     		add	r3, r3, r2
 1532 003c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1533 003e 002B     		cmp	r3, #0
 1534 0040 E5D1     		bne	.L72
 401:hd44780/hd44780.c **** 	}
 402:hd44780/hd44780.c **** }
 1535              		.loc 1 402 0
 1536 0042 1037     		adds	r7, r7, #16
 1537              	.LCFI83:
 1538              		.cfi_def_cfa_offset 8
 1539 0044 BD46     		mov	sp, r7
 1540              	.LCFI84:
 1541              		.cfi_def_cfa_register 13
 1542              		@ sp needed
 1543 0046 80BD     		pop	{r7, pc}
 1544              		.cfi_endproc
 1545              	.LFE80:
 1547              		.section	.text.hd44780_printf,"ax",%progbits
 1548              		.align	2
 1549              		.global	hd44780_printf
 1550              		.thumb
 1551              		.thumb_func
 1553              	hd44780_printf:
 1554              	.LFB81:
 403:hd44780/hd44780.c **** 
 404:hd44780/hd44780.c **** /**
 405:hd44780/hd44780.c ****  * Send a formatted string to the LCD
 406:hd44780/hd44780.c ****  *
 407:hd44780/hd44780.c ****  * @param fmt	String format
 408:hd44780/hd44780.c ****  * @param ...	Variable arguments (see printf())
 409:hd44780/hd44780.c ****  */
 410:hd44780/hd44780.c **** void hd44780_printf(const char *fmt, ...) {
ARM GAS  /tmp/ccdIBtGv.s 			page 35


 1555              		.loc 1 410 0
 1556              		.cfi_startproc
 1557              		@ args = 4, pretend = 16, frame = 48
 1558              		@ frame_needed = 1, uses_anonymous_args = 1
 1559 0000 0FB4     		push	{r0, r1, r2, r3}
 1560              	.LCFI85:
 1561              		.cfi_def_cfa_offset 16
 1562              		.cfi_offset 0, -16
 1563              		.cfi_offset 1, -12
 1564              		.cfi_offset 2, -8
 1565              		.cfi_offset 3, -4
 1566 0002 80B5     		push	{r7, lr}
 1567              	.LCFI86:
 1568              		.cfi_def_cfa_offset 24
 1569              		.cfi_offset 7, -24
 1570              		.cfi_offset 14, -20
 1571 0004 8CB0     		sub	sp, sp, #48
 1572              	.LCFI87:
 1573              		.cfi_def_cfa_offset 72
 1574 0006 00AF     		add	r7, sp, #0
 1575              	.LCFI88:
 1576              		.cfi_def_cfa_register 7
 411:hd44780/hd44780.c **** 
 412:hd44780/hd44780.c **** 	int i;
 413:hd44780/hd44780.c **** 	int size;
 414:hd44780/hd44780.c **** 	char character;
 415:hd44780/hd44780.c **** 	char buffer[32];
 416:hd44780/hd44780.c **** 	va_list args;
 417:hd44780/hd44780.c **** 
 418:hd44780/hd44780.c **** 	va_start(args, fmt);
 1577              		.loc 1 418 0
 1578 0008 07F13C03 		add	r3, r7, #60
 1579 000c 3B60     		str	r3, [r7]
 419:hd44780/hd44780.c **** 	size = vsprintf(buffer, fmt, args);
 1580              		.loc 1 419 0
 1581 000e 3B1D     		adds	r3, r7, #4
 1582 0010 1846     		mov	r0, r3
 1583 0012 B96B     		ldr	r1, [r7, #56]
 1584 0014 3A68     		ldr	r2, [r7]
 1585 0016 FFF7FEFF 		bl	vsprintf
 1586 001a B862     		str	r0, [r7, #40]
 420:hd44780/hd44780.c **** 
 421:hd44780/hd44780.c **** 	for (i = 0; i < size; i++) {
 1587              		.loc 1 421 0
 1588 001c 0023     		movs	r3, #0
 1589 001e FB62     		str	r3, [r7, #44]
 1590 0020 12E0     		b	.L74
 1591              	.L77:
 422:hd44780/hd44780.c **** 		character = buffer[i];
 1592              		.loc 1 422 0
 1593 0022 3A1D     		adds	r2, r7, #4
 1594 0024 FB6A     		ldr	r3, [r7, #44]
 1595 0026 1344     		add	r3, r3, r2
 1596 0028 1B78     		ldrb	r3, [r3]
 1597 002a 87F82730 		strb	r3, [r7, #39]
 423:hd44780/hd44780.c **** 
 424:hd44780/hd44780.c **** 		if (character == 10)
ARM GAS  /tmp/ccdIBtGv.s 			page 36


 1598              		.loc 1 424 0
 1599 002e 97F82730 		ldrb	r3, [r7, #39]	@ zero_extendqisi2
 1600 0032 0A2B     		cmp	r3, #10
 1601 0034 00D1     		bne	.L75
 425:hd44780/hd44780.c **** 			break;
 1602              		.loc 1 425 0
 1603 0036 0BE0     		b	.L73
 1604              	.L75:
 426:hd44780/hd44780.c **** 		else
 427:hd44780/hd44780.c **** 			hd44780_put(character);
 1605              		.loc 1 427 0 discriminator 2
 1606 0038 97F82730 		ldrb	r3, [r7, #39]	@ zero_extendqisi2
 1607 003c 1846     		mov	r0, r3
 1608 003e FFF7FEFF 		bl	hd44780_put
 421:hd44780/hd44780.c **** 		character = buffer[i];
 1609              		.loc 1 421 0 discriminator 2
 1610 0042 FB6A     		ldr	r3, [r7, #44]
 1611 0044 0133     		adds	r3, r3, #1
 1612 0046 FB62     		str	r3, [r7, #44]
 1613              	.L74:
 421:hd44780/hd44780.c **** 		character = buffer[i];
 1614              		.loc 1 421 0 is_stmt 0 discriminator 1
 1615 0048 FA6A     		ldr	r2, [r7, #44]
 1616 004a BB6A     		ldr	r3, [r7, #40]
 1617 004c 9A42     		cmp	r2, r3
 1618 004e E8DB     		blt	.L77
 1619              	.L73:
 428:hd44780/hd44780.c **** 	}
 429:hd44780/hd44780.c **** 	va_end(args);
 430:hd44780/hd44780.c **** }
 1620              		.loc 1 430 0 is_stmt 1
 1621 0050 3037     		adds	r7, r7, #48
 1622              	.LCFI89:
 1623              		.cfi_def_cfa_offset 24
 1624 0052 BD46     		mov	sp, r7
 1625              	.LCFI90:
 1626              		.cfi_def_cfa_register 13
 1627              		@ sp needed
 1628 0054 BDE88040 		pop	{r7, lr}
 1629              	.LCFI91:
 1630              		.cfi_restore 14
 1631              		.cfi_restore 7
 1632              		.cfi_def_cfa_offset 16
 1633 0058 04B0     		add	sp, sp, #16
 1634              	.LCFI92:
 1635              		.cfi_restore 3
 1636              		.cfi_restore 2
 1637              		.cfi_restore 1
 1638              		.cfi_restore 0
 1639              		.cfi_def_cfa_offset 0
 1640 005a 7047     		bx	lr
 1641              		.cfi_endproc
 1642              	.LFE81:
 1644              		.section	.text.hd44780_init,"ax",%progbits
 1645              		.align	2
 1646              		.global	hd44780_init
 1647              		.thumb
ARM GAS  /tmp/ccdIBtGv.s 			page 37


 1648              		.thumb_func
 1650              	hd44780_init:
 1651              	.LFB82:
 431:hd44780/hd44780.c **** 
 432:hd44780/hd44780.c **** /**
 433:hd44780/hd44780.c ****  * Initialise the LCD
 434:hd44780/hd44780.c ****  *
 435:hd44780/hd44780.c ****  * @param gpio	GPIO Port
 436:hd44780/hd44780.c ****  * @param rs	RS line
 437:hd44780/hd44780.c ****  * @param rw	RW line
 438:hd44780/hd44780.c ****  * @param e		E line
 439:hd44780/hd44780.c ****  * @param db4	DB4 line
 440:hd44780/hd44780.c ****  * @param db5	DB5 line
 441:hd44780/hd44780.c ****  * @param db6	DB6 line
 442:hd44780/hd44780.c ****  * @param db7	DB7 line
 443:hd44780/hd44780.c ****  * @param lines	Lines
 444:hd44780/hd44780.c ****  * @param font	Font
 445:hd44780/hd44780.c ****  */
 446:hd44780/hd44780.c **** void hd44780_init(GPIO_TypeDef *gpio, const uint16_t rs, const uint16_t rw,
 447:hd44780/hd44780.c **** 		const uint16_t e, const uint16_t db4, const uint16_t db5,
 448:hd44780/hd44780.c **** 		const uint16_t db6, const uint16_t db7, const hd44780_lines_type lines,
 449:hd44780/hd44780.c **** 		const hd44780_font_type font) {
 1652              		.loc 1 449 0
 1653              		.cfi_startproc
 1654              		@ args = 24, pretend = 0, frame = 40
 1655              		@ frame_needed = 1, uses_anonymous_args = 0
 1656 0000 80B5     		push	{r7, lr}
 1657              	.LCFI93:
 1658              		.cfi_def_cfa_offset 8
 1659              		.cfi_offset 7, -8
 1660              		.cfi_offset 14, -4
 1661 0002 8AB0     		sub	sp, sp, #40
 1662              	.LCFI94:
 1663              		.cfi_def_cfa_offset 48
 1664 0004 00AF     		add	r7, sp, #0
 1665              	.LCFI95:
 1666              		.cfi_def_cfa_register 7
 1667 0006 F860     		str	r0, [r7, #12]
 1668 0008 0846     		mov	r0, r1
 1669 000a 1146     		mov	r1, r2
 1670 000c 1A46     		mov	r2, r3
 1671 000e 0346     		mov	r3, r0	@ movhi
 1672 0010 7B81     		strh	r3, [r7, #10]	@ movhi
 1673 0012 0B46     		mov	r3, r1	@ movhi
 1674 0014 3B81     		strh	r3, [r7, #8]	@ movhi
 1675 0016 1346     		mov	r3, r2	@ movhi
 1676 0018 FB80     		strh	r3, [r7, #6]	@ movhi
 450:hd44780/hd44780.c **** 
 451:hd44780/hd44780.c **** 	assert_param(IS_GPIO_ALL_INSTANCE(gpio));
 452:hd44780/hd44780.c **** 	assert_param(IS_GPIO_PIN(rs));
 453:hd44780/hd44780.c **** 	assert_param(IS_GPIO_PIN(rw));
 454:hd44780/hd44780.c **** 	assert_param(IS_GPIO_PIN(e));
 455:hd44780/hd44780.c **** 	assert_param(IS_GPIO_PIN(db4));
 456:hd44780/hd44780.c **** 	assert_param(IS_GPIO_PIN(db5));
 457:hd44780/hd44780.c **** 	assert_param(IS_GPIO_PIN(db6));
 458:hd44780/hd44780.c **** 	assert_param(IS_GPIO_PIN(db7));
 459:hd44780/hd44780.c **** 
ARM GAS  /tmp/ccdIBtGv.s 			page 38


 460:hd44780/hd44780.c **** 	Lcd_Conf.gpio = gpio;
 1677              		.loc 1 460 0
 1678 001a 894A     		ldr	r2, .L86
 1679 001c FB68     		ldr	r3, [r7, #12]
 1680 001e 1360     		str	r3, [r2]
 461:hd44780/hd44780.c **** 	Lcd_Conf.rs = rs;
 1681              		.loc 1 461 0
 1682 0020 874A     		ldr	r2, .L86
 1683 0022 7B89     		ldrh	r3, [r7, #10]	@ movhi
 1684 0024 9380     		strh	r3, [r2, #4]	@ movhi
 462:hd44780/hd44780.c **** 	Lcd_Conf.rw = rw;
 1685              		.loc 1 462 0
 1686 0026 864A     		ldr	r2, .L86
 1687 0028 3B89     		ldrh	r3, [r7, #8]	@ movhi
 1688 002a D380     		strh	r3, [r2, #6]	@ movhi
 463:hd44780/hd44780.c **** 	Lcd_Conf.e = e;
 1689              		.loc 1 463 0
 1690 002c 844A     		ldr	r2, .L86
 1691 002e FB88     		ldrh	r3, [r7, #6]	@ movhi
 1692 0030 1381     		strh	r3, [r2, #8]	@ movhi
 464:hd44780/hd44780.c **** 	Lcd_Conf.db4 = db4;
 1693              		.loc 1 464 0
 1694 0032 834A     		ldr	r2, .L86
 1695 0034 3B8E     		ldrh	r3, [r7, #48]	@ movhi
 1696 0036 5381     		strh	r3, [r2, #10]	@ movhi
 465:hd44780/hd44780.c **** 	Lcd_Conf.db5 = db5;
 1697              		.loc 1 465 0
 1698 0038 814A     		ldr	r2, .L86
 1699 003a BB8E     		ldrh	r3, [r7, #52]	@ movhi
 1700 003c 9381     		strh	r3, [r2, #12]	@ movhi
 466:hd44780/hd44780.c **** 	Lcd_Conf.db6 = db6;
 1701              		.loc 1 466 0
 1702 003e 804A     		ldr	r2, .L86
 1703 0040 3B8F     		ldrh	r3, [r7, #56]	@ movhi
 1704 0042 D381     		strh	r3, [r2, #14]	@ movhi
 467:hd44780/hd44780.c **** 	Lcd_Conf.db7 = db7;
 1705              		.loc 1 467 0
 1706 0044 7E4A     		ldr	r2, .L86
 1707 0046 BB8F     		ldrh	r3, [r7, #60]	@ movhi
 1708 0048 1382     		strh	r3, [r2, #16]	@ movhi
 468:hd44780/hd44780.c **** 	Lcd_Conf.lines = lines;
 1709              		.loc 1 468 0
 1710 004a 7D4A     		ldr	r2, .L86
 1711 004c 97F84030 		ldrb	r3, [r7, #64]
 1712 0050 9374     		strb	r3, [r2, #18]
 469:hd44780/hd44780.c **** 	Lcd_Conf.font = font;
 1713              		.loc 1 469 0
 1714 0052 7B4A     		ldr	r2, .L86
 1715 0054 97F84430 		ldrb	r3, [r7, #68]
 1716 0058 D374     		strb	r3, [r2, #19]
 470:hd44780/hd44780.c **** 
 471:hd44780/hd44780.c **** 	if (gpio == GPIOA)
 1717              		.loc 1 471 0
 1718 005a FB68     		ldr	r3, [r7, #12]
 1719 005c 794A     		ldr	r2, .L86+4
 1720 005e 9342     		cmp	r3, r2
 1721 0060 0CD1     		bne	.L79
ARM GAS  /tmp/ccdIBtGv.s 			page 39


 1722              	.LBB3:
 472:hd44780/hd44780.c **** 		__GPIOA_CLK_ENABLE();
 1723              		.loc 1 472 0
 1724 0062 794A     		ldr	r2, .L86+8
 1725 0064 784B     		ldr	r3, .L86+8
 1726 0066 9B69     		ldr	r3, [r3, #24]
 1727 0068 43F00403 		orr	r3, r3, #4
 1728 006c 9361     		str	r3, [r2, #24]
 1729 006e 764B     		ldr	r3, .L86+8
 1730 0070 9B69     		ldr	r3, [r3, #24]
 1731 0072 03F00403 		and	r3, r3, #4
 1732 0076 7B62     		str	r3, [r7, #36]
 1733 0078 7B6A     		ldr	r3, [r7, #36]
 1734              	.LBE3:
 1735 007a 44E0     		b	.L80
 1736              	.L79:
 473:hd44780/hd44780.c **** 	else if (gpio == GPIOB)
 1737              		.loc 1 473 0
 1738 007c FB68     		ldr	r3, [r7, #12]
 1739 007e 734A     		ldr	r2, .L86+12
 1740 0080 9342     		cmp	r3, r2
 1741 0082 0CD1     		bne	.L81
 1742              	.LBB4:
 474:hd44780/hd44780.c **** 		__GPIOB_CLK_ENABLE();
 1743              		.loc 1 474 0
 1744 0084 704A     		ldr	r2, .L86+8
 1745 0086 704B     		ldr	r3, .L86+8
 1746 0088 9B69     		ldr	r3, [r3, #24]
 1747 008a 43F00803 		orr	r3, r3, #8
 1748 008e 9361     		str	r3, [r2, #24]
 1749 0090 6D4B     		ldr	r3, .L86+8
 1750 0092 9B69     		ldr	r3, [r3, #24]
 1751 0094 03F00803 		and	r3, r3, #8
 1752 0098 3B62     		str	r3, [r7, #32]
 1753 009a 3B6A     		ldr	r3, [r7, #32]
 1754              	.LBE4:
 1755 009c 33E0     		b	.L80
 1756              	.L81:
 475:hd44780/hd44780.c **** 	else if (gpio == GPIOC)
 1757              		.loc 1 475 0
 1758 009e FB68     		ldr	r3, [r7, #12]
 1759 00a0 6B4A     		ldr	r2, .L86+16
 1760 00a2 9342     		cmp	r3, r2
 1761 00a4 0CD1     		bne	.L82
 1762              	.LBB5:
 476:hd44780/hd44780.c **** 		__GPIOC_CLK_ENABLE();
 1763              		.loc 1 476 0
 1764 00a6 684A     		ldr	r2, .L86+8
 1765 00a8 674B     		ldr	r3, .L86+8
 1766 00aa 9B69     		ldr	r3, [r3, #24]
 1767 00ac 43F01003 		orr	r3, r3, #16
 1768 00b0 9361     		str	r3, [r2, #24]
 1769 00b2 654B     		ldr	r3, .L86+8
 1770 00b4 9B69     		ldr	r3, [r3, #24]
 1771 00b6 03F01003 		and	r3, r3, #16
 1772 00ba FB61     		str	r3, [r7, #28]
 1773 00bc FB69     		ldr	r3, [r7, #28]
ARM GAS  /tmp/ccdIBtGv.s 			page 40


 1774              	.LBE5:
 1775 00be 22E0     		b	.L80
 1776              	.L82:
 477:hd44780/hd44780.c **** 	else if (gpio == GPIOD)
 1777              		.loc 1 477 0
 1778 00c0 FB68     		ldr	r3, [r7, #12]
 1779 00c2 644A     		ldr	r2, .L86+20
 1780 00c4 9342     		cmp	r3, r2
 1781 00c6 0CD1     		bne	.L83
 1782              	.LBB6:
 478:hd44780/hd44780.c **** 		__GPIOD_CLK_ENABLE();
 1783              		.loc 1 478 0
 1784 00c8 5F4A     		ldr	r2, .L86+8
 1785 00ca 5F4B     		ldr	r3, .L86+8
 1786 00cc 9B69     		ldr	r3, [r3, #24]
 1787 00ce 43F02003 		orr	r3, r3, #32
 1788 00d2 9361     		str	r3, [r2, #24]
 1789 00d4 5C4B     		ldr	r3, .L86+8
 1790 00d6 9B69     		ldr	r3, [r3, #24]
 1791 00d8 03F02003 		and	r3, r3, #32
 1792 00dc BB61     		str	r3, [r7, #24]
 1793 00de BB69     		ldr	r3, [r7, #24]
 1794              	.LBE6:
 1795 00e0 11E0     		b	.L80
 1796              	.L83:
 479:hd44780/hd44780.c **** 	else if (gpio == GPIOE)
 1797              		.loc 1 479 0
 1798 00e2 FB68     		ldr	r3, [r7, #12]
 1799 00e4 5C4A     		ldr	r2, .L86+24
 1800 00e6 9342     		cmp	r3, r2
 1801 00e8 0CD1     		bne	.L84
 1802              	.LBB7:
 480:hd44780/hd44780.c **** 		__GPIOE_CLK_ENABLE();
 1803              		.loc 1 480 0
 1804 00ea 574A     		ldr	r2, .L86+8
 1805 00ec 564B     		ldr	r3, .L86+8
 1806 00ee 9B69     		ldr	r3, [r3, #24]
 1807 00f0 43F04003 		orr	r3, r3, #64
 1808 00f4 9361     		str	r3, [r2, #24]
 1809 00f6 544B     		ldr	r3, .L86+8
 1810 00f8 9B69     		ldr	r3, [r3, #24]
 1811 00fa 03F04003 		and	r3, r3, #64
 1812 00fe 7B61     		str	r3, [r7, #20]
 1813 0100 7B69     		ldr	r3, [r7, #20]
 1814              	.LBE7:
 1815 0102 00E0     		b	.L80
 1816              	.L84:
 481:hd44780/hd44780.c **** 	else
 482:hd44780/hd44780.c **** 		return;
 1817              		.loc 1 482 0
 1818 0104 99E0     		b	.L78
 1819              	.L80:
 483:hd44780/hd44780.c **** 
 484:hd44780/hd44780.c **** 	init_delay();
 1820              		.loc 1 484 0
 1821 0106 FFF7FEFF 		bl	init_delay
 1822              	.LBB8:
ARM GAS  /tmp/ccdIBtGv.s 			page 41


 485:hd44780/hd44780.c **** 
 486:hd44780/hd44780.c **** 	HD44780_CLK_EN();
 1823              		.loc 1 486 0
 1824 010a 4F4A     		ldr	r2, .L86+8
 1825 010c 4E4B     		ldr	r3, .L86+8
 1826 010e DB69     		ldr	r3, [r3, #28]
 1827 0110 43F00203 		orr	r3, r3, #2
 1828 0114 D361     		str	r3, [r2, #28]
 1829 0116 4C4B     		ldr	r3, .L86+8
 1830 0118 DB69     		ldr	r3, [r3, #28]
 1831 011a 03F00203 		and	r3, r3, #2
 1832 011e 3B61     		str	r3, [r7, #16]
 1833 0120 3B69     		ldr	r3, [r7, #16]
 1834              	.LBE8:
 487:hd44780/hd44780.c **** 	HAL_NVIC_SetPriority(HD44780_IRQ, 0, HD44780_PRIORITY);
 1835              		.loc 1 487 0
 1836 0122 1D20     		movs	r0, #29
 1837 0124 0021     		movs	r1, #0
 1838 0126 0122     		movs	r2, #1
 1839 0128 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 488:hd44780/hd44780.c **** 	HAL_NVIC_EnableIRQ(HD44780_IRQ);
 1840              		.loc 1 488 0
 1841 012c 1D20     		movs	r0, #29
 1842 012e FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 489:hd44780/hd44780.c **** 
 490:hd44780/hd44780.c **** 	Handle_Lcd.Instance = HD44780_TIMER;
 1843              		.loc 1 490 0
 1844 0132 4A4B     		ldr	r3, .L86+28
 1845 0134 4A4A     		ldr	r2, .L86+32
 1846 0136 1A60     		str	r2, [r3]
 491:hd44780/hd44780.c **** 	Handle_Lcd.Init.Period = (62500 / HD44780_QUEUE_FREQ) - 1;
 1847              		.loc 1 491 0
 1848 0138 484B     		ldr	r3, .L86+28
 1849 013a 0B22     		movs	r2, #11
 1850 013c DA60     		str	r2, [r3, #12]
 492:hd44780/hd44780.c **** 	Handle_Lcd.Init.Prescaler = ((HAL_RCC_GetHCLKFreq() / 2) / 62500) - 1;
 1851              		.loc 1 492 0
 1852 013e FFF7FEFF 		bl	HAL_RCC_GetHCLKFreq
 1853 0142 0246     		mov	r2, r0
 1854 0144 474B     		ldr	r3, .L86+36
 1855 0146 A3FB0223 		umull	r2, r3, r3, r2
 1856 014a DB0B     		lsrs	r3, r3, #15
 1857 014c 013B     		subs	r3, r3, #1
 1858 014e 434A     		ldr	r2, .L86+28
 1859 0150 5360     		str	r3, [r2, #4]
 493:hd44780/hd44780.c **** 	Handle_Lcd.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 1860              		.loc 1 493 0
 1861 0152 424B     		ldr	r3, .L86+28
 1862 0154 0022     		movs	r2, #0
 1863 0156 1A61     		str	r2, [r3, #16]
 494:hd44780/hd44780.c **** 	Handle_Lcd.Init.CounterMode = TIM_COUNTERMODE_UP;
 1864              		.loc 1 494 0
 1865 0158 404B     		ldr	r3, .L86+28
 1866 015a 0022     		movs	r2, #0
 1867 015c 9A60     		str	r2, [r3, #8]
 495:hd44780/hd44780.c **** 	HAL_TIM_Base_Init(&Handle_Lcd);
 1868              		.loc 1 495 0
ARM GAS  /tmp/ccdIBtGv.s 			page 42


 1869 015e 3F48     		ldr	r0, .L86+28
 1870 0160 FFF7FEFF 		bl	HAL_TIM_Base_Init
 496:hd44780/hd44780.c **** 	HAL_TIM_Base_Start_IT(&Handle_Lcd);
 1871              		.loc 1 496 0
 1872 0164 3D48     		ldr	r0, .L86+28
 1873 0166 FFF7FEFF 		bl	HAL_TIM_Base_Start_IT
 497:hd44780/hd44780.c **** 
 498:hd44780/hd44780.c **** 	task_add(HD44780_WAIT, true, 100, 1);
 1874              		.loc 1 498 0
 1875 016a 0120     		movs	r0, #1
 1876 016c 0121     		movs	r1, #1
 1877 016e 6422     		movs	r2, #100
 1878 0170 0123     		movs	r3, #1
 1879 0172 FFF7FEFF 		bl	task_add
 499:hd44780/hd44780.c **** 	task_add(HD44780_WRITE, true, 3, 1);
 1880              		.loc 1 499 0
 1881 0176 0320     		movs	r0, #3
 1882 0178 0121     		movs	r1, #1
 1883 017a 0322     		movs	r2, #3
 1884 017c 0123     		movs	r3, #1
 1885 017e FFF7FEFF 		bl	task_add
 500:hd44780/hd44780.c **** 	task_add(HD44780_WAIT, NONE, 5, NONE);
 1886              		.loc 1 500 0
 1887 0182 0120     		movs	r0, #1
 1888 0184 0021     		movs	r1, #0
 1889 0186 0522     		movs	r2, #5
 1890 0188 0023     		movs	r3, #0
 1891 018a FFF7FEFF 		bl	task_add
 501:hd44780/hd44780.c **** 	task_add(HD44780_WRITE, true, 3, 1);
 1892              		.loc 1 501 0
 1893 018e 0320     		movs	r0, #3
 1894 0190 0121     		movs	r1, #1
 1895 0192 0322     		movs	r2, #3
 1896 0194 0123     		movs	r3, #1
 1897 0196 FFF7FEFF 		bl	task_add
 502:hd44780/hd44780.c **** 	task_add(HD44780_WAIT, NONE, 1, NONE);
 1898              		.loc 1 502 0
 1899 019a 0120     		movs	r0, #1
 1900 019c 0021     		movs	r1, #0
 1901 019e 0122     		movs	r2, #1
 1902 01a0 0023     		movs	r3, #0
 1903 01a2 FFF7FEFF 		bl	task_add
 503:hd44780/hd44780.c **** 	task_add(HD44780_WRITE, true, 3, 1);
 1904              		.loc 1 503 0
 1905 01a6 0320     		movs	r0, #3
 1906 01a8 0121     		movs	r1, #1
 1907 01aa 0322     		movs	r2, #3
 1908 01ac 0123     		movs	r3, #1
 1909 01ae FFF7FEFF 		bl	task_add
 504:hd44780/hd44780.c **** 	task_add(HD44780_WAIT, NONE, 1, NONE);
 1910              		.loc 1 504 0
 1911 01b2 0120     		movs	r0, #1
 1912 01b4 0021     		movs	r1, #0
 1913 01b6 0122     		movs	r2, #1
 1914 01b8 0023     		movs	r3, #0
 1915 01ba FFF7FEFF 		bl	task_add
 505:hd44780/hd44780.c **** 	task_add(HD44780_WRITE, true, 2, 1);
ARM GAS  /tmp/ccdIBtGv.s 			page 43


 1916              		.loc 1 505 0
 1917 01be 0320     		movs	r0, #3
 1918 01c0 0121     		movs	r1, #1
 1919 01c2 0222     		movs	r2, #2
 1920 01c4 0123     		movs	r3, #1
 1921 01c6 FFF7FEFF 		bl	task_add
 506:hd44780/hd44780.c **** 	task_add(HD44780_WAIT, NONE, 1, NONE);
 1922              		.loc 1 506 0
 1923 01ca 0120     		movs	r0, #1
 1924 01cc 0021     		movs	r1, #0
 1925 01ce 0122     		movs	r2, #1
 1926 01d0 0023     		movs	r3, #0
 1927 01d2 FFF7FEFF 		bl	task_add
 507:hd44780/hd44780.c **** 	task_add(HD44780_WRITE, true,
 508:hd44780/hd44780.c **** 	HD44780_FUNCTION | HD44780_4BIT | Lcd_Conf.lines | Lcd_Conf.font, 2);
 1928              		.loc 1 508 0
 1929 01d6 1A4B     		ldr	r3, .L86
 1930 01d8 9A7C     		ldrb	r2, [r3, #18]	@ zero_extendqisi2
 1931 01da 194B     		ldr	r3, .L86
 1932 01dc DB7C     		ldrb	r3, [r3, #19]	@ zero_extendqisi2
 507:hd44780/hd44780.c **** 	task_add(HD44780_WRITE, true,
 1933              		.loc 1 507 0
 1934 01de 1343     		orrs	r3, r3, r2
 1935 01e0 DBB2     		uxtb	r3, r3
 1936 01e2 43F02003 		orr	r3, r3, #32
 1937 01e6 DBB2     		uxtb	r3, r3
 1938 01e8 9BB2     		uxth	r3, r3
 1939 01ea 0320     		movs	r0, #3
 1940 01ec 0121     		movs	r1, #1
 1941 01ee 1A46     		mov	r2, r3
 1942 01f0 0223     		movs	r3, #2
 1943 01f2 FFF7FEFF 		bl	task_add
 509:hd44780/hd44780.c **** 	task_add(HD44780_WAIT, NONE, 1, NONE);
 1944              		.loc 1 509 0
 1945 01f6 0120     		movs	r0, #1
 1946 01f8 0021     		movs	r1, #0
 1947 01fa 0122     		movs	r2, #1
 1948 01fc 0023     		movs	r3, #0
 1949 01fe FFF7FEFF 		bl	task_add
 510:hd44780/hd44780.c **** 	task_add(HD44780_WRITE, true,
 1950              		.loc 1 510 0
 1951 0202 0320     		movs	r0, #3
 1952 0204 0121     		movs	r1, #1
 1953 0206 0C22     		movs	r2, #12
 1954 0208 0223     		movs	r3, #2
 1955 020a FFF7FEFF 		bl	task_add
 511:hd44780/hd44780.c **** 	HD44780_DISPLAY | HD44780_DISPLAY_ON | !HD44780_CURSOR_ON, 2);
 512:hd44780/hd44780.c **** 	task_add(HD44780_WAIT, NONE, 1, NONE);
 1956              		.loc 1 512 0
 1957 020e 0120     		movs	r0, #1
 1958 0210 0021     		movs	r1, #0
 1959 0212 0122     		movs	r2, #1
 1960 0214 0023     		movs	r3, #0
 1961 0216 FFF7FEFF 		bl	task_add
 513:hd44780/hd44780.c **** 	task_add(HD44780_WRITE, true, HD44780_ENTRY | HDD44780_ENTRY_LEFT, 2);
 1962              		.loc 1 513 0
 1963 021a 0320     		movs	r0, #3
ARM GAS  /tmp/ccdIBtGv.s 			page 44


 1964 021c 0121     		movs	r1, #1
 1965 021e 0622     		movs	r2, #6
 1966 0220 0223     		movs	r3, #2
 1967 0222 FFF7FEFF 		bl	task_add
 514:hd44780/hd44780.c **** 	task_add(HD44780_WAIT_NOT_BUSY, NONE, NONE, NONE);
 1968              		.loc 1 514 0
 1969 0226 0220     		movs	r0, #2
 1970 0228 0021     		movs	r1, #0
 1971 022a 0022     		movs	r2, #0
 1972 022c 0023     		movs	r3, #0
 1973 022e FFF7FEFF 		bl	task_add
 515:hd44780/hd44780.c **** 	hd44780_clear();
 1974              		.loc 1 515 0
 1975 0232 FFF7FEFF 		bl	hd44780_clear
 516:hd44780/hd44780.c **** 	hd44780_home();
 1976              		.loc 1 516 0
 1977 0236 FFF7FEFF 		bl	hd44780_home
 1978              	.L78:
 517:hd44780/hd44780.c **** }
 1979              		.loc 1 517 0
 1980 023a 2837     		adds	r7, r7, #40
 1981              	.LCFI96:
 1982              		.cfi_def_cfa_offset 8
 1983 023c BD46     		mov	sp, r7
 1984              	.LCFI97:
 1985              		.cfi_def_cfa_register 13
 1986              		@ sp needed
 1987 023e 80BD     		pop	{r7, pc}
 1988              	.L87:
 1989              		.align	2
 1990              	.L86:
 1991 0240 00000000 		.word	Lcd_Conf
 1992 0244 00080140 		.word	1073809408
 1993 0248 00100240 		.word	1073876992
 1994 024c 000C0140 		.word	1073810432
 1995 0250 00100140 		.word	1073811456
 1996 0254 00140140 		.word	1073812480
 1997 0258 00180140 		.word	1073813504
 1998 025c 00000000 		.word	Handle_Lcd
 1999 0260 00040040 		.word	1073742848
 2000 0264 83DE1B43 		.word	1125899907
 2001              		.cfi_endproc
 2002              	.LFE82:
 2004              		.section	.text.hd44780_init_brightness,"ax",%progbits
 2005              		.align	2
 2006              		.global	hd44780_init_brightness
 2007              		.thumb
 2008              		.thumb_func
 2010              	hd44780_init_brightness:
 2011              	.LFB83:
 518:hd44780/hd44780.c **** 
 519:hd44780/hd44780.c **** /**
 520:hd44780/hd44780.c ****  * Initialise the brightness control
 521:hd44780/hd44780.c ****  *
 522:hd44780/hd44780.c ****  */
 523:hd44780/hd44780.c **** void hd44780_init_brightness(void) {
 2012              		.loc 1 523 0
ARM GAS  /tmp/ccdIBtGv.s 			page 45


 2013              		.cfi_startproc
 2014              		@ args = 0, pretend = 0, frame = 0
 2015              		@ frame_needed = 1, uses_anonymous_args = 0
 2016              		@ link register save eliminated.
 2017 0000 80B4     		push	{r7}
 2018              	.LCFI98:
 2019              		.cfi_def_cfa_offset 4
 2020              		.cfi_offset 7, -4
 2021 0002 00AF     		add	r7, sp, #0
 2022              	.LCFI99:
 2023              		.cfi_def_cfa_register 7
 524:hd44780/hd44780.c **** 
 525:hd44780/hd44780.c ****     //GPIO_InitTypeDef gpio;
 526:hd44780/hd44780.c **** //	TIM_OC_InitTypeDef oc;
 527:hd44780/hd44780.c **** 
 528:hd44780/hd44780.c **** 	//BKL_GPIO_EN();
 529:hd44780/hd44780.c **** 	//gpio.Pin = BKL_PIN;
 530:hd44780/hd44780.c **** 	//gpio.Mode = GPIO_MODE_AF_OD;
 531:hd44780/hd44780.c **** 	//gpio.Pull = GPIO_NOPULL;
 532:hd44780/hd44780.c **** 	//gpio.Speed = GPIO_SPEED_MEDIUM;
 533:hd44780/hd44780.c **** 	//gpio.Alternate = BKL_AF;
 534:hd44780/hd44780.c **** 	//HAL_GPIO_Init(BKL_GPIO, &gpio);
 535:hd44780/hd44780.c **** //
 536:hd44780/hd44780.c **** //	BKL_CLK_EN();
 537:hd44780/hd44780.c **** //	Handle_Brigt.Instance = BKL_TIMER;
 538:hd44780/hd44780.c **** //	Handle_Brigt.Init.Period = BKL_PERIOD;
 539:hd44780/hd44780.c **** //	Handle_Brigt.Init.Prescaler = 1 - 1;
 540:hd44780/hd44780.c **** //	Handle_Brigt.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 541:hd44780/hd44780.c **** //	Handle_Brigt.Init.CounterMode = TIM_COUNTERMODE_UP;
 542:hd44780/hd44780.c **** //	HAL_TIM_PWM_Init(&Handle_Brigt);
 543:hd44780/hd44780.c **** 
 544:hd44780/hd44780.c **** //	oc.OCMode = TIM_OCMODE_PWM1;
 545:hd44780/hd44780.c ****     //oc.OCIdleState = TIM_OCIDLESTATE_SET;
 546:hd44780/hd44780.c ****     //oc.OCNIdleState = TIM_OCNIDLESTATE_RESET;
 547:hd44780/hd44780.c ****     //oc.Pulse = 0;
 548:hd44780/hd44780.c ****     //oc.OCPolarity = TIM_OCPOLARITY_HIGH;
 549:hd44780/hd44780.c ****     //oc.OCNPolarity = TIM_OCNPOLARITY_HIGH;
 550:hd44780/hd44780.c **** 
 551:hd44780/hd44780.c **** 	//HAL_TIM_PWM_ConfigChannel(&Handle_Brigt, &oc,
 552:hd44780/hd44780.c **** 	//BKL_CHANNEL);
 553:hd44780/hd44780.c **** 	//HAL_TIM_PWM_Start(&Handle_Brigt, BKL_CHANNEL);
 554:hd44780/hd44780.c **** }
 2024              		.loc 1 554 0
 2025 0004 BD46     		mov	sp, r7
 2026              	.LCFI100:
 2027              		.cfi_def_cfa_register 13
 2028              		@ sp needed
 2029 0006 5DF8047B 		ldr	r7, [sp], #4
 2030              	.LCFI101:
 2031              		.cfi_restore 7
 2032              		.cfi_def_cfa_offset 0
 2033 000a 7047     		bx	lr
 2034              		.cfi_endproc
 2035              	.LFE83:
 2037              		.section	.text.hd44780_init_contrast,"ax",%progbits
 2038              		.align	2
 2039              		.global	hd44780_init_contrast
ARM GAS  /tmp/ccdIBtGv.s 			page 46


 2040              		.thumb
 2041              		.thumb_func
 2043              	hd44780_init_contrast:
 2044              	.LFB84:
 555:hd44780/hd44780.c **** 
 556:hd44780/hd44780.c **** /**
 557:hd44780/hd44780.c ****  * Initialise the contrast control
 558:hd44780/hd44780.c ****  *
 559:hd44780/hd44780.c ****  */
 560:hd44780/hd44780.c **** void hd44780_init_contrast(void) {
 2045              		.loc 1 560 0
 2046              		.cfi_startproc
 2047              		@ args = 0, pretend = 0, frame = 0
 2048              		@ frame_needed = 1, uses_anonymous_args = 0
 2049              		@ link register save eliminated.
 2050 0000 80B4     		push	{r7}
 2051              	.LCFI102:
 2052              		.cfi_def_cfa_offset 4
 2053              		.cfi_offset 7, -4
 2054 0002 00AF     		add	r7, sp, #0
 2055              	.LCFI103:
 2056              		.cfi_def_cfa_register 7
 561:hd44780/hd44780.c **** 
 562:hd44780/hd44780.c **** 	/* GPIO_InitTypeDef gpio; */
 563:hd44780/hd44780.c **** 	/* TIM_OC_InitTypeDef oc; */
 564:hd44780/hd44780.c **** 
 565:hd44780/hd44780.c **** 	/* CON_GPIO_EN(); */
 566:hd44780/hd44780.c **** 	/* gpio.Pin = CON_PIN; */
 567:hd44780/hd44780.c **** 	/* gpio.Mode = GPIO_MODE_AF_OD; */
 568:hd44780/hd44780.c **** 	/* gpio.Pull = GPIO_PULLDOWN; */
 569:hd44780/hd44780.c **** 	/* gpio.Speed = GPIO_SPEED_MEDIUM; */
 570:hd44780/hd44780.c **** 	/* gpio.Alternate = CON_AF; */
 571:hd44780/hd44780.c **** 	/* HAL_GPIO_Init(CON_GPIO, &gpio); */
 572:hd44780/hd44780.c **** 
 573:hd44780/hd44780.c **** 	/* CON_CLK_EN(); */
 574:hd44780/hd44780.c **** 	/* Handle_Con.Instance = CON_TIMER; */
 575:hd44780/hd44780.c **** 	/* Handle_Con.Init.Period = CON_PERIOD; */
 576:hd44780/hd44780.c **** 	/* Handle_Con.Init.Prescaler = 1 - 1; */
 577:hd44780/hd44780.c **** 	/* Handle_Con.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1; */
 578:hd44780/hd44780.c **** 	/* Handle_Con.Init.CounterMode = TIM_COUNTERMODE_UP; */
 579:hd44780/hd44780.c **** 	/* HAL_TIM_PWM_Init(&Handle_Con); */
 580:hd44780/hd44780.c **** 
 581:hd44780/hd44780.c **** 	/* oc.OCMode = TIM_OCMODE_PWM1; */
 582:hd44780/hd44780.c **** 	/* oc.OCIdleState = TIM_OCIDLESTATE_SET; */
 583:hd44780/hd44780.c **** 	/* oc.OCNIdleState = TIM_OCNIDLESTATE_RESET; */
 584:hd44780/hd44780.c **** 	/* oc.Pulse = 0; */
 585:hd44780/hd44780.c **** 	/* oc.OCPolarity = TIM_OCPOLARITY_HIGH; */
 586:hd44780/hd44780.c **** 	/* oc.OCNPolarity = TIM_OCNPOLARITY_HIGH; */
 587:hd44780/hd44780.c **** 
 588:hd44780/hd44780.c **** 	/* HAL_TIM_PWM_ConfigChannel(&Handle_Con, &oc, */
 589:hd44780/hd44780.c **** 	/* CON_CHANNEL); */
 590:hd44780/hd44780.c **** 	/* HAL_TIM_PWM_Start(&Handle_Con, CON_CHANNEL); */
 591:hd44780/hd44780.c **** }
 2057              		.loc 1 591 0
 2058 0004 BD46     		mov	sp, r7
 2059              	.LCFI104:
 2060              		.cfi_def_cfa_register 13
ARM GAS  /tmp/ccdIBtGv.s 			page 47


 2061              		@ sp needed
 2062 0006 5DF8047B 		ldr	r7, [sp], #4
 2063              	.LCFI105:
 2064              		.cfi_restore 7
 2065              		.cfi_def_cfa_offset 0
 2066 000a 7047     		bx	lr
 2067              		.cfi_endproc
 2068              	.LFE84:
 2070              		.section	.text.TIM3_IRQHandler,"ax",%progbits
 2071              		.align	2
 2072              		.global	TIM3_IRQHandler
 2073              		.thumb
 2074              		.thumb_func
 2076              	TIM3_IRQHandler:
 2077              	.LFB85:
 592:hd44780/hd44780.c **** 
 593:hd44780/hd44780.c **** void HD44780_HANDLER(void) {
 2078              		.loc 1 593 0
 2079              		.cfi_startproc
 2080              		@ args = 0, pretend = 0, frame = 0
 2081              		@ frame_needed = 1, uses_anonymous_args = 0
 2082 0000 80B5     		push	{r7, lr}
 2083              	.LCFI106:
 2084              		.cfi_def_cfa_offset 8
 2085              		.cfi_offset 7, -8
 2086              		.cfi_offset 14, -4
 2087 0002 00AF     		add	r7, sp, #0
 2088              	.LCFI107:
 2089              		.cfi_def_cfa_register 7
 594:hd44780/hd44780.c **** 
 595:hd44780/hd44780.c **** 	exec();
 2090              		.loc 1 595 0
 2091 0004 FFF7FEFF 		bl	exec
 596:hd44780/hd44780.c **** 	HAL_TIM_IRQHandler(&Handle_Lcd);
 2092              		.loc 1 596 0
 2093 0008 0148     		ldr	r0, .L91
 2094 000a FFF7FEFF 		bl	HAL_TIM_IRQHandler
 597:hd44780/hd44780.c **** }
 2095              		.loc 1 597 0
 2096 000e 80BD     		pop	{r7, pc}
 2097              	.L92:
 2098              		.align	2
 2099              	.L91:
 2100 0010 00000000 		.word	Handle_Lcd
 2101              		.cfi_endproc
 2102              	.LFE85:
 2104              		.text
 2105              	.Letext0:
 2106              		.file 2 "/usr/lib/gcc/arm-none-eabi/4.9/include/stdarg.h"
 2107              		.file 3 "/usr/include/newlib/machine/_default_types.h"
 2108              		.file 4 "/usr/include/newlib/stdint.h"
 2109              		.file 5 "Drivers/CMSIS/Include/core_cm3.h"
 2110              		.file 6 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f103xb.h"
 2111              		.file 7 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_def.h"
 2112              		.file 8 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_gpio.h"
 2113              		.file 9 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_dma.h"
 2114              		.file 10 "<built-in>"
ARM GAS  /tmp/ccdIBtGv.s 			page 48


 2115              		.file 11 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_tim.h"
 2116              		.file 12 "hd44780/hd44780.h"
 2117              		.file 13 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/system_stm32f1xx.h"
ARM GAS  /tmp/ccdIBtGv.s 			page 49


DEFINED SYMBOLS
                            *ABS*:0000000000000000 hd44780.c
     /tmp/ccdIBtGv.s:19     .bss.Handle_Lcd:0000000000000000 $d
     /tmp/ccdIBtGv.s:22     .bss.Handle_Lcd:0000000000000000 Handle_Lcd
     /tmp/ccdIBtGv.s:25     .bss.Handle_Brigt:0000000000000000 $d
     /tmp/ccdIBtGv.s:28     .bss.Handle_Brigt:0000000000000000 Handle_Brigt
     /tmp/ccdIBtGv.s:31     .bss.Handle_Con:0000000000000000 $d
     /tmp/ccdIBtGv.s:34     .bss.Handle_Con:0000000000000000 Handle_Con
     /tmp/ccdIBtGv.s:37     .bss.Lcd_Conf:0000000000000000 $d
     /tmp/ccdIBtGv.s:40     .bss.Lcd_Conf:0000000000000000 Lcd_Conf
     /tmp/ccdIBtGv.s:43     .bss.Queue:0000000000000000 $d
     /tmp/ccdIBtGv.s:46     .bss.Queue:0000000000000000 Queue
     /tmp/ccdIBtGv.s:49     .bss.Queue_Head:0000000000000000 $d
     /tmp/ccdIBtGv.s:52     .bss.Queue_Head:0000000000000000 Queue_Head
     /tmp/ccdIBtGv.s:55     .bss.Queue_Tail:0000000000000000 $d
     /tmp/ccdIBtGv.s:58     .bss.Queue_Tail:0000000000000000 Queue_Tail
     /tmp/ccdIBtGv.s:61     .text.init_delay:0000000000000000 $t
     /tmp/ccdIBtGv.s:65     .text.init_delay:0000000000000000 init_delay
     /tmp/ccdIBtGv.s:109    .text.init_delay:000000000000002c $d
     /tmp/ccdIBtGv.s:115    .text.delay_us:0000000000000000 $t
     /tmp/ccdIBtGv.s:119    .text.delay_us:0000000000000000 delay_us
     /tmp/ccdIBtGv.s:197    .text.delay_us:0000000000000054 $d
     /tmp/ccdIBtGv.s:204    .text.set_output:0000000000000000 $t
     /tmp/ccdIBtGv.s:208    .text.set_output:0000000000000000 set_output
     /tmp/ccdIBtGv.s:298    .text.set_output:0000000000000074 $d
     /tmp/ccdIBtGv.s:303    .text.enable:0000000000000000 $t
     /tmp/ccdIBtGv.s:307    .text.enable:0000000000000000 enable
     /tmp/ccdIBtGv.s:365    .text.enable:0000000000000044 $d
     /tmp/ccdIBtGv.s:370    .text.write:0000000000000000 $t
     /tmp/ccdIBtGv.s:374    .text.write:0000000000000000 write
     /tmp/ccdIBtGv.s:486    .text.write:00000000000000bc $d
     /tmp/ccdIBtGv.s:491    .text.read_busy:0000000000000000 $t
     /tmp/ccdIBtGv.s:495    .text.read_busy:0000000000000000 read_busy
     /tmp/ccdIBtGv.s:580    .text.read_busy:0000000000000074 $d
     /tmp/ccdIBtGv.s:585    .text.task_add:0000000000000000 $t
     /tmp/ccdIBtGv.s:589    .text.task_add:0000000000000000 task_add
     /tmp/ccdIBtGv.s:735    .text.task_add:00000000000000e4 $d
     /tmp/ccdIBtGv.s:743    .text.task_del:0000000000000000 $t
     /tmp/ccdIBtGv.s:747    .text.task_del:0000000000000000 task_del
     /tmp/ccdIBtGv.s:799    .text.task_del:0000000000000040 $d
     /tmp/ccdIBtGv.s:806    .text.exec:0000000000000000 $t
     /tmp/ccdIBtGv.s:810    .text.exec:0000000000000000 exec
     /tmp/ccdIBtGv.s:950    .text.exec:00000000000000d0 $d
     /tmp/ccdIBtGv.s:957    .text.hd44780_brightness:0000000000000000 $t
     /tmp/ccdIBtGv.s:962    .text.hd44780_brightness:0000000000000000 hd44780_brightness
     /tmp/ccdIBtGv.s:1014   .text.hd44780_brightness:000000000000003c $d
     /tmp/ccdIBtGv.s:1020   .text.hd44780_contrast:0000000000000000 $t
     /tmp/ccdIBtGv.s:1025   .text.hd44780_contrast:0000000000000000 hd44780_contrast
     /tmp/ccdIBtGv.s:1070   .text.hd44780_contrast:0000000000000028 $d
     /tmp/ccdIBtGv.s:1075   .text.hd44780_clear:0000000000000000 $t
     /tmp/ccdIBtGv.s:1080   .text.hd44780_clear:0000000000000000 hd44780_clear
     /tmp/ccdIBtGv.s:1112   .text.hd44780_home:0000000000000000 $t
     /tmp/ccdIBtGv.s:1117   .text.hd44780_home:0000000000000000 hd44780_home
     /tmp/ccdIBtGv.s:1149   .text.hd44780_display:0000000000000000 $t
     /tmp/ccdIBtGv.s:1154   .text.hd44780_display:0000000000000000 hd44780_display
     /tmp/ccdIBtGv.s:1242   .text.hd44780_display:0000000000000070 $d
     /tmp/ccdIBtGv.s:1248   .rodata:0000000000000000 $d
ARM GAS  /tmp/ccdIBtGv.s 			page 50


     /tmp/ccdIBtGv.s:1255   .text.hd44780_position:0000000000000000 $t
     /tmp/ccdIBtGv.s:1260   .text.hd44780_position:0000000000000000 hd44780_position
     /tmp/ccdIBtGv.s:1328   .text.hd44780_position:000000000000005c $d
     /tmp/ccdIBtGv.s:1333   .text.hd44780_cgram:0000000000000000 $t
     /tmp/ccdIBtGv.s:1338   .text.hd44780_cgram:0000000000000000 hd44780_cgram
     /tmp/ccdIBtGv.s:1426   .text.hd44780_put:0000000000000000 $t
     /tmp/ccdIBtGv.s:1431   .text.hd44780_put:0000000000000000 hd44780_put
     /tmp/ccdIBtGv.s:1477   .text.hd44780_print:0000000000000000 $t
     /tmp/ccdIBtGv.s:1482   .text.hd44780_print:0000000000000000 hd44780_print
     /tmp/ccdIBtGv.s:1548   .text.hd44780_printf:0000000000000000 $t
     /tmp/ccdIBtGv.s:1553   .text.hd44780_printf:0000000000000000 hd44780_printf
     /tmp/ccdIBtGv.s:1645   .text.hd44780_init:0000000000000000 $t
     /tmp/ccdIBtGv.s:1650   .text.hd44780_init:0000000000000000 hd44780_init
     /tmp/ccdIBtGv.s:1991   .text.hd44780_init:0000000000000240 $d
     /tmp/ccdIBtGv.s:2005   .text.hd44780_init_brightness:0000000000000000 $t
     /tmp/ccdIBtGv.s:2010   .text.hd44780_init_brightness:0000000000000000 hd44780_init_brightness
     /tmp/ccdIBtGv.s:2038   .text.hd44780_init_contrast:0000000000000000 $t
     /tmp/ccdIBtGv.s:2043   .text.hd44780_init_contrast:0000000000000000 hd44780_init_contrast
     /tmp/ccdIBtGv.s:2071   .text.TIM3_IRQHandler:0000000000000000 $t
     /tmp/ccdIBtGv.s:2076   .text.TIM3_IRQHandler:0000000000000000 TIM3_IRQHandler
     /tmp/ccdIBtGv.s:2100   .text.TIM3_IRQHandler:0000000000000010 $d
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
SystemCoreClock
HAL_GPIO_Init
HAL_GPIO_TogglePin
HAL_GPIO_WritePin
HAL_GPIO_ReadPin
vsprintf
HAL_NVIC_SetPriority
HAL_NVIC_EnableIRQ
HAL_RCC_GetHCLKFreq
HAL_TIM_Base_Init
HAL_TIM_Base_Start_IT
HAL_TIM_IRQHandler
