ARM GAS  /tmp/ccUxXLFW.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"adc.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.comm	hadc1,48,4
  19              		.section	.text.MX_ADC1_Init,"ax",%progbits
  20              		.align	2
  21              		.global	MX_ADC1_Init
  22              		.thumb
  23              		.thumb_func
  25              	MX_ADC1_Init:
  26              	.LFB63:
  27              		.file 1 "Src/adc.c"
   1:Src/adc.c     **** /**
   2:Src/adc.c     ****   ******************************************************************************
   3:Src/adc.c     ****   * File Name          : ADC.c
   4:Src/adc.c     ****   * Description        : This file provides code for the configuration
   5:Src/adc.c     ****   *                      of the ADC instances.
   6:Src/adc.c     ****   ******************************************************************************
   7:Src/adc.c     ****   *
   8:Src/adc.c     ****   * COPYRIGHT(c) 2016 STMicroelectronics
   9:Src/adc.c     ****   *
  10:Src/adc.c     ****   * Redistribution and use in source and binary forms, with or without modification,
  11:Src/adc.c     ****   * are permitted provided that the following conditions are met:
  12:Src/adc.c     ****   *   1. Redistributions of source code must retain the above copyright notice,
  13:Src/adc.c     ****   *      this list of conditions and the following disclaimer.
  14:Src/adc.c     ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
  15:Src/adc.c     ****   *      this list of conditions and the following disclaimer in the documentation
  16:Src/adc.c     ****   *      and/or other materials provided with the distribution.
  17:Src/adc.c     ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
  18:Src/adc.c     ****   *      may be used to endorse or promote products derived from this software
  19:Src/adc.c     ****   *      without specific prior written permission.
  20:Src/adc.c     ****   *
  21:Src/adc.c     ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  22:Src/adc.c     ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  23:Src/adc.c     ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  24:Src/adc.c     ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  25:Src/adc.c     ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  26:Src/adc.c     ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  27:Src/adc.c     ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  28:Src/adc.c     ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  29:Src/adc.c     ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  30:Src/adc.c     ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  31:Src/adc.c     ****   *
ARM GAS  /tmp/ccUxXLFW.s 			page 2


  32:Src/adc.c     ****   ******************************************************************************
  33:Src/adc.c     ****   */
  34:Src/adc.c     **** 
  35:Src/adc.c     **** /* Includes ------------------------------------------------------------------*/
  36:Src/adc.c     **** #include "adc.h"
  37:Src/adc.c     **** 
  38:Src/adc.c     **** #include "gpio.h"
  39:Src/adc.c     **** 
  40:Src/adc.c     **** /* USER CODE BEGIN 0 */
  41:Src/adc.c     **** 
  42:Src/adc.c     **** /* USER CODE END 0 */
  43:Src/adc.c     **** 
  44:Src/adc.c     **** ADC_HandleTypeDef hadc1;
  45:Src/adc.c     **** 
  46:Src/adc.c     **** /* ADC1 init function */
  47:Src/adc.c     **** void MX_ADC1_Init(void)
  48:Src/adc.c     **** {
  28              		.loc 1 48 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 16
  31              		@ frame_needed = 1, uses_anonymous_args = 0
  32 0000 80B5     		push	{r7, lr}
  33              	.LCFI0:
  34              		.cfi_def_cfa_offset 8
  35              		.cfi_offset 7, -8
  36              		.cfi_offset 14, -4
  37 0002 84B0     		sub	sp, sp, #16
  38              	.LCFI1:
  39              		.cfi_def_cfa_offset 24
  40 0004 00AF     		add	r7, sp, #0
  41              	.LCFI2:
  42              		.cfi_def_cfa_register 7
  49:Src/adc.c     ****   ADC_ChannelConfTypeDef sConfig;
  50:Src/adc.c     **** 
  51:Src/adc.c     ****     /**Common config 
  52:Src/adc.c     ****     */
  53:Src/adc.c     ****   hadc1.Instance = ADC1;
  43              		.loc 1 53 0
  44 0006 184B     		ldr	r3, .L4
  45 0008 184A     		ldr	r2, .L4+4
  46 000a 1A60     		str	r2, [r3]
  54:Src/adc.c     ****   hadc1.Init.ScanConvMode = ADC_SCAN_DISABLE;
  47              		.loc 1 54 0
  48 000c 164B     		ldr	r3, .L4
  49 000e 0022     		movs	r2, #0
  50 0010 9A60     		str	r2, [r3, #8]
  55:Src/adc.c     ****   hadc1.Init.ContinuousConvMode = DISABLE;
  51              		.loc 1 55 0
  52 0012 154B     		ldr	r3, .L4
  53 0014 0022     		movs	r2, #0
  54 0016 DA60     		str	r2, [r3, #12]
  56:Src/adc.c     ****   hadc1.Init.DiscontinuousConvMode = DISABLE;
  55              		.loc 1 56 0
  56 0018 134B     		ldr	r3, .L4
  57 001a 0022     		movs	r2, #0
  58 001c 5A61     		str	r2, [r3, #20]
  57:Src/adc.c     ****   hadc1.Init.ExternalTrigConv = ADC_SOFTWARE_START;
ARM GAS  /tmp/ccUxXLFW.s 			page 3


  59              		.loc 1 57 0
  60 001e 124B     		ldr	r3, .L4
  61 0020 4FF46022 		mov	r2, #917504
  62 0024 DA61     		str	r2, [r3, #28]
  58:Src/adc.c     ****   hadc1.Init.DataAlign = ADC_DATAALIGN_RIGHT;
  63              		.loc 1 58 0
  64 0026 104B     		ldr	r3, .L4
  65 0028 0022     		movs	r2, #0
  66 002a 5A60     		str	r2, [r3, #4]
  59:Src/adc.c     ****   hadc1.Init.NbrOfConversion = 1;
  67              		.loc 1 59 0
  68 002c 0E4B     		ldr	r3, .L4
  69 002e 0122     		movs	r2, #1
  70 0030 1A61     		str	r2, [r3, #16]
  60:Src/adc.c     ****   if (HAL_ADC_Init(&hadc1) != HAL_OK)
  71              		.loc 1 60 0
  72 0032 0D48     		ldr	r0, .L4
  73 0034 FFF7FEFF 		bl	HAL_ADC_Init
  74 0038 0346     		mov	r3, r0
  75 003a 002B     		cmp	r3, #0
  76 003c 01D0     		beq	.L2
  61:Src/adc.c     ****   {
  62:Src/adc.c     ****     Error_Handler();
  77              		.loc 1 62 0
  78 003e FFF7FEFF 		bl	Error_Handler
  79              	.L2:
  63:Src/adc.c     ****   }
  64:Src/adc.c     **** 
  65:Src/adc.c     ****     /**Configure Regular Channel 
  66:Src/adc.c     ****     */
  67:Src/adc.c     ****   sConfig.Channel = ADC_CHANNEL_8;
  80              		.loc 1 67 0
  81 0042 0823     		movs	r3, #8
  82 0044 7B60     		str	r3, [r7, #4]
  68:Src/adc.c     ****   sConfig.Rank = 1;
  83              		.loc 1 68 0
  84 0046 0123     		movs	r3, #1
  85 0048 BB60     		str	r3, [r7, #8]
  69:Src/adc.c     ****   sConfig.SamplingTime = ADC_SAMPLETIME_1CYCLE_5;
  86              		.loc 1 69 0
  87 004a 0023     		movs	r3, #0
  88 004c FB60     		str	r3, [r7, #12]
  70:Src/adc.c     ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
  89              		.loc 1 70 0
  90 004e 3B1D     		adds	r3, r7, #4
  91 0050 0548     		ldr	r0, .L4
  92 0052 1946     		mov	r1, r3
  93 0054 FFF7FEFF 		bl	HAL_ADC_ConfigChannel
  94 0058 0346     		mov	r3, r0
  95 005a 002B     		cmp	r3, #0
  96 005c 01D0     		beq	.L1
  71:Src/adc.c     ****   {
  72:Src/adc.c     ****     Error_Handler();
  97              		.loc 1 72 0
  98 005e FFF7FEFF 		bl	Error_Handler
  99              	.L1:
  73:Src/adc.c     ****   }
ARM GAS  /tmp/ccUxXLFW.s 			page 4


  74:Src/adc.c     **** 
  75:Src/adc.c     **** }
 100              		.loc 1 75 0
 101 0062 1037     		adds	r7, r7, #16
 102              	.LCFI3:
 103              		.cfi_def_cfa_offset 8
 104 0064 BD46     		mov	sp, r7
 105              	.LCFI4:
 106              		.cfi_def_cfa_register 13
 107              		@ sp needed
 108 0066 80BD     		pop	{r7, pc}
 109              	.L5:
 110              		.align	2
 111              	.L4:
 112 0068 00000000 		.word	hadc1
 113 006c 00240140 		.word	1073816576
 114              		.cfi_endproc
 115              	.LFE63:
 117              		.section	.text.HAL_ADC_MspInit,"ax",%progbits
 118              		.align	2
 119              		.global	HAL_ADC_MspInit
 120              		.thumb
 121              		.thumb_func
 123              	HAL_ADC_MspInit:
 124              	.LFB64:
  76:Src/adc.c     **** 
  77:Src/adc.c     **** void HAL_ADC_MspInit(ADC_HandleTypeDef* adcHandle)
  78:Src/adc.c     **** {
 125              		.loc 1 78 0
 126              		.cfi_startproc
 127              		@ args = 0, pretend = 0, frame = 32
 128              		@ frame_needed = 1, uses_anonymous_args = 0
 129 0000 80B5     		push	{r7, lr}
 130              	.LCFI5:
 131              		.cfi_def_cfa_offset 8
 132              		.cfi_offset 7, -8
 133              		.cfi_offset 14, -4
 134 0002 88B0     		sub	sp, sp, #32
 135              	.LCFI6:
 136              		.cfi_def_cfa_offset 40
 137 0004 00AF     		add	r7, sp, #0
 138              	.LCFI7:
 139              		.cfi_def_cfa_register 7
 140 0006 7860     		str	r0, [r7, #4]
  79:Src/adc.c     **** 
  80:Src/adc.c     ****   GPIO_InitTypeDef GPIO_InitStruct;
  81:Src/adc.c     ****   if(adcHandle->Instance==ADC1)
 141              		.loc 1 81 0
 142 0008 7B68     		ldr	r3, [r7, #4]
 143 000a 1B68     		ldr	r3, [r3]
 144 000c 0D4A     		ldr	r2, .L8
 145 000e 9342     		cmp	r3, r2
 146 0010 15D1     		bne	.L6
 147              	.LBB2:
  82:Src/adc.c     ****   {
  83:Src/adc.c     ****   /* USER CODE BEGIN ADC1_MspInit 0 */
  84:Src/adc.c     **** 
ARM GAS  /tmp/ccUxXLFW.s 			page 5


  85:Src/adc.c     ****   /* USER CODE END ADC1_MspInit 0 */
  86:Src/adc.c     ****     /* Peripheral clock enable */
  87:Src/adc.c     ****     __HAL_RCC_ADC1_CLK_ENABLE();
 148              		.loc 1 87 0
 149 0012 0D4A     		ldr	r2, .L8+4
 150 0014 0C4B     		ldr	r3, .L8+4
 151 0016 9B69     		ldr	r3, [r3, #24]
 152 0018 43F40073 		orr	r3, r3, #512
 153 001c 9361     		str	r3, [r2, #24]
 154 001e 0A4B     		ldr	r3, .L8+4
 155 0020 9B69     		ldr	r3, [r3, #24]
 156 0022 03F40073 		and	r3, r3, #512
 157 0026 FB60     		str	r3, [r7, #12]
 158 0028 FB68     		ldr	r3, [r7, #12]
 159              	.LBE2:
  88:Src/adc.c     ****   
  89:Src/adc.c     ****     /**ADC1 GPIO Configuration    
  90:Src/adc.c     ****     PB0     ------> ADC1_IN8
  91:Src/adc.c     ****     PB1     ------> ADC1_IN9 
  92:Src/adc.c     ****     */
  93:Src/adc.c     ****     GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1;
 160              		.loc 1 93 0
 161 002a 0323     		movs	r3, #3
 162 002c 3B61     		str	r3, [r7, #16]
  94:Src/adc.c     ****     GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 163              		.loc 1 94 0
 164 002e 0323     		movs	r3, #3
 165 0030 7B61     		str	r3, [r7, #20]
  95:Src/adc.c     ****     HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 166              		.loc 1 95 0
 167 0032 07F11003 		add	r3, r7, #16
 168 0036 0548     		ldr	r0, .L8+8
 169 0038 1946     		mov	r1, r3
 170 003a FFF7FEFF 		bl	HAL_GPIO_Init
 171              	.L6:
  96:Src/adc.c     **** 
  97:Src/adc.c     ****   /* USER CODE BEGIN ADC1_MspInit 1 */
  98:Src/adc.c     **** 
  99:Src/adc.c     ****   /* USER CODE END ADC1_MspInit 1 */
 100:Src/adc.c     ****   }
 101:Src/adc.c     **** }
 172              		.loc 1 101 0
 173 003e 2037     		adds	r7, r7, #32
 174              	.LCFI8:
 175              		.cfi_def_cfa_offset 8
 176 0040 BD46     		mov	sp, r7
 177              	.LCFI9:
 178              		.cfi_def_cfa_register 13
 179              		@ sp needed
 180 0042 80BD     		pop	{r7, pc}
 181              	.L9:
 182              		.align	2
 183              	.L8:
 184 0044 00240140 		.word	1073816576
 185 0048 00100240 		.word	1073876992
 186 004c 000C0140 		.word	1073810432
 187              		.cfi_endproc
ARM GAS  /tmp/ccUxXLFW.s 			page 6


 188              	.LFE64:
 190              		.section	.text.HAL_ADC_MspDeInit,"ax",%progbits
 191              		.align	2
 192              		.global	HAL_ADC_MspDeInit
 193              		.thumb
 194              		.thumb_func
 196              	HAL_ADC_MspDeInit:
 197              	.LFB65:
 102:Src/adc.c     **** 
 103:Src/adc.c     **** void HAL_ADC_MspDeInit(ADC_HandleTypeDef* adcHandle)
 104:Src/adc.c     **** {
 198              		.loc 1 104 0
 199              		.cfi_startproc
 200              		@ args = 0, pretend = 0, frame = 8
 201              		@ frame_needed = 1, uses_anonymous_args = 0
 202 0000 80B5     		push	{r7, lr}
 203              	.LCFI10:
 204              		.cfi_def_cfa_offset 8
 205              		.cfi_offset 7, -8
 206              		.cfi_offset 14, -4
 207 0002 82B0     		sub	sp, sp, #8
 208              	.LCFI11:
 209              		.cfi_def_cfa_offset 16
 210 0004 00AF     		add	r7, sp, #0
 211              	.LCFI12:
 212              		.cfi_def_cfa_register 7
 213 0006 7860     		str	r0, [r7, #4]
 105:Src/adc.c     **** 
 106:Src/adc.c     ****   if(adcHandle->Instance==ADC1)
 214              		.loc 1 106 0
 215 0008 7B68     		ldr	r3, [r7, #4]
 216 000a 1B68     		ldr	r3, [r3]
 217 000c 074A     		ldr	r2, .L12
 218 000e 9342     		cmp	r3, r2
 219 0010 09D1     		bne	.L10
 107:Src/adc.c     ****   {
 108:Src/adc.c     ****   /* USER CODE BEGIN ADC1_MspDeInit 0 */
 109:Src/adc.c     **** 
 110:Src/adc.c     ****   /* USER CODE END ADC1_MspDeInit 0 */
 111:Src/adc.c     ****     /* Peripheral clock disable */
 112:Src/adc.c     ****     __HAL_RCC_ADC1_CLK_DISABLE();
 220              		.loc 1 112 0
 221 0012 074A     		ldr	r2, .L12+4
 222 0014 064B     		ldr	r3, .L12+4
 223 0016 9B69     		ldr	r3, [r3, #24]
 224 0018 23F40073 		bic	r3, r3, #512
 225 001c 9361     		str	r3, [r2, #24]
 113:Src/adc.c     ****   
 114:Src/adc.c     ****     /**ADC1 GPIO Configuration    
 115:Src/adc.c     ****     PB0     ------> ADC1_IN8
 116:Src/adc.c     ****     PB1     ------> ADC1_IN9 
 117:Src/adc.c     ****     */
 118:Src/adc.c     ****     HAL_GPIO_DeInit(GPIOB, GPIO_PIN_0|GPIO_PIN_1);
 226              		.loc 1 118 0
 227 001e 0548     		ldr	r0, .L12+8
 228 0020 0321     		movs	r1, #3
 229 0022 FFF7FEFF 		bl	HAL_GPIO_DeInit
ARM GAS  /tmp/ccUxXLFW.s 			page 7


 230              	.L10:
 119:Src/adc.c     **** 
 120:Src/adc.c     ****   }
 121:Src/adc.c     ****   /* USER CODE BEGIN ADC1_MspDeInit 1 */
 122:Src/adc.c     **** 
 123:Src/adc.c     ****   /* USER CODE END ADC1_MspDeInit 1 */
 124:Src/adc.c     **** } 
 231              		.loc 1 124 0
 232 0026 0837     		adds	r7, r7, #8
 233              	.LCFI13:
 234              		.cfi_def_cfa_offset 8
 235 0028 BD46     		mov	sp, r7
 236              	.LCFI14:
 237              		.cfi_def_cfa_register 13
 238              		@ sp needed
 239 002a 80BD     		pop	{r7, pc}
 240              	.L13:
 241              		.align	2
 242              	.L12:
 243 002c 00240140 		.word	1073816576
 244 0030 00100240 		.word	1073876992
 245 0034 000C0140 		.word	1073810432
 246              		.cfi_endproc
 247              	.LFE65:
 249              		.text
 250              	.Letext0:
 251              		.file 2 "/usr/include/newlib/machine/_default_types.h"
 252              		.file 3 "/usr/include/newlib/stdint.h"
 253              		.file 4 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f103xb.h"
 254              		.file 5 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f1xx.h"
 255              		.file 6 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_def.h"
 256              		.file 7 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_gpio.h"
 257              		.file 8 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_dma.h"
 258              		.file 9 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_adc.h"
 259              		.file 10 "Drivers/CMSIS/Include/core_cm3.h"
ARM GAS  /tmp/ccUxXLFW.s 			page 8


DEFINED SYMBOLS
                            *ABS*:0000000000000000 adc.c
                            *COM*:0000000000000030 hadc1
     /tmp/ccUxXLFW.s:20     .text.MX_ADC1_Init:0000000000000000 $t
     /tmp/ccUxXLFW.s:25     .text.MX_ADC1_Init:0000000000000000 MX_ADC1_Init
     /tmp/ccUxXLFW.s:112    .text.MX_ADC1_Init:0000000000000068 $d
     /tmp/ccUxXLFW.s:118    .text.HAL_ADC_MspInit:0000000000000000 $t
     /tmp/ccUxXLFW.s:123    .text.HAL_ADC_MspInit:0000000000000000 HAL_ADC_MspInit
     /tmp/ccUxXLFW.s:184    .text.HAL_ADC_MspInit:0000000000000044 $d
     /tmp/ccUxXLFW.s:191    .text.HAL_ADC_MspDeInit:0000000000000000 $t
     /tmp/ccUxXLFW.s:196    .text.HAL_ADC_MspDeInit:0000000000000000 HAL_ADC_MspDeInit
     /tmp/ccUxXLFW.s:243    .text.HAL_ADC_MspDeInit:000000000000002c $d
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
HAL_ADC_Init
Error_Handler
HAL_ADC_ConfigChannel
HAL_GPIO_Init
HAL_GPIO_DeInit
