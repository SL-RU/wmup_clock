ARM GAS  /tmp/cckhygdq.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"stm32f1xx_hal_uart.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.section	.text.HAL_UART_Init,"ax",%progbits
  19              		.align	2
  20              		.global	HAL_UART_Init
  21              		.thumb
  22              		.thumb_func
  24              	HAL_UART_Init:
  25              	.LFB63:
  26              		.file 1 "Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c"
   1:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
   2:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   ******************************************************************************
   3:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @file    stm32f1xx_hal_uart.c
   4:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @author  MCD Application Team
   5:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @version V1.0.4
   6:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @date    29-April-2016
   7:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief   UART HAL module driver.
   8:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *          This file provides firmware functions to manage the following 
   9:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *          functionalities of the Universal Asynchronous Receiver Transmitter (UART) peripheral:
  10:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *           + Initialization and de-initialization functions
  11:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *           + IO operation functions
  12:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *           + Peripheral Control functions 
  13:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *           + Peripheral State and Errors functions  
  14:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   @verbatim
  15:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   ==============================================================================
  16:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****                         ##### How to use this driver #####
  17:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   ==============================================================================
  18:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   [..]
  19:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     The UART HAL driver can be used as follows:
  20:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     
  21:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     (#) Declare a UART_HandleTypeDef handle structure.
  22:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
  23:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     (#) Initialize the UART low level resources by implementing the HAL_UART_MspInit() API:
  24:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         (##) Enable the USARTx interface clock.
  25:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         (##) UART pins configuration:
  26:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****             (+++) Enable the clock for the UART GPIOs.
  27:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****              (+++) Configure the USART pins (TX as alternate function pull-up, RX as alternate func
  28:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         (##) NVIC configuration if you need to use interrupt process (HAL_UART_Transmit_IT()
  29:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****              and HAL_UART_Receive_IT() APIs):
  30:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****             (+++) Configure the USARTx interrupt priority.
  31:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****             (+++) Enable the NVIC USART IRQ handle.
  32:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         (##) DMA Configuration if you need to use DMA process (HAL_UART_Transmit_DMA()
ARM GAS  /tmp/cckhygdq.s 			page 2


  33:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****              and HAL_UART_Receive_DMA() APIs):
  34:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****             (+++) Declare a DMA handle structure for the Tx/Rx channel.
  35:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****             (+++) Enable the DMAx interface clock.
  36:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****             (+++) Configure the declared DMA handle structure with the required 
  37:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****                   Tx/Rx parameters.                
  38:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****             (+++) Configure the DMA Tx/Rx channel.
  39:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****             (+++) Associate the initialized DMA handle to the UART DMA Tx/Rx handle.
  40:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****             (+++) Configure the priority and enable the NVIC for the transfer complete 
  41:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****                   interrupt on the DMA Tx/Rx channel.
  42:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****             (+++) Configure the USARTx interrupt priority and enable the NVIC USART IRQ handle
  43:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****                   (used for last byte sending completion detection in DMA non circular mode)
  44:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
  45:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     (#) Program the Baud Rate, Word Length, Stop Bit, Parity, Hardware 
  46:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         flow control and Mode(Receiver/Transmitter) in the huart Init structure.
  47:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
  48:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     (#) For the UART asynchronous mode, initialize the UART registers by calling
  49:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         the HAL_UART_Init() API.
  50:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
  51:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     (#) For the UART Half duplex mode, initialize the UART registers by calling 
  52:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         the HAL_HalfDuplex_Init() API.
  53:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
  54:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     (#) For the LIN mode, initialize the UART registers by calling the HAL_LIN_Init() API.
  55:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
  56:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     (#) For the Multi-Processor mode, initialize the UART registers by calling 
  57:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         the HAL_MultiProcessor_Init() API.
  58:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
  59:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****      [..] 
  60:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****        (@) The specific UART interrupts (Transmission complete interrupt, 
  61:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****             RXNE interrupt and Error Interrupts) will be managed using the macros
  62:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****             __HAL_UART_ENABLE_IT() and __HAL_UART_DISABLE_IT() inside the transmit 
  63:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****             and receive process.
  64:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
  65:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****      [..] 
  66:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****        (@) These APIs (HAL_UART_Init() and HAL_HalfDuplex_Init()) configure also the 
  67:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****             low level Hardware GPIO, CLOCK, CORTEX...etc) by calling the customed 
  68:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****             HAL_UART_MspInit() API.
  69:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
  70:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****      [..] 
  71:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         Three operation modes are available within this driver :
  72:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
  73:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****      *** Polling mode IO operation ***
  74:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****      =================================
  75:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****      [..]    
  76:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****        (+) Send an amount of data in blocking mode using HAL_UART_Transmit() 
  77:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****        (+) Receive an amount of data in blocking mode using HAL_UART_Receive()
  78:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****        
  79:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****      *** Interrupt mode IO operation ***
  80:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****      ===================================
  81:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****      [..]
  82:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****        (+) Send an amount of data in non blocking mode using HAL_UART_Transmit_IT() 
  83:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****        (+) At transmission end of transfer HAL_UART_TxCpltCallback is executed and user can 
  84:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_TxCpltCallback
  85:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****        (+) Receive an amount of data in non blocking mode using HAL_UART_Receive_IT() 
  86:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****        (+) At reception end of transfer HAL_UART_RxCpltCallback is executed and user can 
  87:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_RxCpltCallback
  88:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****        (+) In case of transfer Error, HAL_UART_ErrorCallback() function is executed and user can 
  89:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_ErrorCallback
ARM GAS  /tmp/cckhygdq.s 			page 3


  90:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
  91:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****      *** DMA mode IO operation ***
  92:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****      ==============================
  93:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****      [..] 
  94:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****        (+) Send an amount of data in non blocking mode (DMA) using HAL_UART_Transmit_DMA() 
  95:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****        (+) At transmission end of half transfer HAL_UART_TxHalfCpltCallback is executed and user ca
  96:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_TxHalfCpltCallback 
  97:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****        (+) At transmission end of transfer HAL_UART_TxCpltCallback is executed and user can 
  98:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_TxCpltCallback
  99:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****        (+) Receive an amount of data in non blocking mode (DMA) using HAL_UART_Receive_DMA() 
 100:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****        (+) At reception end of half transfer HAL_UART_RxHalfCpltCallback is executed and user can 
 101:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_RxHalfCpltCallback 
 102:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****        (+) At reception end of transfer HAL_UART_RxCpltCallback is executed and user can 
 103:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_RxCpltCallback
 104:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****        (+) In case of transfer Error, HAL_UART_ErrorCallback() function is executed and user can 
 105:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_ErrorCallback
 106:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****        (+) Pause the DMA Transfer using HAL_UART_DMAPause()
 107:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****        (+) Resume the DMA Transfer using HAL_UART_DMAResume()
 108:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****        (+) Stop the DMA Transfer using HAL_UART_DMAStop()
 109:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 110:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****      *** UART HAL driver macros list ***
 111:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****      =============================================
 112:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****      [..]
 113:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****        Below the list of most used macros in UART HAL driver.
 114:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 115:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       (+) __HAL_UART_ENABLE: Enable the UART peripheral 
 116:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       (+) __HAL_UART_DISABLE: Disable the UART peripheral
 117:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       (+) __HAL_UART_GET_FLAG : Check whether the specified UART flag is set or not
 118:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       (+) __HAL_UART_CLEAR_FLAG : Clear the specified UART pending flag
 119:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       (+) __HAL_UART_ENABLE_IT: Enable the specified UART interrupt
 120:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       (+) __HAL_UART_DISABLE_IT: Disable the specified UART interrupt
 121:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       (+) __HAL_UART_GET_IT_SOURCE: Check whether the specified UART interrupt has occurred or not
 122:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 123:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****      [..]
 124:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****        (@) You can refer to the UART HAL driver header file for more useful macros 
 125:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       
 126:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   @endverbatim
 127:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   ******************************************************************************
 128:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @attention
 129:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *
 130:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * <h2><center>&copy; COPYRIGHT(c) 2016 STMicroelectronics</center></h2>
 131:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *
 132:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * Redistribution and use in source and binary forms, with or without modification,
 133:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * are permitted provided that the following conditions are met:
 134:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *   1. Redistributions of source code must retain the above copyright notice,
 135:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *      this list of conditions and the following disclaimer.
 136:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
 137:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *      this list of conditions and the following disclaimer in the documentation
 138:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *      and/or other materials provided with the distribution.
 139:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
 140:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *      may be used to endorse or promote products derived from this software
 141:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *      without specific prior written permission.
 142:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *
 143:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 144:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 145:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 146:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
ARM GAS  /tmp/cckhygdq.s 			page 4


 147:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 148:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
 149:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
 150:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
 151:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
 152:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 153:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *
 154:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   ******************************************************************************
 155:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
 156:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 157:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /* Includes ------------------------------------------------------------------*/
 158:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #include "stm32f1xx_hal.h"
 159:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 160:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /** @addtogroup STM32F1xx_HAL_Driver
 161:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @{
 162:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
 163:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 164:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /** @defgroup UART UART
 165:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief HAL UART module driver
 166:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @{
 167:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
 168:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #ifdef HAL_UART_MODULE_ENABLED
 169:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     
 170:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /* Private typedef -----------------------------------------------------------*/
 171:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /* Private define ------------------------------------------------------------*/
 172:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /* Private macros ------------------------------------------------------------*/
 173:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /* Private variables ---------------------------------------------------------*/
 174:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /* Private function prototypes -----------------------------------------------*/
 175:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /** @addtogroup UART_Private_Functions   UART Private Functions
 176:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @{
 177:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
 178:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** static void UART_SetConfig (UART_HandleTypeDef *huart);
 179:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** static HAL_StatusTypeDef UART_Transmit_IT(UART_HandleTypeDef *huart);
 180:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** static HAL_StatusTypeDef UART_EndTransmit_IT(UART_HandleTypeDef *huart);
 181:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** static HAL_StatusTypeDef UART_Receive_IT(UART_HandleTypeDef *huart);
 182:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** static void UART_DMATransmitCplt(DMA_HandleTypeDef *hdma);
 183:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** static void UART_DMATxHalfCplt(DMA_HandleTypeDef *hdma);
 184:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** static void UART_DMAReceiveCplt(DMA_HandleTypeDef *hdma);
 185:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** static void UART_DMARxHalfCplt(DMA_HandleTypeDef *hdma);
 186:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** static void UART_DMAError(DMA_HandleTypeDef *hdma); 
 187:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** static HAL_StatusTypeDef UART_WaitOnFlagUntilTimeout(UART_HandleTypeDef *huart, uint32_t Flag, Flag
 188:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
 189:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @}
 190:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
 191:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 192:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /* Exported functions ---------------------------------------------------------*/
 193:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 194:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /** @defgroup UART_Exported_Functions UART Exported Functions
 195:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @{
 196:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
 197:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 198:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /** @defgroup UART_Exported_Functions_Group1 Initialization and de-initialization functions 
 199:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *  @brief    Initialization and Configuration functions 
 200:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *
 201:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** @verbatim
 202:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** ===============================================================================
 203:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****             ##### Initialization and Configuration functions #####
ARM GAS  /tmp/cckhygdq.s 			page 5


 204:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****  ===============================================================================  
 205:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     [..]
 206:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     This subsection provides a set of functions allowing to initialize the USARTx or the UARTy 
 207:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     in asynchronous mode.
 208:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       (+) For the asynchronous mode only these parameters can be configured: 
 209:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         (++) Baud Rate
 210:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         (++) Word Length 
 211:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         (++) Stop Bit
 212:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         (++) Parity
 213:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         (++) Hardware flow control
 214:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         (++) Receiver/transmitter modes
 215:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     [..]
 216:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     The HAL_UART_Init(), HAL_HalfDuplex_Init(), HAL_LIN_Init() and HAL_MultiProcessor_Init() APIs 
 217:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     follow respectively the UART asynchronous, UART Half duplex, LIN and Multi-Processor
 218:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     configuration procedures (details for the procedures are available in reference manuals 
 219:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     (RM0008 for STM32F10Xxx MCUs and RM0041 for STM32F100xx MCUs)).
 220:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 221:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 222:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** @endverbatim
 223:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @{
 224:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
 225:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 226:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /*
 227:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   Additionnal remark: If the parity is enabled, then the MSB bit of the data written
 228:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****                       in the data register is transmitted but is changed by the parity bit.
 229:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****                       Depending on the frame length defined by the M bit (8-bits or 9-bits),
 230:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****                       the possible UART frame formats are as listed in the following table:
 231:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     +-------------------------------------------------------------+
 232:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     |   M bit |  PCE bit  |            UART frame                 |
 233:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     |---------------------|---------------------------------------|
 234:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     |    0    |    0      |    | SB | 8 bit data | STB |          |
 235:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     |---------|-----------|---------------------------------------|
 236:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     |    0    |    1      |    | SB | 7 bit data | PB | STB |     |
 237:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     |---------|-----------|---------------------------------------|
 238:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     |    1    |    0      |    | SB | 9 bit data | STB |          |
 239:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     |---------|-----------|---------------------------------------|
 240:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     |    1    |    1      |    | SB | 8 bit data | PB | STB |     |
 241:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     +-------------------------------------------------------------+
 242:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** */
 243:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 244:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
 245:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief  Initializes the UART mode according to the specified parameters in
 246:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *         the UART_InitTypeDef and create the associated handle.
 247:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  huart: Pointer to a UART_HandleTypeDef structure that contains
 248:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *                the configuration information for the specified UART module.
 249:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval HAL status
 250:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
 251:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Init(UART_HandleTypeDef *huart)
 252:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
  27              		.loc 1 252 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 8
  30              		@ frame_needed = 1, uses_anonymous_args = 0
  31 0000 80B5     		push	{r7, lr}
  32              	.LCFI0:
  33              		.cfi_def_cfa_offset 8
  34              		.cfi_offset 7, -8
ARM GAS  /tmp/cckhygdq.s 			page 6


  35              		.cfi_offset 14, -4
  36 0002 82B0     		sub	sp, sp, #8
  37              	.LCFI1:
  38              		.cfi_def_cfa_offset 16
  39 0004 00AF     		add	r7, sp, #0
  40              	.LCFI2:
  41              		.cfi_def_cfa_register 7
  42 0006 7860     		str	r0, [r7, #4]
 253:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Check the UART handle allocation */
 254:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if(huart == NULL)
  43              		.loc 1 254 0
  44 0008 7B68     		ldr	r3, [r7, #4]
  45 000a 002B     		cmp	r3, #0
  46 000c 01D1     		bne	.L2
 255:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 256:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     return HAL_ERROR;
  47              		.loc 1 256 0
  48 000e 0123     		movs	r3, #1
  49 0010 3BE0     		b	.L3
  50              	.L2:
 257:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
 258:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 259:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Check the parameters */
 260:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if(huart->Init.HwFlowCtl != UART_HWCONTROL_NONE)
 261:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 262:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* The hardware flow control is available only for USART1, USART2, USART3 */
 263:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     assert_param(IS_UART_HWFLOW_INSTANCE(huart->Instance));
 264:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     assert_param(IS_UART_HARDWARE_FLOW_CONTROL(huart->Init.HwFlowCtl));
 265:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
 266:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   else
 267:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 268:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     assert_param(IS_UART_INSTANCE(huart->Instance));
 269:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
 270:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   assert_param(IS_UART_WORD_LENGTH(huart->Init.WordLength));
 271:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   assert_param(IS_UART_OVERSAMPLING(huart->Init.OverSampling));
 272:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 273:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if(huart->State == HAL_UART_STATE_RESET)
  51              		.loc 1 273 0
  52 0012 7B68     		ldr	r3, [r7, #4]
  53 0014 93F83930 		ldrb	r3, [r3, #57]
  54 0018 DBB2     		uxtb	r3, r3
  55 001a 002B     		cmp	r3, #0
  56 001c 06D1     		bne	.L4
 274:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {  
 275:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Allocate lock resource and initialize it */
 276:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->Lock = HAL_UNLOCKED;
  57              		.loc 1 276 0
  58 001e 7B68     		ldr	r3, [r7, #4]
  59 0020 0022     		movs	r2, #0
  60 0022 83F83820 		strb	r2, [r3, #56]
 277:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     
 278:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Init the low level hardware */
 279:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     HAL_UART_MspInit(huart);
  61              		.loc 1 279 0
  62 0026 7868     		ldr	r0, [r7, #4]
  63 0028 FFF7FEFF 		bl	HAL_UART_MspInit
  64              	.L4:
ARM GAS  /tmp/cckhygdq.s 			page 7


 280:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
 281:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 282:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->State = HAL_UART_STATE_BUSY;
  65              		.loc 1 282 0
  66 002c 7B68     		ldr	r3, [r7, #4]
  67 002e 0222     		movs	r2, #2
  68 0030 83F83920 		strb	r2, [r3, #57]
 283:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 284:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Disable the peripheral */
 285:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   __HAL_UART_DISABLE(huart);
  69              		.loc 1 285 0
  70 0034 7B68     		ldr	r3, [r7, #4]
  71 0036 1B68     		ldr	r3, [r3]
  72 0038 7A68     		ldr	r2, [r7, #4]
  73 003a 1268     		ldr	r2, [r2]
  74 003c D268     		ldr	r2, [r2, #12]
  75 003e 22F40052 		bic	r2, r2, #8192
  76 0042 DA60     		str	r2, [r3, #12]
 286:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 287:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Set the UART Communication parameters */
 288:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   UART_SetConfig(huart);
  77              		.loc 1 288 0
  78 0044 7868     		ldr	r0, [r7, #4]
  79 0046 FFF7FEFF 		bl	UART_SetConfig
 289:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 290:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* In asynchronous mode, the following bits must be kept cleared: 
 291:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****      - LINEN and CLKEN bits in the USART_CR2 register,
 292:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****      - SCEN, HDSEL and IREN  bits in the USART_CR3 register.*/
 293:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
  80              		.loc 1 293 0
  81 004a 7B68     		ldr	r3, [r7, #4]
  82 004c 1B68     		ldr	r3, [r3]
  83 004e 7A68     		ldr	r2, [r7, #4]
  84 0050 1268     		ldr	r2, [r2]
  85 0052 1269     		ldr	r2, [r2, #16]
  86 0054 22F49042 		bic	r2, r2, #18432
  87 0058 1A61     		str	r2, [r3, #16]
 294:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
  88              		.loc 1 294 0
  89 005a 7B68     		ldr	r3, [r7, #4]
  90 005c 1B68     		ldr	r3, [r3]
  91 005e 7A68     		ldr	r2, [r7, #4]
  92 0060 1268     		ldr	r2, [r2]
  93 0062 5269     		ldr	r2, [r2, #20]
  94 0064 22F02A02 		bic	r2, r2, #42
  95 0068 5A61     		str	r2, [r3, #20]
 295:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 296:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Enable the peripheral */
 297:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   __HAL_UART_ENABLE(huart);
  96              		.loc 1 297 0
  97 006a 7B68     		ldr	r3, [r7, #4]
  98 006c 1B68     		ldr	r3, [r3]
  99 006e 7A68     		ldr	r2, [r7, #4]
 100 0070 1268     		ldr	r2, [r2]
 101 0072 D268     		ldr	r2, [r2, #12]
 102 0074 42F40052 		orr	r2, r2, #8192
 103 0078 DA60     		str	r2, [r3, #12]
ARM GAS  /tmp/cckhygdq.s 			page 8


 298:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 299:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Initialize the UART state */
 300:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
 104              		.loc 1 300 0
 105 007a 7B68     		ldr	r3, [r7, #4]
 106 007c 0022     		movs	r2, #0
 107 007e DA63     		str	r2, [r3, #60]
 301:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->State= HAL_UART_STATE_READY;
 108              		.loc 1 301 0
 109 0080 7B68     		ldr	r3, [r7, #4]
 110 0082 0122     		movs	r2, #1
 111 0084 83F83920 		strb	r2, [r3, #57]
 302:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 303:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   return HAL_OK;
 112              		.loc 1 303 0
 113 0088 0023     		movs	r3, #0
 114              	.L3:
 304:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
 115              		.loc 1 304 0
 116 008a 1846     		mov	r0, r3
 117 008c 0837     		adds	r7, r7, #8
 118              	.LCFI3:
 119              		.cfi_def_cfa_offset 8
 120 008e BD46     		mov	sp, r7
 121              	.LCFI4:
 122              		.cfi_def_cfa_register 13
 123              		@ sp needed
 124 0090 80BD     		pop	{r7, pc}
 125              		.cfi_endproc
 126              	.LFE63:
 128 0092 00BF     		.section	.text.HAL_HalfDuplex_Init,"ax",%progbits
 129              		.align	2
 130              		.global	HAL_HalfDuplex_Init
 131              		.thumb
 132              		.thumb_func
 134              	HAL_HalfDuplex_Init:
 135              	.LFB64:
 305:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 306:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
 307:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief  Initializes the half-duplex mode according to the specified
 308:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *         parameters in the UART_InitTypeDef and create the associated handle.
 309:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  huart: Pointer to a UART_HandleTypeDef structure that contains
 310:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *                the configuration information for the specified UART module.
 311:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval HAL status
 312:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
 313:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** HAL_StatusTypeDef HAL_HalfDuplex_Init(UART_HandleTypeDef *huart)
 314:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
 136              		.loc 1 314 0
 137              		.cfi_startproc
 138              		@ args = 0, pretend = 0, frame = 8
 139              		@ frame_needed = 1, uses_anonymous_args = 0
 140 0000 80B5     		push	{r7, lr}
 141              	.LCFI5:
 142              		.cfi_def_cfa_offset 8
 143              		.cfi_offset 7, -8
 144              		.cfi_offset 14, -4
 145 0002 82B0     		sub	sp, sp, #8
ARM GAS  /tmp/cckhygdq.s 			page 9


 146              	.LCFI6:
 147              		.cfi_def_cfa_offset 16
 148 0004 00AF     		add	r7, sp, #0
 149              	.LCFI7:
 150              		.cfi_def_cfa_register 7
 151 0006 7860     		str	r0, [r7, #4]
 315:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Check the UART handle allocation */
 316:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if(huart == NULL)
 152              		.loc 1 316 0
 153 0008 7B68     		ldr	r3, [r7, #4]
 154 000a 002B     		cmp	r3, #0
 155 000c 01D1     		bne	.L6
 317:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 318:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     return HAL_ERROR;
 156              		.loc 1 318 0
 157 000e 0123     		movs	r3, #1
 158 0010 43E0     		b	.L7
 159              	.L6:
 319:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
 320:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 321:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Check UART instance */
 322:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   assert_param(IS_UART_HALFDUPLEX_INSTANCE(huart->Instance));
 323:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   assert_param(IS_UART_WORD_LENGTH(huart->Init.WordLength));
 324:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   assert_param(IS_UART_OVERSAMPLING(huart->Init.OverSampling));
 325:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 326:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if(huart->State == HAL_UART_STATE_RESET)
 160              		.loc 1 326 0
 161 0012 7B68     		ldr	r3, [r7, #4]
 162 0014 93F83930 		ldrb	r3, [r3, #57]
 163 0018 DBB2     		uxtb	r3, r3
 164 001a 002B     		cmp	r3, #0
 165 001c 06D1     		bne	.L8
 327:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {   
 328:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Allocate lock resource and initialize it */
 329:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->Lock = HAL_UNLOCKED;
 166              		.loc 1 329 0
 167 001e 7B68     		ldr	r3, [r7, #4]
 168 0020 0022     		movs	r2, #0
 169 0022 83F83820 		strb	r2, [r3, #56]
 330:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 331:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Init the low level hardware */
 332:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     HAL_UART_MspInit(huart);
 170              		.loc 1 332 0
 171 0026 7868     		ldr	r0, [r7, #4]
 172 0028 FFF7FEFF 		bl	HAL_UART_MspInit
 173              	.L8:
 333:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
 334:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 335:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->State = HAL_UART_STATE_BUSY;
 174              		.loc 1 335 0
 175 002c 7B68     		ldr	r3, [r7, #4]
 176 002e 0222     		movs	r2, #2
 177 0030 83F83920 		strb	r2, [r3, #57]
 336:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 337:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Disable the peripheral */
 338:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   __HAL_UART_DISABLE(huart);
 178              		.loc 1 338 0
ARM GAS  /tmp/cckhygdq.s 			page 10


 179 0034 7B68     		ldr	r3, [r7, #4]
 180 0036 1B68     		ldr	r3, [r3]
 181 0038 7A68     		ldr	r2, [r7, #4]
 182 003a 1268     		ldr	r2, [r2]
 183 003c D268     		ldr	r2, [r2, #12]
 184 003e 22F40052 		bic	r2, r2, #8192
 185 0042 DA60     		str	r2, [r3, #12]
 339:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 340:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Set the UART Communication parameters */
 341:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   UART_SetConfig(huart);
 186              		.loc 1 341 0
 187 0044 7868     		ldr	r0, [r7, #4]
 188 0046 FFF7FEFF 		bl	UART_SetConfig
 342:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 343:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* In half-duplex mode, the following bits must be kept cleared: 
 344:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****      - LINEN and CLKEN bits in the USART_CR2 register,
 345:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****      - SCEN and IREN bits in the USART_CR3 register.*/
 346:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
 189              		.loc 1 346 0
 190 004a 7B68     		ldr	r3, [r7, #4]
 191 004c 1B68     		ldr	r3, [r3]
 192 004e 7A68     		ldr	r2, [r7, #4]
 193 0050 1268     		ldr	r2, [r2]
 194 0052 1269     		ldr	r2, [r2, #16]
 195 0054 22F49042 		bic	r2, r2, #18432
 196 0058 1A61     		str	r2, [r3, #16]
 347:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_IREN | USART_CR3_SCEN));
 197              		.loc 1 347 0
 198 005a 7B68     		ldr	r3, [r7, #4]
 199 005c 1B68     		ldr	r3, [r3]
 200 005e 7A68     		ldr	r2, [r7, #4]
 201 0060 1268     		ldr	r2, [r2]
 202 0062 5269     		ldr	r2, [r2, #20]
 203 0064 22F02202 		bic	r2, r2, #34
 204 0068 5A61     		str	r2, [r3, #20]
 348:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 349:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Enable the Half-Duplex mode by setting the HDSEL bit in the CR3 register */
 350:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   SET_BIT(huart->Instance->CR3, USART_CR3_HDSEL);
 205              		.loc 1 350 0
 206 006a 7B68     		ldr	r3, [r7, #4]
 207 006c 1B68     		ldr	r3, [r3]
 208 006e 7A68     		ldr	r2, [r7, #4]
 209 0070 1268     		ldr	r2, [r2]
 210 0072 5269     		ldr	r2, [r2, #20]
 211 0074 42F00802 		orr	r2, r2, #8
 212 0078 5A61     		str	r2, [r3, #20]
 351:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****  
 352:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Enable the peripheral */
 353:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   __HAL_UART_ENABLE(huart);
 213              		.loc 1 353 0
 214 007a 7B68     		ldr	r3, [r7, #4]
 215 007c 1B68     		ldr	r3, [r3]
 216 007e 7A68     		ldr	r2, [r7, #4]
 217 0080 1268     		ldr	r2, [r2]
 218 0082 D268     		ldr	r2, [r2, #12]
 219 0084 42F40052 		orr	r2, r2, #8192
 220 0088 DA60     		str	r2, [r3, #12]
ARM GAS  /tmp/cckhygdq.s 			page 11


 354:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 355:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Initialize the UART state*/
 356:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
 221              		.loc 1 356 0
 222 008a 7B68     		ldr	r3, [r7, #4]
 223 008c 0022     		movs	r2, #0
 224 008e DA63     		str	r2, [r3, #60]
 357:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->State= HAL_UART_STATE_READY;
 225              		.loc 1 357 0
 226 0090 7B68     		ldr	r3, [r7, #4]
 227 0092 0122     		movs	r2, #1
 228 0094 83F83920 		strb	r2, [r3, #57]
 358:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 359:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   return HAL_OK;
 229              		.loc 1 359 0
 230 0098 0023     		movs	r3, #0
 231              	.L7:
 360:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
 232              		.loc 1 360 0
 233 009a 1846     		mov	r0, r3
 234 009c 0837     		adds	r7, r7, #8
 235              	.LCFI8:
 236              		.cfi_def_cfa_offset 8
 237 009e BD46     		mov	sp, r7
 238              	.LCFI9:
 239              		.cfi_def_cfa_register 13
 240              		@ sp needed
 241 00a0 80BD     		pop	{r7, pc}
 242              		.cfi_endproc
 243              	.LFE64:
 245 00a2 00BF     		.section	.text.HAL_LIN_Init,"ax",%progbits
 246              		.align	2
 247              		.global	HAL_LIN_Init
 248              		.thumb
 249              		.thumb_func
 251              	HAL_LIN_Init:
 252              	.LFB65:
 361:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 362:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
 363:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief  Initializes the LIN mode according to the specified
 364:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *         parameters in the UART_InitTypeDef and create the associated handle.
 365:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  huart: Pointer to a UART_HandleTypeDef structure that contains
 366:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *                the configuration information for the specified UART module.
 367:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  BreakDetectLength: Specifies the LIN break detection length.
 368:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *         This parameter can be one of the following values:
 369:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *            @arg UART_LINBREAKDETECTLENGTH_10B: 10-bit break detection
 370:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *            @arg UART_LINBREAKDETECTLENGTH_11B: 11-bit break detection
 371:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval HAL status
 372:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
 373:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** HAL_StatusTypeDef HAL_LIN_Init(UART_HandleTypeDef *huart, uint32_t BreakDetectLength)
 374:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
 253              		.loc 1 374 0
 254              		.cfi_startproc
 255              		@ args = 0, pretend = 0, frame = 8
 256              		@ frame_needed = 1, uses_anonymous_args = 0
 257 0000 80B5     		push	{r7, lr}
 258              	.LCFI10:
ARM GAS  /tmp/cckhygdq.s 			page 12


 259              		.cfi_def_cfa_offset 8
 260              		.cfi_offset 7, -8
 261              		.cfi_offset 14, -4
 262 0002 82B0     		sub	sp, sp, #8
 263              	.LCFI11:
 264              		.cfi_def_cfa_offset 16
 265 0004 00AF     		add	r7, sp, #0
 266              	.LCFI12:
 267              		.cfi_def_cfa_register 7
 268 0006 7860     		str	r0, [r7, #4]
 269 0008 3960     		str	r1, [r7]
 375:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Check the UART handle allocation */
 376:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if(huart == NULL)
 270              		.loc 1 376 0
 271 000a 7B68     		ldr	r3, [r7, #4]
 272 000c 002B     		cmp	r3, #0
 273 000e 01D1     		bne	.L10
 377:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 378:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     return HAL_ERROR;
 274              		.loc 1 378 0
 275 0010 0123     		movs	r3, #1
 276 0012 4DE0     		b	.L11
 277              	.L10:
 379:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
 380:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 381:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Check the LIN UART instance */  
 382:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   assert_param(IS_UART_LIN_INSTANCE(huart->Instance));
 383:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Check the Break detection length parameter */
 384:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   assert_param(IS_UART_LIN_BREAK_DETECT_LENGTH(BreakDetectLength));
 385:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   assert_param(IS_UART_LIN_WORD_LENGTH(huart->Init.WordLength));
 386:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   assert_param(IS_UART_LIN_OVERSAMPLING(huart->Init.OverSampling));
 387:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 388:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if(huart->State == HAL_UART_STATE_RESET)
 278              		.loc 1 388 0
 279 0014 7B68     		ldr	r3, [r7, #4]
 280 0016 93F83930 		ldrb	r3, [r3, #57]
 281 001a DBB2     		uxtb	r3, r3
 282 001c 002B     		cmp	r3, #0
 283 001e 06D1     		bne	.L12
 389:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {   
 390:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Allocate lock resource and initialize it */
 391:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->Lock = HAL_UNLOCKED;  
 284              		.loc 1 391 0
 285 0020 7B68     		ldr	r3, [r7, #4]
 286 0022 0022     		movs	r2, #0
 287 0024 83F83820 		strb	r2, [r3, #56]
 392:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 393:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Init the low level hardware */
 394:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     HAL_UART_MspInit(huart);
 288              		.loc 1 394 0
 289 0028 7868     		ldr	r0, [r7, #4]
 290 002a FFF7FEFF 		bl	HAL_UART_MspInit
 291              	.L12:
 395:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
 396:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 397:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->State = HAL_UART_STATE_BUSY;
 292              		.loc 1 397 0
ARM GAS  /tmp/cckhygdq.s 			page 13


 293 002e 7B68     		ldr	r3, [r7, #4]
 294 0030 0222     		movs	r2, #2
 295 0032 83F83920 		strb	r2, [r3, #57]
 398:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 399:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Disable the peripheral */
 400:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   __HAL_UART_DISABLE(huart);
 296              		.loc 1 400 0
 297 0036 7B68     		ldr	r3, [r7, #4]
 298 0038 1B68     		ldr	r3, [r3]
 299 003a 7A68     		ldr	r2, [r7, #4]
 300 003c 1268     		ldr	r2, [r2]
 301 003e D268     		ldr	r2, [r2, #12]
 302 0040 22F40052 		bic	r2, r2, #8192
 303 0044 DA60     		str	r2, [r3, #12]
 401:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 402:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Set the UART Communication parameters */
 403:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   UART_SetConfig(huart);
 304              		.loc 1 403 0
 305 0046 7868     		ldr	r0, [r7, #4]
 306 0048 FFF7FEFF 		bl	UART_SetConfig
 404:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 405:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* In LIN mode, the following bits must be kept cleared: 
 406:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****      - CLKEN bits in the USART_CR2 register,
 407:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****      - SCEN and IREN bits in the USART_CR3 register.*/
 408:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR2, USART_CR2_CLKEN);
 307              		.loc 1 408 0
 308 004c 7B68     		ldr	r3, [r7, #4]
 309 004e 1B68     		ldr	r3, [r3]
 310 0050 7A68     		ldr	r2, [r7, #4]
 311 0052 1268     		ldr	r2, [r2]
 312 0054 1269     		ldr	r2, [r2, #16]
 313 0056 22F40062 		bic	r2, r2, #2048
 314 005a 1A61     		str	r2, [r3, #16]
 409:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_HDSEL | USART_CR3_IREN | USART_CR3_SCEN));
 315              		.loc 1 409 0
 316 005c 7B68     		ldr	r3, [r7, #4]
 317 005e 1B68     		ldr	r3, [r3]
 318 0060 7A68     		ldr	r2, [r7, #4]
 319 0062 1268     		ldr	r2, [r2]
 320 0064 5269     		ldr	r2, [r2, #20]
 321 0066 22F02A02 		bic	r2, r2, #42
 322 006a 5A61     		str	r2, [r3, #20]
 410:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 411:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Enable the LIN mode by setting the LINEN bit in the CR2 register */
 412:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   SET_BIT(huart->Instance->CR2, USART_CR2_LINEN);
 323              		.loc 1 412 0
 324 006c 7B68     		ldr	r3, [r7, #4]
 325 006e 1B68     		ldr	r3, [r3]
 326 0070 7A68     		ldr	r2, [r7, #4]
 327 0072 1268     		ldr	r2, [r2]
 328 0074 1269     		ldr	r2, [r2, #16]
 329 0076 42F48042 		orr	r2, r2, #16384
 330 007a 1A61     		str	r2, [r3, #16]
 413:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 414:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Set the USART LIN Break detection length. */
 415:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR2, USART_CR2_LBDL, BreakDetectLength);
 331              		.loc 1 415 0
ARM GAS  /tmp/cckhygdq.s 			page 14


 332 007c 7B68     		ldr	r3, [r7, #4]
 333 007e 1B68     		ldr	r3, [r3]
 334 0080 7A68     		ldr	r2, [r7, #4]
 335 0082 1268     		ldr	r2, [r2]
 336 0084 1269     		ldr	r2, [r2, #16]
 337 0086 22F02001 		bic	r1, r2, #32
 338 008a 3A68     		ldr	r2, [r7]
 339 008c 0A43     		orrs	r2, r2, r1
 340 008e 1A61     		str	r2, [r3, #16]
 416:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 417:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Enable the peripheral */
 418:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   __HAL_UART_ENABLE(huart);
 341              		.loc 1 418 0
 342 0090 7B68     		ldr	r3, [r7, #4]
 343 0092 1B68     		ldr	r3, [r3]
 344 0094 7A68     		ldr	r2, [r7, #4]
 345 0096 1268     		ldr	r2, [r2]
 346 0098 D268     		ldr	r2, [r2, #12]
 347 009a 42F40052 		orr	r2, r2, #8192
 348 009e DA60     		str	r2, [r3, #12]
 419:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 420:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Initialize the UART state*/
 421:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
 349              		.loc 1 421 0
 350 00a0 7B68     		ldr	r3, [r7, #4]
 351 00a2 0022     		movs	r2, #0
 352 00a4 DA63     		str	r2, [r3, #60]
 422:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->State= HAL_UART_STATE_READY;
 353              		.loc 1 422 0
 354 00a6 7B68     		ldr	r3, [r7, #4]
 355 00a8 0122     		movs	r2, #1
 356 00aa 83F83920 		strb	r2, [r3, #57]
 423:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 424:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   return HAL_OK;
 357              		.loc 1 424 0
 358 00ae 0023     		movs	r3, #0
 359              	.L11:
 425:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
 360              		.loc 1 425 0
 361 00b0 1846     		mov	r0, r3
 362 00b2 0837     		adds	r7, r7, #8
 363              	.LCFI13:
 364              		.cfi_def_cfa_offset 8
 365 00b4 BD46     		mov	sp, r7
 366              	.LCFI14:
 367              		.cfi_def_cfa_register 13
 368              		@ sp needed
 369 00b6 80BD     		pop	{r7, pc}
 370              		.cfi_endproc
 371              	.LFE65:
 373              		.section	.text.HAL_MultiProcessor_Init,"ax",%progbits
 374              		.align	2
 375              		.global	HAL_MultiProcessor_Init
 376              		.thumb
 377              		.thumb_func
 379              	HAL_MultiProcessor_Init:
 380              	.LFB66:
ARM GAS  /tmp/cckhygdq.s 			page 15


 426:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 427:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
 428:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief  Initializes the Multi-Processor mode according to the specified
 429:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *         parameters in the UART_InitTypeDef and create the associated handle.
 430:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  huart: Pointer to a UART_HandleTypeDef structure that contains
 431:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *                the configuration information for the specified UART module.
 432:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  Address: UART node address
 433:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  WakeUpMethod: specifies the UART wakeup method.
 434:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *         This parameter can be one of the following values:
 435:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *            @arg UART_WAKEUPMETHOD_IDLELINE: Wakeup by an idle line detection
 436:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *            @arg UART_WAKEUPMETHOD_ADDRESSMARK: Wakeup by an address mark
 437:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval HAL status
 438:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
 439:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** HAL_StatusTypeDef HAL_MultiProcessor_Init(UART_HandleTypeDef *huart, uint8_t Address, uint32_t Wake
 440:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
 381              		.loc 1 440 0
 382              		.cfi_startproc
 383              		@ args = 0, pretend = 0, frame = 16
 384              		@ frame_needed = 1, uses_anonymous_args = 0
 385 0000 80B5     		push	{r7, lr}
 386              	.LCFI15:
 387              		.cfi_def_cfa_offset 8
 388              		.cfi_offset 7, -8
 389              		.cfi_offset 14, -4
 390 0002 84B0     		sub	sp, sp, #16
 391              	.LCFI16:
 392              		.cfi_def_cfa_offset 24
 393 0004 00AF     		add	r7, sp, #0
 394              	.LCFI17:
 395              		.cfi_def_cfa_register 7
 396 0006 F860     		str	r0, [r7, #12]
 397 0008 0B46     		mov	r3, r1
 398 000a 7A60     		str	r2, [r7, #4]
 399 000c FB72     		strb	r3, [r7, #11]
 441:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Check the UART handle allocation */
 442:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if(huart == NULL)
 400              		.loc 1 442 0
 401 000e FB68     		ldr	r3, [r7, #12]
 402 0010 002B     		cmp	r3, #0
 403 0012 01D1     		bne	.L14
 443:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 444:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     return HAL_ERROR;
 404              		.loc 1 444 0
 405 0014 0123     		movs	r3, #1
 406 0016 4FE0     		b	.L15
 407              	.L14:
 445:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
 446:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 447:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Check UART instance capabilities */  
 448:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   assert_param(IS_UART_MULTIPROCESSOR_INSTANCE(huart->Instance));
 449:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 450:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Check the Address & wake up method parameters */
 451:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   assert_param(IS_UART_WAKEUPMETHOD(WakeUpMethod));
 452:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   assert_param(IS_UART_ADDRESS(Address));
 453:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   assert_param(IS_UART_WORD_LENGTH(huart->Init.WordLength));
 454:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   assert_param(IS_UART_OVERSAMPLING(huart->Init.OverSampling));
 455:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
ARM GAS  /tmp/cckhygdq.s 			page 16


 456:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if(huart->State == HAL_UART_STATE_RESET)
 408              		.loc 1 456 0
 409 0018 FB68     		ldr	r3, [r7, #12]
 410 001a 93F83930 		ldrb	r3, [r3, #57]
 411 001e DBB2     		uxtb	r3, r3
 412 0020 002B     		cmp	r3, #0
 413 0022 06D1     		bne	.L16
 457:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {   
 458:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Allocate lock resource and initialize it */
 459:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->Lock = HAL_UNLOCKED;
 414              		.loc 1 459 0
 415 0024 FB68     		ldr	r3, [r7, #12]
 416 0026 0022     		movs	r2, #0
 417 0028 83F83820 		strb	r2, [r3, #56]
 460:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 461:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Init the low level hardware */
 462:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     HAL_UART_MspInit(huart);
 418              		.loc 1 462 0
 419 002c F868     		ldr	r0, [r7, #12]
 420 002e FFF7FEFF 		bl	HAL_UART_MspInit
 421              	.L16:
 463:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
 464:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 465:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->State = HAL_UART_STATE_BUSY;
 422              		.loc 1 465 0
 423 0032 FB68     		ldr	r3, [r7, #12]
 424 0034 0222     		movs	r2, #2
 425 0036 83F83920 		strb	r2, [r3, #57]
 466:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 467:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Disable the peripheral */
 468:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   __HAL_UART_DISABLE(huart);
 426              		.loc 1 468 0
 427 003a FB68     		ldr	r3, [r7, #12]
 428 003c 1B68     		ldr	r3, [r3]
 429 003e FA68     		ldr	r2, [r7, #12]
 430 0040 1268     		ldr	r2, [r2]
 431 0042 D268     		ldr	r2, [r2, #12]
 432 0044 22F40052 		bic	r2, r2, #8192
 433 0048 DA60     		str	r2, [r3, #12]
 469:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 470:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Set the UART Communication parameters */
 471:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   UART_SetConfig(huart);
 434              		.loc 1 471 0
 435 004a F868     		ldr	r0, [r7, #12]
 436 004c FFF7FEFF 		bl	UART_SetConfig
 472:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 473:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* In Multi-Processor mode, the following bits must be kept cleared: 
 474:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****      - LINEN and CLKEN bits in the USART_CR2 register,
 475:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****      - SCEN, HDSEL and IREN  bits in the USART_CR3 register */
 476:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
 437              		.loc 1 476 0
 438 0050 FB68     		ldr	r3, [r7, #12]
 439 0052 1B68     		ldr	r3, [r3]
 440 0054 FA68     		ldr	r2, [r7, #12]
 441 0056 1268     		ldr	r2, [r2]
 442 0058 1269     		ldr	r2, [r2, #16]
 443 005a 22F49042 		bic	r2, r2, #18432
ARM GAS  /tmp/cckhygdq.s 			page 17


 444 005e 1A61     		str	r2, [r3, #16]
 477:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
 445              		.loc 1 477 0
 446 0060 FB68     		ldr	r3, [r7, #12]
 447 0062 1B68     		ldr	r3, [r3]
 448 0064 FA68     		ldr	r2, [r7, #12]
 449 0066 1268     		ldr	r2, [r2]
 450 0068 5269     		ldr	r2, [r2, #20]
 451 006a 22F02A02 		bic	r2, r2, #42
 452 006e 5A61     		str	r2, [r3, #20]
 478:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 479:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Set the USART address node */
 480:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR2, USART_CR2_ADD, Address);
 453              		.loc 1 480 0
 454 0070 FB68     		ldr	r3, [r7, #12]
 455 0072 1B68     		ldr	r3, [r3]
 456 0074 FA68     		ldr	r2, [r7, #12]
 457 0076 1268     		ldr	r2, [r2]
 458 0078 1269     		ldr	r2, [r2, #16]
 459 007a 22F00F01 		bic	r1, r2, #15
 460 007e FA7A     		ldrb	r2, [r7, #11]	@ zero_extendqisi2
 461 0080 0A43     		orrs	r2, r2, r1
 462 0082 1A61     		str	r2, [r3, #16]
 481:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 482:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Set the wake up method by setting the WAKE bit in the CR1 register */
 483:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR1, USART_CR1_WAKE, WakeUpMethod);
 463              		.loc 1 483 0
 464 0084 FB68     		ldr	r3, [r7, #12]
 465 0086 1B68     		ldr	r3, [r3]
 466 0088 FA68     		ldr	r2, [r7, #12]
 467 008a 1268     		ldr	r2, [r2]
 468 008c D268     		ldr	r2, [r2, #12]
 469 008e 22F40061 		bic	r1, r2, #2048
 470 0092 7A68     		ldr	r2, [r7, #4]
 471 0094 0A43     		orrs	r2, r2, r1
 472 0096 DA60     		str	r2, [r3, #12]
 484:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 485:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Enable the peripheral */
 486:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   __HAL_UART_ENABLE(huart);
 473              		.loc 1 486 0
 474 0098 FB68     		ldr	r3, [r7, #12]
 475 009a 1B68     		ldr	r3, [r3]
 476 009c FA68     		ldr	r2, [r7, #12]
 477 009e 1268     		ldr	r2, [r2]
 478 00a0 D268     		ldr	r2, [r2, #12]
 479 00a2 42F40052 		orr	r2, r2, #8192
 480 00a6 DA60     		str	r2, [r3, #12]
 487:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 488:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Initialize the UART state */
 489:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
 481              		.loc 1 489 0
 482 00a8 FB68     		ldr	r3, [r7, #12]
 483 00aa 0022     		movs	r2, #0
 484 00ac DA63     		str	r2, [r3, #60]
 490:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->State= HAL_UART_STATE_READY;
 485              		.loc 1 490 0
 486 00ae FB68     		ldr	r3, [r7, #12]
ARM GAS  /tmp/cckhygdq.s 			page 18


 487 00b0 0122     		movs	r2, #1
 488 00b2 83F83920 		strb	r2, [r3, #57]
 491:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 492:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   return HAL_OK;
 489              		.loc 1 492 0
 490 00b6 0023     		movs	r3, #0
 491              	.L15:
 493:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
 492              		.loc 1 493 0
 493 00b8 1846     		mov	r0, r3
 494 00ba 1037     		adds	r7, r7, #16
 495              	.LCFI18:
 496              		.cfi_def_cfa_offset 8
 497 00bc BD46     		mov	sp, r7
 498              	.LCFI19:
 499              		.cfi_def_cfa_register 13
 500              		@ sp needed
 501 00be 80BD     		pop	{r7, pc}
 502              		.cfi_endproc
 503              	.LFE66:
 505              		.section	.text.HAL_UART_DeInit,"ax",%progbits
 506              		.align	2
 507              		.global	HAL_UART_DeInit
 508              		.thumb
 509              		.thumb_func
 511              	HAL_UART_DeInit:
 512              	.LFB67:
 494:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 495:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
 496:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief  DeInitializes the UART peripheral. 
 497:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  huart: Pointer to a UART_HandleTypeDef structure that contains
 498:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *                the configuration information for the specified UART module.
 499:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval HAL status
 500:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
 501:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_DeInit(UART_HandleTypeDef *huart)
 502:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
 513              		.loc 1 502 0
 514              		.cfi_startproc
 515              		@ args = 0, pretend = 0, frame = 8
 516              		@ frame_needed = 1, uses_anonymous_args = 0
 517 0000 80B5     		push	{r7, lr}
 518              	.LCFI20:
 519              		.cfi_def_cfa_offset 8
 520              		.cfi_offset 7, -8
 521              		.cfi_offset 14, -4
 522 0002 82B0     		sub	sp, sp, #8
 523              	.LCFI21:
 524              		.cfi_def_cfa_offset 16
 525 0004 00AF     		add	r7, sp, #0
 526              	.LCFI22:
 527              		.cfi_def_cfa_register 7
 528 0006 7860     		str	r0, [r7, #4]
 503:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Check the UART handle allocation */
 504:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if(huart == NULL)
 529              		.loc 1 504 0
 530 0008 7B68     		ldr	r3, [r7, #4]
 531 000a 002B     		cmp	r3, #0
ARM GAS  /tmp/cckhygdq.s 			page 19


 532 000c 01D1     		bne	.L18
 505:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 506:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     return HAL_ERROR;
 533              		.loc 1 506 0
 534 000e 0123     		movs	r3, #1
 535 0010 26E0     		b	.L19
 536              	.L18:
 507:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
 508:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 509:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Check the parameters */
 510:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   assert_param(IS_UART_INSTANCE(huart->Instance));
 511:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 512:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->State = HAL_UART_STATE_BUSY;
 537              		.loc 1 512 0
 538 0012 7B68     		ldr	r3, [r7, #4]
 539 0014 0222     		movs	r2, #2
 540 0016 83F83920 		strb	r2, [r3, #57]
 513:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 514:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Disable the Peripheral */
 515:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   __HAL_UART_DISABLE(huart);
 541              		.loc 1 515 0
 542 001a 7B68     		ldr	r3, [r7, #4]
 543 001c 1B68     		ldr	r3, [r3]
 544 001e 7A68     		ldr	r2, [r7, #4]
 545 0020 1268     		ldr	r2, [r2]
 546 0022 D268     		ldr	r2, [r2, #12]
 547 0024 22F40052 		bic	r2, r2, #8192
 548 0028 DA60     		str	r2, [r3, #12]
 516:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 517:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->Instance->CR1 = 0x0;
 549              		.loc 1 517 0
 550 002a 7B68     		ldr	r3, [r7, #4]
 551 002c 1B68     		ldr	r3, [r3]
 552 002e 0022     		movs	r2, #0
 553 0030 DA60     		str	r2, [r3, #12]
 518:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->Instance->CR2 = 0x0;
 554              		.loc 1 518 0
 555 0032 7B68     		ldr	r3, [r7, #4]
 556 0034 1B68     		ldr	r3, [r3]
 557 0036 0022     		movs	r2, #0
 558 0038 1A61     		str	r2, [r3, #16]
 519:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->Instance->CR3 = 0x0;
 559              		.loc 1 519 0
 560 003a 7B68     		ldr	r3, [r7, #4]
 561 003c 1B68     		ldr	r3, [r3]
 562 003e 0022     		movs	r2, #0
 563 0040 5A61     		str	r2, [r3, #20]
 520:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 521:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* DeInit the low level hardware */
 522:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   HAL_UART_MspDeInit(huart);
 564              		.loc 1 522 0
 565 0042 7868     		ldr	r0, [r7, #4]
 566 0044 FFF7FEFF 		bl	HAL_UART_MspDeInit
 523:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 524:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
 567              		.loc 1 524 0
 568 0048 7B68     		ldr	r3, [r7, #4]
ARM GAS  /tmp/cckhygdq.s 			page 20


 569 004a 0022     		movs	r2, #0
 570 004c DA63     		str	r2, [r3, #60]
 525:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->State = HAL_UART_STATE_RESET;
 571              		.loc 1 525 0
 572 004e 7B68     		ldr	r3, [r7, #4]
 573 0050 0022     		movs	r2, #0
 574 0052 83F83920 		strb	r2, [r3, #57]
 526:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 527:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Process Unlock */
 528:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   __HAL_UNLOCK(huart);
 575              		.loc 1 528 0
 576 0056 7B68     		ldr	r3, [r7, #4]
 577 0058 0022     		movs	r2, #0
 578 005a 83F83820 		strb	r2, [r3, #56]
 529:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 530:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   return HAL_OK;
 579              		.loc 1 530 0
 580 005e 0023     		movs	r3, #0
 581              	.L19:
 531:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
 582              		.loc 1 531 0
 583 0060 1846     		mov	r0, r3
 584 0062 0837     		adds	r7, r7, #8
 585              	.LCFI23:
 586              		.cfi_def_cfa_offset 8
 587 0064 BD46     		mov	sp, r7
 588              	.LCFI24:
 589              		.cfi_def_cfa_register 13
 590              		@ sp needed
 591 0066 80BD     		pop	{r7, pc}
 592              		.cfi_endproc
 593              	.LFE67:
 595              		.section	.text.HAL_UART_MspInit,"ax",%progbits
 596              		.align	2
 597              		.weak	HAL_UART_MspInit
 598              		.thumb
 599              		.thumb_func
 601              	HAL_UART_MspInit:
 602              	.LFB68:
 532:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 533:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
 534:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief  UART MSP Init.
 535:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  huart: Pointer to a UART_HandleTypeDef structure that contains
 536:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *                the configuration information for the specified UART module.
 537:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval None
 538:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
 539:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****  __weak void HAL_UART_MspInit(UART_HandleTypeDef *huart)
 540:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
 603              		.loc 1 540 0
 604              		.cfi_startproc
 605              		@ args = 0, pretend = 0, frame = 8
 606              		@ frame_needed = 1, uses_anonymous_args = 0
 607              		@ link register save eliminated.
 608 0000 80B4     		push	{r7}
 609              	.LCFI25:
 610              		.cfi_def_cfa_offset 4
 611              		.cfi_offset 7, -4
ARM GAS  /tmp/cckhygdq.s 			page 21


 612 0002 83B0     		sub	sp, sp, #12
 613              	.LCFI26:
 614              		.cfi_def_cfa_offset 16
 615 0004 00AF     		add	r7, sp, #0
 616              	.LCFI27:
 617              		.cfi_def_cfa_register 7
 618 0006 7860     		str	r0, [r7, #4]
 541:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 542:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   UNUSED(huart);
 543:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* NOTE: This function should not be modified, when the callback is needed,
 544:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****            the HAL_UART_MspInit can be implemented in the user file
 545:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****    */ 
 546:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
 619              		.loc 1 546 0
 620 0008 0C37     		adds	r7, r7, #12
 621              	.LCFI28:
 622              		.cfi_def_cfa_offset 4
 623 000a BD46     		mov	sp, r7
 624              	.LCFI29:
 625              		.cfi_def_cfa_register 13
 626              		@ sp needed
 627 000c 5DF8047B 		ldr	r7, [sp], #4
 628              	.LCFI30:
 629              		.cfi_restore 7
 630              		.cfi_def_cfa_offset 0
 631 0010 7047     		bx	lr
 632              		.cfi_endproc
 633              	.LFE68:
 635 0012 00BF     		.section	.text.HAL_UART_MspDeInit,"ax",%progbits
 636              		.align	2
 637              		.weak	HAL_UART_MspDeInit
 638              		.thumb
 639              		.thumb_func
 641              	HAL_UART_MspDeInit:
 642              	.LFB69:
 547:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 548:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
 549:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief  UART MSP DeInit.
 550:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  huart: Pointer to a UART_HandleTypeDef structure that contains
 551:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *                the configuration information for the specified UART module.
 552:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval None
 553:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
 554:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****  __weak void HAL_UART_MspDeInit(UART_HandleTypeDef *huart)
 555:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
 643              		.loc 1 555 0
 644              		.cfi_startproc
 645              		@ args = 0, pretend = 0, frame = 8
 646              		@ frame_needed = 1, uses_anonymous_args = 0
 647              		@ link register save eliminated.
 648 0000 80B4     		push	{r7}
 649              	.LCFI31:
 650              		.cfi_def_cfa_offset 4
 651              		.cfi_offset 7, -4
 652 0002 83B0     		sub	sp, sp, #12
 653              	.LCFI32:
 654              		.cfi_def_cfa_offset 16
 655 0004 00AF     		add	r7, sp, #0
ARM GAS  /tmp/cckhygdq.s 			page 22


 656              	.LCFI33:
 657              		.cfi_def_cfa_register 7
 658 0006 7860     		str	r0, [r7, #4]
 556:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 557:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   UNUSED(huart);
 558:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* NOTE: This function should not be modified, when the callback is needed,
 559:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****            the HAL_UART_MspDeInit can be implemented in the user file
 560:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****    */ 
 561:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
 659              		.loc 1 561 0
 660 0008 0C37     		adds	r7, r7, #12
 661              	.LCFI34:
 662              		.cfi_def_cfa_offset 4
 663 000a BD46     		mov	sp, r7
 664              	.LCFI35:
 665              		.cfi_def_cfa_register 13
 666              		@ sp needed
 667 000c 5DF8047B 		ldr	r7, [sp], #4
 668              	.LCFI36:
 669              		.cfi_restore 7
 670              		.cfi_def_cfa_offset 0
 671 0010 7047     		bx	lr
 672              		.cfi_endproc
 673              	.LFE69:
 675 0012 00BF     		.section	.text.HAL_UART_Transmit,"ax",%progbits
 676              		.align	2
 677              		.global	HAL_UART_Transmit
 678              		.thumb
 679              		.thumb_func
 681              	HAL_UART_Transmit:
 682              	.LFB70:
 562:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 563:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
 564:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @}
 565:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
 566:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 567:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /** @defgroup UART_Exported_Functions_Group2 IO operation functions 
 568:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *  @brief UART Transmit and Receive functions 
 569:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *
 570:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** @verbatim
 571:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   ==============================================================================
 572:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****                       ##### IO operation functions #####
 573:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   ==============================================================================  
 574:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   [..]
 575:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     This subsection provides a set of functions allowing to manage the UART asynchronous
 576:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     and Half duplex data transfers.
 577:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 578:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     (#) There are two modes of transfer:
 579:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****        (++) Blocking mode: The communication is performed in polling mode. 
 580:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****             The HAL status of all data processing is returned by the same function 
 581:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****             after finishing transfer.  
 582:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****        (++) Non blocking mode: The communication is performed using Interrupts 
 583:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****             or DMA, these APIs return the HAL status.
 584:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****             The end of the data processing will be indicated through the 
 585:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****             dedicated UART IRQ when using Interrupt mode or the DMA IRQ when 
 586:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****             using DMA mode.
 587:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****             The HAL_UART_TxCpltCallback(), HAL_UART_RxCpltCallback() user callbacks 
ARM GAS  /tmp/cckhygdq.s 			page 23


 588:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****             will be executed respectively at the end of the transmit or receive process.
 589:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****             The HAL_UART_ErrorCallback() user callback will be executed when 
 590:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****             a communication error is detected.
 591:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 592:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     (#) Blocking mode APIs are:
 593:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         (++) HAL_UART_Transmit()
 594:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         (++) HAL_UART_Receive() 
 595:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 596:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     (#) Non Blocking mode APIs with Interrupt are:
 597:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         (++) HAL_UART_Transmit_IT()
 598:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         (++) HAL_UART_Receive_IT()
 599:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         (++) HAL_UART_IRQHandler()
 600:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 601:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     (#) Non Blocking mode functions with DMA are:
 602:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         (++) HAL_UART_Transmit_DMA()
 603:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         (++) HAL_UART_Receive_DMA()
 604:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         (++) HAL_UART_DMAPause()
 605:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         (++) HAL_UART_DMAResume()
 606:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         (++) HAL_UART_DMAStop()
 607:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 608:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     (#) A set of Transfer Complete Callbacks are provided in non blocking mode:
 609:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         (++) HAL_UART_TxHalfCpltCallback()
 610:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         (++) HAL_UART_TxCpltCallback()
 611:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         (++) HAL_UART_RxHalfCpltCallback()
 612:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         (++) HAL_UART_RxCpltCallback()
 613:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         (++) HAL_UART_ErrorCallback()
 614:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 615:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     [..] 
 616:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       (@) In the Half duplex communication, it is forbidden to run the transmit 
 617:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****           and receive process in parallel, the UART state HAL_UART_STATE_BUSY_TX_RX 
 618:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****           can't be useful.
 619:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       
 620:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** @endverbatim
 621:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @{
 622:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
 623:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 624:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
 625:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief  Sends an amount of data in blocking mode. 
 626:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  huart: Pointer to a UART_HandleTypeDef structure that contains
 627:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *                the configuration information for the specified UART module.
 628:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  pData: Pointer to data buffer
 629:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  Size: Amount of data to be sent
 630:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  Timeout: Timeout duration  
 631:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval HAL status
 632:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
 633:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Transmit(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size, uint3
 634:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
 683              		.loc 1 634 0
 684              		.cfi_startproc
 685              		@ args = 0, pretend = 0, frame = 24
 686              		@ frame_needed = 1, uses_anonymous_args = 0
 687 0000 80B5     		push	{r7, lr}
 688              	.LCFI37:
 689              		.cfi_def_cfa_offset 8
 690              		.cfi_offset 7, -8
 691              		.cfi_offset 14, -4
 692 0002 86B0     		sub	sp, sp, #24
ARM GAS  /tmp/cckhygdq.s 			page 24


 693              	.LCFI38:
 694              		.cfi_def_cfa_offset 32
 695 0004 00AF     		add	r7, sp, #0
 696              	.LCFI39:
 697              		.cfi_def_cfa_register 7
 698 0006 F860     		str	r0, [r7, #12]
 699 0008 B960     		str	r1, [r7, #8]
 700 000a 3B60     		str	r3, [r7]
 701 000c 1346     		mov	r3, r2	@ movhi
 702 000e FB80     		strh	r3, [r7, #6]	@ movhi
 635:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   uint16_t* tmp;
 636:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   uint32_t tmp_state = 0;
 703              		.loc 1 636 0
 704 0010 0023     		movs	r3, #0
 705 0012 7B61     		str	r3, [r7, #20]
 637:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 638:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   tmp_state = huart->State;
 706              		.loc 1 638 0
 707 0014 FB68     		ldr	r3, [r7, #12]
 708 0016 93F83930 		ldrb	r3, [r3, #57]
 709 001a DBB2     		uxtb	r3, r3
 710 001c 7B61     		str	r3, [r7, #20]
 639:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if((tmp_state == HAL_UART_STATE_READY) || (tmp_state == HAL_UART_STATE_BUSY_RX))
 711              		.loc 1 639 0
 712 001e 7B69     		ldr	r3, [r7, #20]
 713 0020 012B     		cmp	r3, #1
 714 0022 03D0     		beq	.L23
 715              		.loc 1 639 0 is_stmt 0 discriminator 1
 716 0024 7B69     		ldr	r3, [r7, #20]
 717 0026 222B     		cmp	r3, #34
 718 0028 40F08D80 		bne	.L24
 719              	.L23:
 640:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 641:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     if((pData == NULL) || (Size == 0))
 720              		.loc 1 641 0 is_stmt 1
 721 002c BB68     		ldr	r3, [r7, #8]
 722 002e 002B     		cmp	r3, #0
 723 0030 02D0     		beq	.L25
 724              		.loc 1 641 0 is_stmt 0 discriminator 1
 725 0032 FB88     		ldrh	r3, [r7, #6]
 726 0034 002B     		cmp	r3, #0
 727 0036 01D1     		bne	.L26
 728              	.L25:
 642:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
 643:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       return  HAL_ERROR;
 729              		.loc 1 643 0 is_stmt 1
 730 0038 0123     		movs	r3, #1
 731 003a 85E0     		b	.L27
 732              	.L26:
 644:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
 645:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 646:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Process Locked */
 647:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     __HAL_LOCK(huart);
 733              		.loc 1 647 0
 734 003c FB68     		ldr	r3, [r7, #12]
 735 003e 93F83830 		ldrb	r3, [r3, #56]	@ zero_extendqisi2
 736 0042 012B     		cmp	r3, #1
ARM GAS  /tmp/cckhygdq.s 			page 25


 737 0044 01D1     		bne	.L28
 738              		.loc 1 647 0 is_stmt 0 discriminator 1
 739 0046 0223     		movs	r3, #2
 740 0048 7EE0     		b	.L27
 741              	.L28:
 742              		.loc 1 647 0 discriminator 2
 743 004a FB68     		ldr	r3, [r7, #12]
 744 004c 0122     		movs	r2, #1
 745 004e 83F83820 		strb	r2, [r3, #56]
 648:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 649:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
 746              		.loc 1 649 0 is_stmt 1 discriminator 2
 747 0052 FB68     		ldr	r3, [r7, #12]
 748 0054 0022     		movs	r2, #0
 749 0056 DA63     		str	r2, [r3, #60]
 650:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Check if a non-blocking receive process is ongoing or not */
 651:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     if(huart->State == HAL_UART_STATE_BUSY_RX) 
 750              		.loc 1 651 0 discriminator 2
 751 0058 FB68     		ldr	r3, [r7, #12]
 752 005a 93F83930 		ldrb	r3, [r3, #57]
 753 005e DBB2     		uxtb	r3, r3
 754 0060 222B     		cmp	r3, #34
 755 0062 04D1     		bne	.L29
 652:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
 653:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       huart->State = HAL_UART_STATE_BUSY_TX_RX;
 756              		.loc 1 653 0
 757 0064 FB68     		ldr	r3, [r7, #12]
 758 0066 3222     		movs	r2, #50
 759 0068 83F83920 		strb	r2, [r3, #57]
 760 006c 03E0     		b	.L30
 761              	.L29:
 654:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
 655:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     else
 656:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
 657:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       huart->State = HAL_UART_STATE_BUSY_TX;
 762              		.loc 1 657 0
 763 006e FB68     		ldr	r3, [r7, #12]
 764 0070 1222     		movs	r2, #18
 765 0072 83F83920 		strb	r2, [r3, #57]
 766              	.L30:
 658:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
 659:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 660:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->TxXferSize = Size;
 767              		.loc 1 660 0
 768 0076 FB68     		ldr	r3, [r7, #12]
 769 0078 FA88     		ldrh	r2, [r7, #6]	@ movhi
 770 007a 9A84     		strh	r2, [r3, #36]	@ movhi
 661:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->TxXferCount = Size;
 771              		.loc 1 661 0
 772 007c FB68     		ldr	r3, [r7, #12]
 773 007e FA88     		ldrh	r2, [r7, #6]	@ movhi
 774 0080 DA84     		strh	r2, [r3, #38]	@ movhi
 662:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     while(huart->TxXferCount > 0)
 775              		.loc 1 662 0
 776 0082 3CE0     		b	.L31
 777              	.L37:
 663:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
ARM GAS  /tmp/cckhygdq.s 			page 26


 664:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       huart->TxXferCount--;
 778              		.loc 1 664 0
 779 0084 FB68     		ldr	r3, [r7, #12]
 780 0086 DB8C     		ldrh	r3, [r3, #38]
 781 0088 013B     		subs	r3, r3, #1
 782 008a 9AB2     		uxth	r2, r3
 783 008c FB68     		ldr	r3, [r7, #12]
 784 008e DA84     		strh	r2, [r3, #38]	@ movhi
 665:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       if(huart->Init.WordLength == UART_WORDLENGTH_9B)
 785              		.loc 1 665 0
 786 0090 FB68     		ldr	r3, [r7, #12]
 787 0092 9B68     		ldr	r3, [r3, #8]
 788 0094 B3F5805F 		cmp	r3, #4096
 789 0098 1FD1     		bne	.L32
 666:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       {
 667:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         if(UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TXE, RESET, Timeout) != HAL_OK)
 790              		.loc 1 667 0
 791 009a F868     		ldr	r0, [r7, #12]
 792 009c 8021     		movs	r1, #128
 793 009e 0022     		movs	r2, #0
 794 00a0 3B68     		ldr	r3, [r7]
 795 00a2 FFF7FEFF 		bl	UART_WaitOnFlagUntilTimeout
 796 00a6 0346     		mov	r3, r0
 797 00a8 002B     		cmp	r3, #0
 798 00aa 01D0     		beq	.L33
 668:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         {
 669:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****           return HAL_TIMEOUT;
 799              		.loc 1 669 0
 800 00ac 0323     		movs	r3, #3
 801 00ae 4BE0     		b	.L27
 802              	.L33:
 670:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         }
 671:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         tmp = (uint16_t*) pData;
 803              		.loc 1 671 0
 804 00b0 BB68     		ldr	r3, [r7, #8]
 805 00b2 3B61     		str	r3, [r7, #16]
 672:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         huart->Instance->DR = (*tmp & (uint16_t)0x01FF);
 806              		.loc 1 672 0
 807 00b4 FB68     		ldr	r3, [r7, #12]
 808 00b6 1B68     		ldr	r3, [r3]
 809 00b8 3A69     		ldr	r2, [r7, #16]
 810 00ba 1288     		ldrh	r2, [r2]
 811 00bc C2F30802 		ubfx	r2, r2, #0, #9
 812 00c0 5A60     		str	r2, [r3, #4]
 673:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         if(huart->Init.Parity == UART_PARITY_NONE)
 813              		.loc 1 673 0
 814 00c2 FB68     		ldr	r3, [r7, #12]
 815 00c4 1B69     		ldr	r3, [r3, #16]
 816 00c6 002B     		cmp	r3, #0
 817 00c8 03D1     		bne	.L34
 674:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         {
 675:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****           pData +=2;
 818              		.loc 1 675 0
 819 00ca BB68     		ldr	r3, [r7, #8]
 820 00cc 0233     		adds	r3, r3, #2
 821 00ce BB60     		str	r3, [r7, #8]
 822 00d0 15E0     		b	.L31
ARM GAS  /tmp/cckhygdq.s 			page 27


 823              	.L34:
 676:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         }
 677:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         else
 678:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         { 
 679:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****           pData +=1;
 824              		.loc 1 679 0
 825 00d2 BB68     		ldr	r3, [r7, #8]
 826 00d4 0133     		adds	r3, r3, #1
 827 00d6 BB60     		str	r3, [r7, #8]
 828 00d8 11E0     		b	.L31
 829              	.L32:
 680:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         }
 681:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       } 
 682:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       else
 683:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       {
 684:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         if(UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TXE, RESET, Timeout) != HAL_OK)
 830              		.loc 1 684 0
 831 00da F868     		ldr	r0, [r7, #12]
 832 00dc 8021     		movs	r1, #128
 833 00de 0022     		movs	r2, #0
 834 00e0 3B68     		ldr	r3, [r7]
 835 00e2 FFF7FEFF 		bl	UART_WaitOnFlagUntilTimeout
 836 00e6 0346     		mov	r3, r0
 837 00e8 002B     		cmp	r3, #0
 838 00ea 01D0     		beq	.L36
 685:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         {
 686:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****           return HAL_TIMEOUT;
 839              		.loc 1 686 0
 840 00ec 0323     		movs	r3, #3
 841 00ee 2BE0     		b	.L27
 842              	.L36:
 687:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         }
 688:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         huart->Instance->DR = (*pData++ & (uint8_t)0xFF);
 843              		.loc 1 688 0
 844 00f0 FB68     		ldr	r3, [r7, #12]
 845 00f2 1A68     		ldr	r2, [r3]
 846 00f4 BB68     		ldr	r3, [r7, #8]
 847 00f6 591C     		adds	r1, r3, #1
 848 00f8 B960     		str	r1, [r7, #8]
 849 00fa 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 850 00fc 5360     		str	r3, [r2, #4]
 851              	.L31:
 662:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
 852              		.loc 1 662 0
 853 00fe FB68     		ldr	r3, [r7, #12]
 854 0100 DB8C     		ldrh	r3, [r3, #38]
 855 0102 002B     		cmp	r3, #0
 856 0104 BED1     		bne	.L37
 689:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       }
 690:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
 691:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 692:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     if(UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TC, RESET, Timeout) != HAL_OK)
 857              		.loc 1 692 0
 858 0106 F868     		ldr	r0, [r7, #12]
 859 0108 4021     		movs	r1, #64
 860 010a 0022     		movs	r2, #0
 861 010c 3B68     		ldr	r3, [r7]
ARM GAS  /tmp/cckhygdq.s 			page 28


 862 010e FFF7FEFF 		bl	UART_WaitOnFlagUntilTimeout
 863 0112 0346     		mov	r3, r0
 864 0114 002B     		cmp	r3, #0
 865 0116 01D0     		beq	.L38
 693:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     { 
 694:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       return HAL_TIMEOUT;
 866              		.loc 1 694 0
 867 0118 0323     		movs	r3, #3
 868 011a 15E0     		b	.L27
 869              	.L38:
 695:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
 696:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 697:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Check if a non-blocking receive process is ongoing or not */
 698:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     if(huart->State == HAL_UART_STATE_BUSY_TX_RX) 
 870              		.loc 1 698 0
 871 011c FB68     		ldr	r3, [r7, #12]
 872 011e 93F83930 		ldrb	r3, [r3, #57]
 873 0122 DBB2     		uxtb	r3, r3
 874 0124 322B     		cmp	r3, #50
 875 0126 04D1     		bne	.L39
 699:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
 700:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       huart->State = HAL_UART_STATE_BUSY_RX;
 876              		.loc 1 700 0
 877 0128 FB68     		ldr	r3, [r7, #12]
 878 012a 2222     		movs	r2, #34
 879 012c 83F83920 		strb	r2, [r3, #57]
 880 0130 03E0     		b	.L40
 881              	.L39:
 701:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
 702:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     else
 703:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
 704:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       huart->State = HAL_UART_STATE_READY;
 882              		.loc 1 704 0
 883 0132 FB68     		ldr	r3, [r7, #12]
 884 0134 0122     		movs	r2, #1
 885 0136 83F83920 		strb	r2, [r3, #57]
 886              	.L40:
 705:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
 706:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 707:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Process Unlocked */
 708:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     __HAL_UNLOCK(huart);
 887              		.loc 1 708 0
 888 013a FB68     		ldr	r3, [r7, #12]
 889 013c 0022     		movs	r2, #0
 890 013e 83F83820 		strb	r2, [r3, #56]
 709:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 710:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     return HAL_OK;
 891              		.loc 1 710 0
 892 0142 0023     		movs	r3, #0
 893 0144 00E0     		b	.L27
 894              	.L24:
 711:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
 712:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   else
 713:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 714:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     return HAL_BUSY;
 895              		.loc 1 714 0
 896 0146 0223     		movs	r3, #2
ARM GAS  /tmp/cckhygdq.s 			page 29


 897              	.L27:
 715:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
 716:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
 898              		.loc 1 716 0
 899 0148 1846     		mov	r0, r3
 900 014a 1837     		adds	r7, r7, #24
 901              	.LCFI40:
 902              		.cfi_def_cfa_offset 8
 903 014c BD46     		mov	sp, r7
 904              	.LCFI41:
 905              		.cfi_def_cfa_register 13
 906              		@ sp needed
 907 014e 80BD     		pop	{r7, pc}
 908              		.cfi_endproc
 909              	.LFE70:
 911              		.section	.text.HAL_UART_Receive,"ax",%progbits
 912              		.align	2
 913              		.global	HAL_UART_Receive
 914              		.thumb
 915              		.thumb_func
 917              	HAL_UART_Receive:
 918              	.LFB71:
 717:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 718:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
 719:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief  Receives an amount of data in blocking mode. 
 720:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  huart: Pointer to a UART_HandleTypeDef structure that contains
 721:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *                the configuration information for the specified UART module.
 722:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  pData: Pointer to data buffer
 723:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  Size: Amount of data to be received
 724:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  Timeout: Timeout duration
 725:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval HAL status
 726:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
 727:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Receive(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size, uint32
 728:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
 919              		.loc 1 728 0
 920              		.cfi_startproc
 921              		@ args = 0, pretend = 0, frame = 24
 922              		@ frame_needed = 1, uses_anonymous_args = 0
 923 0000 80B5     		push	{r7, lr}
 924              	.LCFI42:
 925              		.cfi_def_cfa_offset 8
 926              		.cfi_offset 7, -8
 927              		.cfi_offset 14, -4
 928 0002 86B0     		sub	sp, sp, #24
 929              	.LCFI43:
 930              		.cfi_def_cfa_offset 32
 931 0004 00AF     		add	r7, sp, #0
 932              	.LCFI44:
 933              		.cfi_def_cfa_register 7
 934 0006 F860     		str	r0, [r7, #12]
 935 0008 B960     		str	r1, [r7, #8]
 936 000a 3B60     		str	r3, [r7]
 937 000c 1346     		mov	r3, r2	@ movhi
 938 000e FB80     		strh	r3, [r7, #6]	@ movhi
 729:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   uint16_t* tmp;
 730:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   uint32_t  tmp_state = 0;
 939              		.loc 1 730 0
ARM GAS  /tmp/cckhygdq.s 			page 30


 940 0010 0023     		movs	r3, #0
 941 0012 7B61     		str	r3, [r7, #20]
 731:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 732:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   tmp_state = huart->State;
 942              		.loc 1 732 0
 943 0014 FB68     		ldr	r3, [r7, #12]
 944 0016 93F83930 		ldrb	r3, [r3, #57]
 945 001a DBB2     		uxtb	r3, r3
 946 001c 7B61     		str	r3, [r7, #20]
 733:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if((tmp_state == HAL_UART_STATE_READY) || (tmp_state == HAL_UART_STATE_BUSY_TX))
 947              		.loc 1 733 0
 948 001e 7B69     		ldr	r3, [r7, #20]
 949 0020 012B     		cmp	r3, #1
 950 0022 03D0     		beq	.L42
 951              		.loc 1 733 0 is_stmt 0 discriminator 1
 952 0024 7B69     		ldr	r3, [r7, #20]
 953 0026 122B     		cmp	r3, #18
 954 0028 40F09D80 		bne	.L43
 955              	.L42:
 734:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 735:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     if((pData == NULL ) || (Size == 0))
 956              		.loc 1 735 0 is_stmt 1
 957 002c BB68     		ldr	r3, [r7, #8]
 958 002e 002B     		cmp	r3, #0
 959 0030 02D0     		beq	.L44
 960              		.loc 1 735 0 is_stmt 0 discriminator 1
 961 0032 FB88     		ldrh	r3, [r7, #6]
 962 0034 002B     		cmp	r3, #0
 963 0036 01D1     		bne	.L45
 964              	.L44:
 736:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
 737:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       return  HAL_ERROR;
 965              		.loc 1 737 0 is_stmt 1
 966 0038 0123     		movs	r3, #1
 967 003a 95E0     		b	.L46
 968              	.L45:
 738:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
 739:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 740:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Process Locked */
 741:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     __HAL_LOCK(huart);
 969              		.loc 1 741 0
 970 003c FB68     		ldr	r3, [r7, #12]
 971 003e 93F83830 		ldrb	r3, [r3, #56]	@ zero_extendqisi2
 972 0042 012B     		cmp	r3, #1
 973 0044 01D1     		bne	.L47
 974              		.loc 1 741 0 is_stmt 0 discriminator 1
 975 0046 0223     		movs	r3, #2
 976 0048 8EE0     		b	.L46
 977              	.L47:
 978              		.loc 1 741 0 discriminator 2
 979 004a FB68     		ldr	r3, [r7, #12]
 980 004c 0122     		movs	r2, #1
 981 004e 83F83820 		strb	r2, [r3, #56]
 742:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 743:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
 982              		.loc 1 743 0 is_stmt 1 discriminator 2
 983 0052 FB68     		ldr	r3, [r7, #12]
ARM GAS  /tmp/cckhygdq.s 			page 31


 984 0054 0022     		movs	r2, #0
 985 0056 DA63     		str	r2, [r3, #60]
 744:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Check if a non-blocking transmit process is ongoing or not */
 745:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     if(huart->State == HAL_UART_STATE_BUSY_TX)
 986              		.loc 1 745 0 discriminator 2
 987 0058 FB68     		ldr	r3, [r7, #12]
 988 005a 93F83930 		ldrb	r3, [r3, #57]
 989 005e DBB2     		uxtb	r3, r3
 990 0060 122B     		cmp	r3, #18
 991 0062 04D1     		bne	.L48
 746:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
 747:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       huart->State = HAL_UART_STATE_BUSY_TX_RX;
 992              		.loc 1 747 0
 993 0064 FB68     		ldr	r3, [r7, #12]
 994 0066 3222     		movs	r2, #50
 995 0068 83F83920 		strb	r2, [r3, #57]
 996 006c 03E0     		b	.L49
 997              	.L48:
 748:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
 749:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     else
 750:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
 751:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       huart->State = HAL_UART_STATE_BUSY_RX;
 998              		.loc 1 751 0
 999 006e FB68     		ldr	r3, [r7, #12]
 1000 0070 2222     		movs	r2, #34
 1001 0072 83F83920 		strb	r2, [r3, #57]
 1002              	.L49:
 752:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
 753:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 754:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->RxXferSize = Size;
 1003              		.loc 1 754 0
 1004 0076 FB68     		ldr	r3, [r7, #12]
 1005 0078 FA88     		ldrh	r2, [r7, #6]	@ movhi
 1006 007a 9A85     		strh	r2, [r3, #44]	@ movhi
 755:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->RxXferCount = Size;
 1007              		.loc 1 755 0
 1008 007c FB68     		ldr	r3, [r7, #12]
 1009 007e FA88     		ldrh	r2, [r7, #6]	@ movhi
 1010 0080 DA85     		strh	r2, [r3, #46]	@ movhi
 756:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 757:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Check the remain data to be received */
 758:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     while(huart->RxXferCount > 0)
 1011              		.loc 1 758 0
 1012 0082 57E0     		b	.L50
 1013              	.L57:
 759:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
 760:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       huart->RxXferCount--;
 1014              		.loc 1 760 0
 1015 0084 FB68     		ldr	r3, [r7, #12]
 1016 0086 DB8D     		ldrh	r3, [r3, #46]
 1017 0088 013B     		subs	r3, r3, #1
 1018 008a 9AB2     		uxth	r2, r3
 1019 008c FB68     		ldr	r3, [r7, #12]
 1020 008e DA85     		strh	r2, [r3, #46]	@ movhi
 761:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       if(huart->Init.WordLength == UART_WORDLENGTH_9B)
 1021              		.loc 1 761 0
 1022 0090 FB68     		ldr	r3, [r7, #12]
ARM GAS  /tmp/cckhygdq.s 			page 32


 1023 0092 9B68     		ldr	r3, [r3, #8]
 1024 0094 B3F5805F 		cmp	r3, #4096
 1025 0098 29D1     		bne	.L51
 762:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       {
 763:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         if(UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_RXNE, RESET, Timeout) != HAL_OK)
 1026              		.loc 1 763 0
 1027 009a F868     		ldr	r0, [r7, #12]
 1028 009c 2021     		movs	r1, #32
 1029 009e 0022     		movs	r2, #0
 1030 00a0 3B68     		ldr	r3, [r7]
 1031 00a2 FFF7FEFF 		bl	UART_WaitOnFlagUntilTimeout
 1032 00a6 0346     		mov	r3, r0
 1033 00a8 002B     		cmp	r3, #0
 1034 00aa 01D0     		beq	.L52
 764:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         {
 765:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****           return HAL_TIMEOUT;
 1035              		.loc 1 765 0
 1036 00ac 0323     		movs	r3, #3
 1037 00ae 5BE0     		b	.L46
 1038              	.L52:
 766:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         }
 767:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         tmp = (uint16_t*) pData ;
 1039              		.loc 1 767 0
 1040 00b0 BB68     		ldr	r3, [r7, #8]
 1041 00b2 3B61     		str	r3, [r7, #16]
 768:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         if(huart->Init.Parity == UART_PARITY_NONE)
 1042              		.loc 1 768 0
 1043 00b4 FB68     		ldr	r3, [r7, #12]
 1044 00b6 1B69     		ldr	r3, [r3, #16]
 1045 00b8 002B     		cmp	r3, #0
 1046 00ba 0CD1     		bne	.L53
 769:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         {
 770:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****           *tmp = (uint16_t)(huart->Instance->DR & (uint16_t)0x01FF);
 1047              		.loc 1 770 0
 1048 00bc FB68     		ldr	r3, [r7, #12]
 1049 00be 1B68     		ldr	r3, [r3]
 1050 00c0 5B68     		ldr	r3, [r3, #4]
 1051 00c2 9BB2     		uxth	r3, r3
 1052 00c4 C3F30803 		ubfx	r3, r3, #0, #9
 1053 00c8 9AB2     		uxth	r2, r3
 1054 00ca 3B69     		ldr	r3, [r7, #16]
 1055 00cc 1A80     		strh	r2, [r3]	@ movhi
 771:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****           pData +=2;
 1056              		.loc 1 771 0
 1057 00ce BB68     		ldr	r3, [r7, #8]
 1058 00d0 0233     		adds	r3, r3, #2
 1059 00d2 BB60     		str	r3, [r7, #8]
 1060 00d4 2EE0     		b	.L50
 1061              	.L53:
 772:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         }
 773:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         else
 774:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         {
 775:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****           *tmp = (uint16_t)(huart->Instance->DR & (uint16_t)0x00FF);
 1062              		.loc 1 775 0
 1063 00d6 FB68     		ldr	r3, [r7, #12]
 1064 00d8 1B68     		ldr	r3, [r3]
 1065 00da 5B68     		ldr	r3, [r3, #4]
ARM GAS  /tmp/cckhygdq.s 			page 33


 1066 00dc 9BB2     		uxth	r3, r3
 1067 00de DBB2     		uxtb	r3, r3
 1068 00e0 9AB2     		uxth	r2, r3
 1069 00e2 3B69     		ldr	r3, [r7, #16]
 1070 00e4 1A80     		strh	r2, [r3]	@ movhi
 776:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****           pData +=1;
 1071              		.loc 1 776 0
 1072 00e6 BB68     		ldr	r3, [r7, #8]
 1073 00e8 0133     		adds	r3, r3, #1
 1074 00ea BB60     		str	r3, [r7, #8]
 1075 00ec 22E0     		b	.L50
 1076              	.L51:
 777:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         }
 778:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 779:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       }
 780:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       else
 781:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       {
 782:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         if(UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_RXNE, RESET, Timeout) != HAL_OK)
 1077              		.loc 1 782 0
 1078 00ee F868     		ldr	r0, [r7, #12]
 1079 00f0 2021     		movs	r1, #32
 1080 00f2 0022     		movs	r2, #0
 1081 00f4 3B68     		ldr	r3, [r7]
 1082 00f6 FFF7FEFF 		bl	UART_WaitOnFlagUntilTimeout
 1083 00fa 0346     		mov	r3, r0
 1084 00fc 002B     		cmp	r3, #0
 1085 00fe 01D0     		beq	.L55
 783:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         {
 784:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****           return HAL_TIMEOUT;
 1086              		.loc 1 784 0
 1087 0100 0323     		movs	r3, #3
 1088 0102 31E0     		b	.L46
 1089              	.L55:
 785:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         }
 786:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         if(huart->Init.Parity == UART_PARITY_NONE)
 1090              		.loc 1 786 0
 1091 0104 FB68     		ldr	r3, [r7, #12]
 1092 0106 1B69     		ldr	r3, [r3, #16]
 1093 0108 002B     		cmp	r3, #0
 1094 010a 08D1     		bne	.L56
 787:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         {
 788:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****           *pData++ = (uint8_t)(huart->Instance->DR & (uint8_t)0x00FF);
 1095              		.loc 1 788 0
 1096 010c BB68     		ldr	r3, [r7, #8]
 1097 010e 5A1C     		adds	r2, r3, #1
 1098 0110 BA60     		str	r2, [r7, #8]
 1099 0112 FA68     		ldr	r2, [r7, #12]
 1100 0114 1268     		ldr	r2, [r2]
 1101 0116 5268     		ldr	r2, [r2, #4]
 1102 0118 D2B2     		uxtb	r2, r2
 1103 011a 1A70     		strb	r2, [r3]
 1104 011c 0AE0     		b	.L50
 1105              	.L56:
 789:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         }
 790:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         else
 791:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         {
 792:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****           *pData++ = (uint8_t)(huart->Instance->DR & (uint8_t)0x007F);
ARM GAS  /tmp/cckhygdq.s 			page 34


 1106              		.loc 1 792 0
 1107 011e BB68     		ldr	r3, [r7, #8]
 1108 0120 5A1C     		adds	r2, r3, #1
 1109 0122 BA60     		str	r2, [r7, #8]
 1110 0124 FA68     		ldr	r2, [r7, #12]
 1111 0126 1268     		ldr	r2, [r2]
 1112 0128 5268     		ldr	r2, [r2, #4]
 1113 012a D2B2     		uxtb	r2, r2
 1114 012c 02F07F02 		and	r2, r2, #127
 1115 0130 D2B2     		uxtb	r2, r2
 1116 0132 1A70     		strb	r2, [r3]
 1117              	.L50:
 758:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
 1118              		.loc 1 758 0
 1119 0134 FB68     		ldr	r3, [r7, #12]
 1120 0136 DB8D     		ldrh	r3, [r3, #46]
 1121 0138 002B     		cmp	r3, #0
 1122 013a A3D1     		bne	.L57
 793:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         }
 794:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 795:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       }
 796:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
 797:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 798:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Check if a non-blocking transmit process is ongoing or not */
 799:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     if(huart->State == HAL_UART_STATE_BUSY_TX_RX) 
 1123              		.loc 1 799 0
 1124 013c FB68     		ldr	r3, [r7, #12]
 1125 013e 93F83930 		ldrb	r3, [r3, #57]
 1126 0142 DBB2     		uxtb	r3, r3
 1127 0144 322B     		cmp	r3, #50
 1128 0146 04D1     		bne	.L58
 800:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
 801:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       huart->State = HAL_UART_STATE_BUSY_TX;
 1129              		.loc 1 801 0
 1130 0148 FB68     		ldr	r3, [r7, #12]
 1131 014a 1222     		movs	r2, #18
 1132 014c 83F83920 		strb	r2, [r3, #57]
 1133 0150 03E0     		b	.L59
 1134              	.L58:
 802:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
 803:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     else
 804:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
 805:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       huart->State = HAL_UART_STATE_READY;
 1135              		.loc 1 805 0
 1136 0152 FB68     		ldr	r3, [r7, #12]
 1137 0154 0122     		movs	r2, #1
 1138 0156 83F83920 		strb	r2, [r3, #57]
 1139              	.L59:
 806:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
 807:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Process Unlocked */
 808:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     __HAL_UNLOCK(huart);
 1140              		.loc 1 808 0
 1141 015a FB68     		ldr	r3, [r7, #12]
 1142 015c 0022     		movs	r2, #0
 1143 015e 83F83820 		strb	r2, [r3, #56]
 809:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 810:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     return HAL_OK;
ARM GAS  /tmp/cckhygdq.s 			page 35


 1144              		.loc 1 810 0
 1145 0162 0023     		movs	r3, #0
 1146 0164 00E0     		b	.L46
 1147              	.L43:
 811:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
 812:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   else
 813:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 814:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     return HAL_BUSY;
 1148              		.loc 1 814 0
 1149 0166 0223     		movs	r3, #2
 1150              	.L46:
 815:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
 816:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
 1151              		.loc 1 816 0
 1152 0168 1846     		mov	r0, r3
 1153 016a 1837     		adds	r7, r7, #24
 1154              	.LCFI45:
 1155              		.cfi_def_cfa_offset 8
 1156 016c BD46     		mov	sp, r7
 1157              	.LCFI46:
 1158              		.cfi_def_cfa_register 13
 1159              		@ sp needed
 1160 016e 80BD     		pop	{r7, pc}
 1161              		.cfi_endproc
 1162              	.LFE71:
 1164              		.section	.text.HAL_UART_Transmit_IT,"ax",%progbits
 1165              		.align	2
 1166              		.global	HAL_UART_Transmit_IT
 1167              		.thumb
 1168              		.thumb_func
 1170              	HAL_UART_Transmit_IT:
 1171              	.LFB72:
 817:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 818:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
 819:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief  Sends an amount of data in non blocking mode.
 820:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  huart: Pointer to a UART_HandleTypeDef structure that contains
 821:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *                the configuration information for the specified UART module.
 822:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  pData: Pointer to data buffer
 823:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  Size: Amount of data to be sent
 824:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval HAL status
 825:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
 826:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Transmit_IT(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size)
 827:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
 1172              		.loc 1 827 0
 1173              		.cfi_startproc
 1174              		@ args = 0, pretend = 0, frame = 24
 1175              		@ frame_needed = 1, uses_anonymous_args = 0
 1176              		@ link register save eliminated.
 1177 0000 80B4     		push	{r7}
 1178              	.LCFI47:
 1179              		.cfi_def_cfa_offset 4
 1180              		.cfi_offset 7, -4
 1181 0002 87B0     		sub	sp, sp, #28
 1182              	.LCFI48:
 1183              		.cfi_def_cfa_offset 32
 1184 0004 00AF     		add	r7, sp, #0
 1185              	.LCFI49:
ARM GAS  /tmp/cckhygdq.s 			page 36


 1186              		.cfi_def_cfa_register 7
 1187 0006 F860     		str	r0, [r7, #12]
 1188 0008 B960     		str	r1, [r7, #8]
 1189 000a 1346     		mov	r3, r2
 1190 000c FB80     		strh	r3, [r7, #6]	@ movhi
 828:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   uint32_t tmp_state = 0;
 1191              		.loc 1 828 0
 1192 000e 0023     		movs	r3, #0
 1193 0010 7B61     		str	r3, [r7, #20]
 829:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 830:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   tmp_state = huart->State;
 1194              		.loc 1 830 0
 1195 0012 FB68     		ldr	r3, [r7, #12]
 1196 0014 93F83930 		ldrb	r3, [r3, #57]
 1197 0018 DBB2     		uxtb	r3, r3
 1198 001a 7B61     		str	r3, [r7, #20]
 831:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if((tmp_state == HAL_UART_STATE_READY) || (tmp_state == HAL_UART_STATE_BUSY_RX))
 1199              		.loc 1 831 0
 1200 001c 7B69     		ldr	r3, [r7, #20]
 1201 001e 012B     		cmp	r3, #1
 1202 0020 02D0     		beq	.L61
 1203              		.loc 1 831 0 is_stmt 0 discriminator 1
 1204 0022 7B69     		ldr	r3, [r7, #20]
 1205 0024 222B     		cmp	r3, #34
 1206 0026 3BD1     		bne	.L62
 1207              	.L61:
 832:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 833:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     if((pData == NULL ) || (Size == 0))
 1208              		.loc 1 833 0 is_stmt 1
 1209 0028 BB68     		ldr	r3, [r7, #8]
 1210 002a 002B     		cmp	r3, #0
 1211 002c 02D0     		beq	.L63
 1212              		.loc 1 833 0 is_stmt 0 discriminator 1
 1213 002e FB88     		ldrh	r3, [r7, #6]
 1214 0030 002B     		cmp	r3, #0
 1215 0032 01D1     		bne	.L64
 1216              	.L63:
 834:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
 835:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       return HAL_ERROR;
 1217              		.loc 1 835 0 is_stmt 1
 1218 0034 0123     		movs	r3, #1
 1219 0036 34E0     		b	.L65
 1220              	.L64:
 836:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
 837:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     
 838:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Process Locked */
 839:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     __HAL_LOCK(huart);
 1221              		.loc 1 839 0
 1222 0038 FB68     		ldr	r3, [r7, #12]
 1223 003a 93F83830 		ldrb	r3, [r3, #56]	@ zero_extendqisi2
 1224 003e 012B     		cmp	r3, #1
 1225 0040 01D1     		bne	.L66
 1226              		.loc 1 839 0 is_stmt 0 discriminator 1
 1227 0042 0223     		movs	r3, #2
 1228 0044 2DE0     		b	.L65
 1229              	.L66:
 1230              		.loc 1 839 0 discriminator 2
ARM GAS  /tmp/cckhygdq.s 			page 37


 1231 0046 FB68     		ldr	r3, [r7, #12]
 1232 0048 0122     		movs	r2, #1
 1233 004a 83F83820 		strb	r2, [r3, #56]
 840:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     
 841:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->pTxBuffPtr = pData;
 1234              		.loc 1 841 0 is_stmt 1 discriminator 2
 1235 004e FB68     		ldr	r3, [r7, #12]
 1236 0050 BA68     		ldr	r2, [r7, #8]
 1237 0052 1A62     		str	r2, [r3, #32]
 842:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->TxXferSize = Size;
 1238              		.loc 1 842 0 discriminator 2
 1239 0054 FB68     		ldr	r3, [r7, #12]
 1240 0056 FA88     		ldrh	r2, [r7, #6]	@ movhi
 1241 0058 9A84     		strh	r2, [r3, #36]	@ movhi
 843:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->TxXferCount = Size;
 1242              		.loc 1 843 0 discriminator 2
 1243 005a FB68     		ldr	r3, [r7, #12]
 1244 005c FA88     		ldrh	r2, [r7, #6]	@ movhi
 1245 005e DA84     		strh	r2, [r3, #38]	@ movhi
 844:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 845:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
 1246              		.loc 1 845 0 discriminator 2
 1247 0060 FB68     		ldr	r3, [r7, #12]
 1248 0062 0022     		movs	r2, #0
 1249 0064 DA63     		str	r2, [r3, #60]
 846:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Check if a receive process is ongoing or not */
 847:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     if(huart->State == HAL_UART_STATE_BUSY_RX) 
 1250              		.loc 1 847 0 discriminator 2
 1251 0066 FB68     		ldr	r3, [r7, #12]
 1252 0068 93F83930 		ldrb	r3, [r3, #57]
 1253 006c DBB2     		uxtb	r3, r3
 1254 006e 222B     		cmp	r3, #34
 1255 0070 04D1     		bne	.L67
 848:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
 849:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       huart->State = HAL_UART_STATE_BUSY_TX_RX;
 1256              		.loc 1 849 0
 1257 0072 FB68     		ldr	r3, [r7, #12]
 1258 0074 3222     		movs	r2, #50
 1259 0076 83F83920 		strb	r2, [r3, #57]
 1260 007a 03E0     		b	.L68
 1261              	.L67:
 850:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
 851:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     else
 852:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
 853:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       huart->State = HAL_UART_STATE_BUSY_TX;
 1262              		.loc 1 853 0
 1263 007c FB68     		ldr	r3, [r7, #12]
 1264 007e 1222     		movs	r2, #18
 1265 0080 83F83920 		strb	r2, [r3, #57]
 1266              	.L68:
 854:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
 855:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 856:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Process Unlocked */
 857:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     __HAL_UNLOCK(huart);
 1267              		.loc 1 857 0
 1268 0084 FB68     		ldr	r3, [r7, #12]
 1269 0086 0022     		movs	r2, #0
ARM GAS  /tmp/cckhygdq.s 			page 38


 1270 0088 83F83820 		strb	r2, [r3, #56]
 858:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 859:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Enable the UART Transmit data register empty Interrupt */
 860:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     __HAL_UART_ENABLE_IT(huart, UART_IT_TXE);
 1271              		.loc 1 860 0
 1272 008c FB68     		ldr	r3, [r7, #12]
 1273 008e 1B68     		ldr	r3, [r3]
 1274 0090 FA68     		ldr	r2, [r7, #12]
 1275 0092 1268     		ldr	r2, [r2]
 1276 0094 D268     		ldr	r2, [r2, #12]
 1277 0096 42F08002 		orr	r2, r2, #128
 1278 009a DA60     		str	r2, [r3, #12]
 861:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     
 862:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     return HAL_OK;
 1279              		.loc 1 862 0
 1280 009c 0023     		movs	r3, #0
 1281 009e 00E0     		b	.L65
 1282              	.L62:
 863:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
 864:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   else
 865:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 866:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     return HAL_BUSY;
 1283              		.loc 1 866 0
 1284 00a0 0223     		movs	r3, #2
 1285              	.L65:
 867:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
 868:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
 1286              		.loc 1 868 0
 1287 00a2 1846     		mov	r0, r3
 1288 00a4 1C37     		adds	r7, r7, #28
 1289              	.LCFI50:
 1290              		.cfi_def_cfa_offset 4
 1291 00a6 BD46     		mov	sp, r7
 1292              	.LCFI51:
 1293              		.cfi_def_cfa_register 13
 1294              		@ sp needed
 1295 00a8 5DF8047B 		ldr	r7, [sp], #4
 1296              	.LCFI52:
 1297              		.cfi_restore 7
 1298              		.cfi_def_cfa_offset 0
 1299 00ac 7047     		bx	lr
 1300              		.cfi_endproc
 1301              	.LFE72:
 1303 00ae 00BF     		.section	.text.HAL_UART_Receive_IT,"ax",%progbits
 1304              		.align	2
 1305              		.global	HAL_UART_Receive_IT
 1306              		.thumb
 1307              		.thumb_func
 1309              	HAL_UART_Receive_IT:
 1310              	.LFB73:
 869:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 870:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
 871:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief  Receives an amount of data in non blocking mode 
 872:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  huart: Pointer to a UART_HandleTypeDef structure that contains
 873:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *                the configuration information for the specified UART module.
 874:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  pData: Pointer to data buffer
 875:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  Size: Amount of data to be received
ARM GAS  /tmp/cckhygdq.s 			page 39


 876:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval HAL status
 877:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
 878:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Receive_IT(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size)
 879:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
 1311              		.loc 1 879 0
 1312              		.cfi_startproc
 1313              		@ args = 0, pretend = 0, frame = 24
 1314              		@ frame_needed = 1, uses_anonymous_args = 0
 1315              		@ link register save eliminated.
 1316 0000 80B4     		push	{r7}
 1317              	.LCFI53:
 1318              		.cfi_def_cfa_offset 4
 1319              		.cfi_offset 7, -4
 1320 0002 87B0     		sub	sp, sp, #28
 1321              	.LCFI54:
 1322              		.cfi_def_cfa_offset 32
 1323 0004 00AF     		add	r7, sp, #0
 1324              	.LCFI55:
 1325              		.cfi_def_cfa_register 7
 1326 0006 F860     		str	r0, [r7, #12]
 1327 0008 B960     		str	r1, [r7, #8]
 1328 000a 1346     		mov	r3, r2
 1329 000c FB80     		strh	r3, [r7, #6]	@ movhi
 880:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   uint32_t tmp_state = 0;
 1330              		.loc 1 880 0
 1331 000e 0023     		movs	r3, #0
 1332 0010 7B61     		str	r3, [r7, #20]
 881:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 882:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   tmp_state = huart->State;
 1333              		.loc 1 882 0
 1334 0012 FB68     		ldr	r3, [r7, #12]
 1335 0014 93F83930 		ldrb	r3, [r3, #57]
 1336 0018 DBB2     		uxtb	r3, r3
 1337 001a 7B61     		str	r3, [r7, #20]
 883:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if((tmp_state == HAL_UART_STATE_READY) || (tmp_state == HAL_UART_STATE_BUSY_TX))
 1338              		.loc 1 883 0
 1339 001c 7B69     		ldr	r3, [r7, #20]
 1340 001e 012B     		cmp	r3, #1
 1341 0020 02D0     		beq	.L70
 1342              		.loc 1 883 0 is_stmt 0 discriminator 1
 1343 0022 7B69     		ldr	r3, [r7, #20]
 1344 0024 122B     		cmp	r3, #18
 1345 0026 4BD1     		bne	.L71
 1346              	.L70:
 884:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 885:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     if((pData == NULL ) || (Size == 0))
 1347              		.loc 1 885 0 is_stmt 1
 1348 0028 BB68     		ldr	r3, [r7, #8]
 1349 002a 002B     		cmp	r3, #0
 1350 002c 02D0     		beq	.L72
 1351              		.loc 1 885 0 is_stmt 0 discriminator 1
 1352 002e FB88     		ldrh	r3, [r7, #6]
 1353 0030 002B     		cmp	r3, #0
 1354 0032 01D1     		bne	.L73
 1355              	.L72:
 886:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
 887:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       return HAL_ERROR;
ARM GAS  /tmp/cckhygdq.s 			page 40


 1356              		.loc 1 887 0 is_stmt 1
 1357 0034 0123     		movs	r3, #1
 1358 0036 44E0     		b	.L74
 1359              	.L73:
 888:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
 889:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 890:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Process Locked */
 891:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     __HAL_LOCK(huart);
 1360              		.loc 1 891 0
 1361 0038 FB68     		ldr	r3, [r7, #12]
 1362 003a 93F83830 		ldrb	r3, [r3, #56]	@ zero_extendqisi2
 1363 003e 012B     		cmp	r3, #1
 1364 0040 01D1     		bne	.L75
 1365              		.loc 1 891 0 is_stmt 0 discriminator 1
 1366 0042 0223     		movs	r3, #2
 1367 0044 3DE0     		b	.L74
 1368              	.L75:
 1369              		.loc 1 891 0 discriminator 2
 1370 0046 FB68     		ldr	r3, [r7, #12]
 1371 0048 0122     		movs	r2, #1
 1372 004a 83F83820 		strb	r2, [r3, #56]
 892:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 893:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->pRxBuffPtr = pData;
 1373              		.loc 1 893 0 is_stmt 1 discriminator 2
 1374 004e FB68     		ldr	r3, [r7, #12]
 1375 0050 BA68     		ldr	r2, [r7, #8]
 1376 0052 9A62     		str	r2, [r3, #40]
 894:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->RxXferSize = Size;
 1377              		.loc 1 894 0 discriminator 2
 1378 0054 FB68     		ldr	r3, [r7, #12]
 1379 0056 FA88     		ldrh	r2, [r7, #6]	@ movhi
 1380 0058 9A85     		strh	r2, [r3, #44]	@ movhi
 895:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->RxXferCount = Size;
 1381              		.loc 1 895 0 discriminator 2
 1382 005a FB68     		ldr	r3, [r7, #12]
 1383 005c FA88     		ldrh	r2, [r7, #6]	@ movhi
 1384 005e DA85     		strh	r2, [r3, #46]	@ movhi
 896:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 897:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
 1385              		.loc 1 897 0 discriminator 2
 1386 0060 FB68     		ldr	r3, [r7, #12]
 1387 0062 0022     		movs	r2, #0
 1388 0064 DA63     		str	r2, [r3, #60]
 898:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Check if a transmit process is ongoing or not */
 899:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     if(huart->State == HAL_UART_STATE_BUSY_TX)
 1389              		.loc 1 899 0 discriminator 2
 1390 0066 FB68     		ldr	r3, [r7, #12]
 1391 0068 93F83930 		ldrb	r3, [r3, #57]
 1392 006c DBB2     		uxtb	r3, r3
 1393 006e 122B     		cmp	r3, #18
 1394 0070 04D1     		bne	.L76
 900:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
 901:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       huart->State = HAL_UART_STATE_BUSY_TX_RX;
 1395              		.loc 1 901 0
 1396 0072 FB68     		ldr	r3, [r7, #12]
 1397 0074 3222     		movs	r2, #50
 1398 0076 83F83920 		strb	r2, [r3, #57]
ARM GAS  /tmp/cckhygdq.s 			page 41


 1399 007a 03E0     		b	.L77
 1400              	.L76:
 902:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
 903:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     else
 904:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
 905:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       huart->State = HAL_UART_STATE_BUSY_RX;
 1401              		.loc 1 905 0
 1402 007c FB68     		ldr	r3, [r7, #12]
 1403 007e 2222     		movs	r2, #34
 1404 0080 83F83920 		strb	r2, [r3, #57]
 1405              	.L77:
 906:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
 907:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 908:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Process Unlocked */
 909:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     __HAL_UNLOCK(huart);
 1406              		.loc 1 909 0
 1407 0084 FB68     		ldr	r3, [r7, #12]
 1408 0086 0022     		movs	r2, #0
 1409 0088 83F83820 		strb	r2, [r3, #56]
 910:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 911:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Enable the UART Parity Error Interrupt */
 912:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     __HAL_UART_ENABLE_IT(huart, UART_IT_PE);
 1410              		.loc 1 912 0
 1411 008c FB68     		ldr	r3, [r7, #12]
 1412 008e 1B68     		ldr	r3, [r3]
 1413 0090 FA68     		ldr	r2, [r7, #12]
 1414 0092 1268     		ldr	r2, [r2]
 1415 0094 D268     		ldr	r2, [r2, #12]
 1416 0096 42F48072 		orr	r2, r2, #256
 1417 009a DA60     		str	r2, [r3, #12]
 913:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 914:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Enable the UART Error Interrupt: (Frame error, noise error, overrun error) */
 915:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     __HAL_UART_ENABLE_IT(huart, UART_IT_ERR);
 1418              		.loc 1 915 0
 1419 009c FB68     		ldr	r3, [r7, #12]
 1420 009e 1B68     		ldr	r3, [r3]
 1421 00a0 FA68     		ldr	r2, [r7, #12]
 1422 00a2 1268     		ldr	r2, [r2]
 1423 00a4 5269     		ldr	r2, [r2, #20]
 1424 00a6 42F00102 		orr	r2, r2, #1
 1425 00aa 5A61     		str	r2, [r3, #20]
 916:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 917:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Enable the UART Data Register not empty Interrupt */
 918:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     __HAL_UART_ENABLE_IT(huart, UART_IT_RXNE);
 1426              		.loc 1 918 0
 1427 00ac FB68     		ldr	r3, [r7, #12]
 1428 00ae 1B68     		ldr	r3, [r3]
 1429 00b0 FA68     		ldr	r2, [r7, #12]
 1430 00b2 1268     		ldr	r2, [r2]
 1431 00b4 D268     		ldr	r2, [r2, #12]
 1432 00b6 42F02002 		orr	r2, r2, #32
 1433 00ba DA60     		str	r2, [r3, #12]
 919:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 920:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     return HAL_OK;
 1434              		.loc 1 920 0
 1435 00bc 0023     		movs	r3, #0
 1436 00be 00E0     		b	.L74
ARM GAS  /tmp/cckhygdq.s 			page 42


 1437              	.L71:
 921:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
 922:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   else
 923:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 924:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     return HAL_BUSY;
 1438              		.loc 1 924 0
 1439 00c0 0223     		movs	r3, #2
 1440              	.L74:
 925:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
 926:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
 1441              		.loc 1 926 0
 1442 00c2 1846     		mov	r0, r3
 1443 00c4 1C37     		adds	r7, r7, #28
 1444              	.LCFI56:
 1445              		.cfi_def_cfa_offset 4
 1446 00c6 BD46     		mov	sp, r7
 1447              	.LCFI57:
 1448              		.cfi_def_cfa_register 13
 1449              		@ sp needed
 1450 00c8 5DF8047B 		ldr	r7, [sp], #4
 1451              	.LCFI58:
 1452              		.cfi_restore 7
 1453              		.cfi_def_cfa_offset 0
 1454 00cc 7047     		bx	lr
 1455              		.cfi_endproc
 1456              	.LFE73:
 1458 00ce 00BF     		.section	.text.HAL_UART_Transmit_DMA,"ax",%progbits
 1459              		.align	2
 1460              		.global	HAL_UART_Transmit_DMA
 1461              		.thumb
 1462              		.thumb_func
 1464              	HAL_UART_Transmit_DMA:
 1465              	.LFB74:
 927:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 928:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
 929:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief  Sends an amount of data in non blocking mode. 
 930:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  huart: Pointer to a UART_HandleTypeDef structure that contains
 931:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *                the configuration information for the specified UART module.
 932:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  pData: Pointer to data buffer
 933:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  Size: Amount of data to be sent
 934:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval HAL status
 935:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
 936:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Transmit_DMA(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size)
 937:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
 1466              		.loc 1 937 0
 1467              		.cfi_startproc
 1468              		@ args = 0, pretend = 0, frame = 24
 1469              		@ frame_needed = 1, uses_anonymous_args = 0
 1470 0000 90B5     		push	{r4, r7, lr}
 1471              	.LCFI59:
 1472              		.cfi_def_cfa_offset 12
 1473              		.cfi_offset 4, -12
 1474              		.cfi_offset 7, -8
 1475              		.cfi_offset 14, -4
 1476 0002 87B0     		sub	sp, sp, #28
 1477              	.LCFI60:
 1478              		.cfi_def_cfa_offset 40
ARM GAS  /tmp/cckhygdq.s 			page 43


 1479 0004 00AF     		add	r7, sp, #0
 1480              	.LCFI61:
 1481              		.cfi_def_cfa_register 7
 1482 0006 F860     		str	r0, [r7, #12]
 1483 0008 B960     		str	r1, [r7, #8]
 1484 000a 1346     		mov	r3, r2
 1485 000c FB80     		strh	r3, [r7, #6]	@ movhi
 938:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   uint32_t *tmp;
 939:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   uint32_t tmp_state = 0;
 1486              		.loc 1 939 0
 1487 000e 0023     		movs	r3, #0
 1488 0010 7B61     		str	r3, [r7, #20]
 940:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 941:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   tmp_state = huart->State;
 1489              		.loc 1 941 0
 1490 0012 FB68     		ldr	r3, [r7, #12]
 1491 0014 93F83930 		ldrb	r3, [r3, #57]
 1492 0018 DBB2     		uxtb	r3, r3
 1493 001a 7B61     		str	r3, [r7, #20]
 942:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if((tmp_state == HAL_UART_STATE_READY) || (tmp_state == HAL_UART_STATE_BUSY_RX))
 1494              		.loc 1 942 0
 1495 001c 7B69     		ldr	r3, [r7, #20]
 1496 001e 012B     		cmp	r3, #1
 1497 0020 02D0     		beq	.L79
 1498              		.loc 1 942 0 is_stmt 0 discriminator 1
 1499 0022 7B69     		ldr	r3, [r7, #20]
 1500 0024 222B     		cmp	r3, #34
 1501 0026 5DD1     		bne	.L80
 1502              	.L79:
 943:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 944:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     if((pData == NULL ) || (Size == 0)) 
 1503              		.loc 1 944 0 is_stmt 1
 1504 0028 BB68     		ldr	r3, [r7, #8]
 1505 002a 002B     		cmp	r3, #0
 1506 002c 02D0     		beq	.L81
 1507              		.loc 1 944 0 is_stmt 0 discriminator 1
 1508 002e FB88     		ldrh	r3, [r7, #6]
 1509 0030 002B     		cmp	r3, #0
 1510 0032 01D1     		bne	.L82
 1511              	.L81:
 945:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
 946:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       return HAL_ERROR;
 1512              		.loc 1 946 0 is_stmt 1
 1513 0034 0123     		movs	r3, #1
 1514 0036 56E0     		b	.L83
 1515              	.L82:
 947:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
 948:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 949:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Process Locked */
 950:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     __HAL_LOCK(huart);
 1516              		.loc 1 950 0
 1517 0038 FB68     		ldr	r3, [r7, #12]
 1518 003a 93F83830 		ldrb	r3, [r3, #56]	@ zero_extendqisi2
 1519 003e 012B     		cmp	r3, #1
 1520 0040 01D1     		bne	.L84
 1521              		.loc 1 950 0 is_stmt 0 discriminator 1
 1522 0042 0223     		movs	r3, #2
ARM GAS  /tmp/cckhygdq.s 			page 44


 1523 0044 4FE0     		b	.L83
 1524              	.L84:
 1525              		.loc 1 950 0 discriminator 2
 1526 0046 FB68     		ldr	r3, [r7, #12]
 1527 0048 0122     		movs	r2, #1
 1528 004a 83F83820 		strb	r2, [r3, #56]
 951:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 952:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->pTxBuffPtr = pData;
 1529              		.loc 1 952 0 is_stmt 1 discriminator 2
 1530 004e BA68     		ldr	r2, [r7, #8]
 1531 0050 FB68     		ldr	r3, [r7, #12]
 1532 0052 1A62     		str	r2, [r3, #32]
 953:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->TxXferSize = Size;
 1533              		.loc 1 953 0 discriminator 2
 1534 0054 FB68     		ldr	r3, [r7, #12]
 1535 0056 FA88     		ldrh	r2, [r7, #6]	@ movhi
 1536 0058 9A84     		strh	r2, [r3, #36]	@ movhi
 954:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->TxXferCount = Size;
 1537              		.loc 1 954 0 discriminator 2
 1538 005a FB68     		ldr	r3, [r7, #12]
 1539 005c FA88     		ldrh	r2, [r7, #6]	@ movhi
 1540 005e DA84     		strh	r2, [r3, #38]	@ movhi
 955:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 956:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
 1541              		.loc 1 956 0 discriminator 2
 1542 0060 FB68     		ldr	r3, [r7, #12]
 1543 0062 0022     		movs	r2, #0
 1544 0064 DA63     		str	r2, [r3, #60]
 957:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Check if a receive process is ongoing or not */
 958:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     if(huart->State == HAL_UART_STATE_BUSY_RX)
 1545              		.loc 1 958 0 discriminator 2
 1546 0066 FB68     		ldr	r3, [r7, #12]
 1547 0068 93F83930 		ldrb	r3, [r3, #57]
 1548 006c DBB2     		uxtb	r3, r3
 1549 006e 222B     		cmp	r3, #34
 1550 0070 04D1     		bne	.L85
 959:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
 960:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       huart->State = HAL_UART_STATE_BUSY_TX_RX;
 1551              		.loc 1 960 0
 1552 0072 FB68     		ldr	r3, [r7, #12]
 1553 0074 3222     		movs	r2, #50
 1554 0076 83F83920 		strb	r2, [r3, #57]
 1555 007a 03E0     		b	.L86
 1556              	.L85:
 961:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
 962:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     else
 963:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
 964:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       huart->State = HAL_UART_STATE_BUSY_TX;
 1557              		.loc 1 964 0
 1558 007c FB68     		ldr	r3, [r7, #12]
 1559 007e 1222     		movs	r2, #18
 1560 0080 83F83920 		strb	r2, [r3, #57]
 1561              	.L86:
 965:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
 966:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 967:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Set the UART DMA transfer complete callback */
 968:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->hdmatx->XferCpltCallback = UART_DMATransmitCplt;
ARM GAS  /tmp/cckhygdq.s 			page 45


 1562              		.loc 1 968 0
 1563 0084 FB68     		ldr	r3, [r7, #12]
 1564 0086 1B6B     		ldr	r3, [r3, #48]
 1565 0088 194A     		ldr	r2, .L87
 1566 008a 9A62     		str	r2, [r3, #40]
 969:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 970:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Set the UART DMA Half transfer complete callback */
 971:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->hdmatx->XferHalfCpltCallback = UART_DMATxHalfCplt;
 1567              		.loc 1 971 0
 1568 008c FB68     		ldr	r3, [r7, #12]
 1569 008e 1B6B     		ldr	r3, [r3, #48]
 1570 0090 184A     		ldr	r2, .L87+4
 1571 0092 DA62     		str	r2, [r3, #44]
 972:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 973:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Set the DMA error callback */
 974:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->hdmatx->XferErrorCallback = UART_DMAError;
 1572              		.loc 1 974 0
 1573 0094 FB68     		ldr	r3, [r7, #12]
 1574 0096 1B6B     		ldr	r3, [r3, #48]
 1575 0098 174A     		ldr	r2, .L87+8
 1576 009a 1A63     		str	r2, [r3, #48]
 975:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 976:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Enable the UART transmit DMA channel */
 977:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     tmp = (uint32_t*)&pData;
 1577              		.loc 1 977 0
 1578 009c 07F10803 		add	r3, r7, #8
 1579 00a0 3B61     		str	r3, [r7, #16]
 978:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     HAL_DMA_Start_IT(huart->hdmatx, *(uint32_t*)tmp, (uint32_t)&huart->Instance->DR, Size);
 1580              		.loc 1 978 0
 1581 00a2 FB68     		ldr	r3, [r7, #12]
 1582 00a4 196B     		ldr	r1, [r3, #48]
 1583 00a6 3B69     		ldr	r3, [r7, #16]
 1584 00a8 1A68     		ldr	r2, [r3]
 1585 00aa FB68     		ldr	r3, [r7, #12]
 1586 00ac 1B68     		ldr	r3, [r3]
 1587 00ae 0433     		adds	r3, r3, #4
 1588 00b0 1C46     		mov	r4, r3
 1589 00b2 FB88     		ldrh	r3, [r7, #6]
 1590 00b4 0846     		mov	r0, r1
 1591 00b6 1146     		mov	r1, r2
 1592 00b8 2246     		mov	r2, r4
 1593 00ba FFF7FEFF 		bl	HAL_DMA_Start_IT
 979:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 980:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Clear the TC flag in the SR register by writing 0 to it */
 981:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     __HAL_UART_CLEAR_FLAG(huart, UART_FLAG_TC);
 1594              		.loc 1 981 0
 1595 00be FB68     		ldr	r3, [r7, #12]
 1596 00c0 1B68     		ldr	r3, [r3]
 1597 00c2 6FF04002 		mvn	r2, #64
 1598 00c6 1A60     		str	r2, [r3]
 982:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 983:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Enable the DMA transfer for transmit request by setting the DMAT bit
 984:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****        in the UART CR3 register */
 985:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_DMAT);
 1599              		.loc 1 985 0
 1600 00c8 FB68     		ldr	r3, [r7, #12]
 1601 00ca 1B68     		ldr	r3, [r3]
ARM GAS  /tmp/cckhygdq.s 			page 46


 1602 00cc FA68     		ldr	r2, [r7, #12]
 1603 00ce 1268     		ldr	r2, [r2]
 1604 00d0 5269     		ldr	r2, [r2, #20]
 1605 00d2 42F08002 		orr	r2, r2, #128
 1606 00d6 5A61     		str	r2, [r3, #20]
 986:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 987:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Process Unlocked */
 988:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     __HAL_UNLOCK(huart);
 1607              		.loc 1 988 0
 1608 00d8 FB68     		ldr	r3, [r7, #12]
 1609 00da 0022     		movs	r2, #0
 1610 00dc 83F83820 		strb	r2, [r3, #56]
 989:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 990:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     return HAL_OK;
 1611              		.loc 1 990 0
 1612 00e0 0023     		movs	r3, #0
 1613 00e2 00E0     		b	.L83
 1614              	.L80:
 991:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
 992:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   else
 993:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 994:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     return HAL_BUSY;
 1615              		.loc 1 994 0
 1616 00e4 0223     		movs	r3, #2
 1617              	.L83:
 995:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
 996:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
 1618              		.loc 1 996 0
 1619 00e6 1846     		mov	r0, r3
 1620 00e8 1C37     		adds	r7, r7, #28
 1621              	.LCFI62:
 1622              		.cfi_def_cfa_offset 12
 1623 00ea BD46     		mov	sp, r7
 1624              	.LCFI63:
 1625              		.cfi_def_cfa_register 13
 1626              		@ sp needed
 1627 00ec 90BD     		pop	{r4, r7, pc}
 1628              	.L88:
 1629 00ee 00BF     		.align	2
 1630              	.L87:
 1631 00f0 00000000 		.word	UART_DMATransmitCplt
 1632 00f4 00000000 		.word	UART_DMATxHalfCplt
 1633 00f8 00000000 		.word	UART_DMAError
 1634              		.cfi_endproc
 1635              	.LFE74:
 1637              		.section	.text.HAL_UART_Receive_DMA,"ax",%progbits
 1638              		.align	2
 1639              		.global	HAL_UART_Receive_DMA
 1640              		.thumb
 1641              		.thumb_func
 1643              	HAL_UART_Receive_DMA:
 1644              	.LFB75:
 997:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 998:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
 999:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief  Receives an amount of data in non blocking mode. 
1000:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  huart: Pointer to a UART_HandleTypeDef structure that contains
1001:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *                the configuration information for the specified UART module.
ARM GAS  /tmp/cckhygdq.s 			page 47


1002:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  pData: Pointer to data buffer
1003:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  Size: Amount of data to be received
1004:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @note   When the UART parity is enabled (PCE = 1), the received data contain 
1005:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *         the parity bit (MSB position)     
1006:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval HAL status
1007:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
1008:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Receive_DMA(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size)
1009:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
 1645              		.loc 1 1009 0
 1646              		.cfi_startproc
 1647              		@ args = 0, pretend = 0, frame = 24
 1648              		@ frame_needed = 1, uses_anonymous_args = 0
 1649 0000 90B5     		push	{r4, r7, lr}
 1650              	.LCFI64:
 1651              		.cfi_def_cfa_offset 12
 1652              		.cfi_offset 4, -12
 1653              		.cfi_offset 7, -8
 1654              		.cfi_offset 14, -4
 1655 0002 87B0     		sub	sp, sp, #28
 1656              	.LCFI65:
 1657              		.cfi_def_cfa_offset 40
 1658 0004 00AF     		add	r7, sp, #0
 1659              	.LCFI66:
 1660              		.cfi_def_cfa_register 7
 1661 0006 F860     		str	r0, [r7, #12]
 1662 0008 B960     		str	r1, [r7, #8]
 1663 000a 1346     		mov	r3, r2
 1664 000c FB80     		strh	r3, [r7, #6]	@ movhi
1010:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   uint32_t *tmp;
1011:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   uint32_t tmp_state = 0;
 1665              		.loc 1 1011 0
 1666 000e 0023     		movs	r3, #0
 1667 0010 7B61     		str	r3, [r7, #20]
1012:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1013:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   tmp_state = huart->State;
 1668              		.loc 1 1013 0
 1669 0012 FB68     		ldr	r3, [r7, #12]
 1670 0014 93F83930 		ldrb	r3, [r3, #57]
 1671 0018 DBB2     		uxtb	r3, r3
 1672 001a 7B61     		str	r3, [r7, #20]
1014:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if((tmp_state == HAL_UART_STATE_READY) || (tmp_state == HAL_UART_STATE_BUSY_TX))
 1673              		.loc 1 1014 0
 1674 001c 7B69     		ldr	r3, [r7, #20]
 1675 001e 012B     		cmp	r3, #1
 1676 0020 02D0     		beq	.L90
 1677              		.loc 1 1014 0 is_stmt 0 discriminator 1
 1678 0022 7B69     		ldr	r3, [r7, #20]
 1679 0024 122B     		cmp	r3, #18
 1680 0026 54D1     		bne	.L91
 1681              	.L90:
1015:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
1016:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     if((pData == NULL ) || (Size == 0))
 1682              		.loc 1 1016 0 is_stmt 1
 1683 0028 BB68     		ldr	r3, [r7, #8]
 1684 002a 002B     		cmp	r3, #0
 1685 002c 02D0     		beq	.L92
 1686              		.loc 1 1016 0 is_stmt 0 discriminator 1
ARM GAS  /tmp/cckhygdq.s 			page 48


 1687 002e FB88     		ldrh	r3, [r7, #6]
 1688 0030 002B     		cmp	r3, #0
 1689 0032 01D1     		bne	.L93
 1690              	.L92:
1017:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
1018:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       return HAL_ERROR;
 1691              		.loc 1 1018 0 is_stmt 1
 1692 0034 0123     		movs	r3, #1
 1693 0036 4DE0     		b	.L94
 1694              	.L93:
1019:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
1020:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1021:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Process Locked */
1022:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     __HAL_LOCK(huart);
 1695              		.loc 1 1022 0
 1696 0038 FB68     		ldr	r3, [r7, #12]
 1697 003a 93F83830 		ldrb	r3, [r3, #56]	@ zero_extendqisi2
 1698 003e 012B     		cmp	r3, #1
 1699 0040 01D1     		bne	.L95
 1700              		.loc 1 1022 0 is_stmt 0 discriminator 1
 1701 0042 0223     		movs	r3, #2
 1702 0044 46E0     		b	.L94
 1703              	.L95:
 1704              		.loc 1 1022 0 discriminator 2
 1705 0046 FB68     		ldr	r3, [r7, #12]
 1706 0048 0122     		movs	r2, #1
 1707 004a 83F83820 		strb	r2, [r3, #56]
1023:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1024:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->pRxBuffPtr = pData;
 1708              		.loc 1 1024 0 is_stmt 1 discriminator 2
 1709 004e BA68     		ldr	r2, [r7, #8]
 1710 0050 FB68     		ldr	r3, [r7, #12]
 1711 0052 9A62     		str	r2, [r3, #40]
1025:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->RxXferSize = Size;
 1712              		.loc 1 1025 0 discriminator 2
 1713 0054 FB68     		ldr	r3, [r7, #12]
 1714 0056 FA88     		ldrh	r2, [r7, #6]	@ movhi
 1715 0058 9A85     		strh	r2, [r3, #44]	@ movhi
1026:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1027:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
 1716              		.loc 1 1027 0 discriminator 2
 1717 005a FB68     		ldr	r3, [r7, #12]
 1718 005c 0022     		movs	r2, #0
 1719 005e DA63     		str	r2, [r3, #60]
1028:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Check if a transmit process is ongoing or not */
1029:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     if(huart->State == HAL_UART_STATE_BUSY_TX)
 1720              		.loc 1 1029 0 discriminator 2
 1721 0060 FB68     		ldr	r3, [r7, #12]
 1722 0062 93F83930 		ldrb	r3, [r3, #57]
 1723 0066 DBB2     		uxtb	r3, r3
 1724 0068 122B     		cmp	r3, #18
 1725 006a 04D1     		bne	.L96
1030:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
1031:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       huart->State = HAL_UART_STATE_BUSY_TX_RX;
 1726              		.loc 1 1031 0
 1727 006c FB68     		ldr	r3, [r7, #12]
 1728 006e 3222     		movs	r2, #50
ARM GAS  /tmp/cckhygdq.s 			page 49


 1729 0070 83F83920 		strb	r2, [r3, #57]
 1730 0074 03E0     		b	.L97
 1731              	.L96:
1032:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
1033:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     else
1034:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
1035:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       huart->State = HAL_UART_STATE_BUSY_RX;
 1732              		.loc 1 1035 0
 1733 0076 FB68     		ldr	r3, [r7, #12]
 1734 0078 2222     		movs	r2, #34
 1735 007a 83F83920 		strb	r2, [r3, #57]
 1736              	.L97:
1036:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
1037:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1038:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Set the UART DMA transfer complete callback */
1039:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->hdmarx->XferCpltCallback = UART_DMAReceiveCplt;
 1737              		.loc 1 1039 0
 1738 007e FB68     		ldr	r3, [r7, #12]
 1739 0080 5B6B     		ldr	r3, [r3, #52]
 1740 0082 164A     		ldr	r2, .L98
 1741 0084 9A62     		str	r2, [r3, #40]
1040:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1041:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Set the UART DMA Half transfer complete callback */
1042:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->hdmarx->XferHalfCpltCallback = UART_DMARxHalfCplt;
 1742              		.loc 1 1042 0
 1743 0086 FB68     		ldr	r3, [r7, #12]
 1744 0088 5B6B     		ldr	r3, [r3, #52]
 1745 008a 154A     		ldr	r2, .L98+4
 1746 008c DA62     		str	r2, [r3, #44]
1043:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1044:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Set the DMA error callback */
1045:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->hdmarx->XferErrorCallback = UART_DMAError;
 1747              		.loc 1 1045 0
 1748 008e FB68     		ldr	r3, [r7, #12]
 1749 0090 5B6B     		ldr	r3, [r3, #52]
 1750 0092 144A     		ldr	r2, .L98+8
 1751 0094 1A63     		str	r2, [r3, #48]
1046:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1047:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Enable the DMA channel */
1048:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     tmp = (uint32_t*)&pData;
 1752              		.loc 1 1048 0
 1753 0096 07F10803 		add	r3, r7, #8
 1754 009a 3B61     		str	r3, [r7, #16]
1049:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     HAL_DMA_Start_IT(huart->hdmarx, (uint32_t)&huart->Instance->DR, *(uint32_t*)tmp, Size);
 1755              		.loc 1 1049 0
 1756 009c FB68     		ldr	r3, [r7, #12]
 1757 009e 596B     		ldr	r1, [r3, #52]
 1758 00a0 FB68     		ldr	r3, [r7, #12]
 1759 00a2 1B68     		ldr	r3, [r3]
 1760 00a4 0433     		adds	r3, r3, #4
 1761 00a6 1C46     		mov	r4, r3
 1762 00a8 3B69     		ldr	r3, [r7, #16]
 1763 00aa 1A68     		ldr	r2, [r3]
 1764 00ac FB88     		ldrh	r3, [r7, #6]
 1765 00ae 0846     		mov	r0, r1
 1766 00b0 2146     		mov	r1, r4
 1767 00b2 FFF7FEFF 		bl	HAL_DMA_Start_IT
ARM GAS  /tmp/cckhygdq.s 			page 50


1050:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1051:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Enable the DMA transfer for the receiver request by setting the DMAR bit 
1052:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****        in the UART CR3 register */
1053:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_DMAR);
 1768              		.loc 1 1053 0
 1769 00b6 FB68     		ldr	r3, [r7, #12]
 1770 00b8 1B68     		ldr	r3, [r3]
 1771 00ba FA68     		ldr	r2, [r7, #12]
 1772 00bc 1268     		ldr	r2, [r2]
 1773 00be 5269     		ldr	r2, [r2, #20]
 1774 00c0 42F04002 		orr	r2, r2, #64
 1775 00c4 5A61     		str	r2, [r3, #20]
1054:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1055:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Process Unlocked */
1056:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     __HAL_UNLOCK(huart);
 1776              		.loc 1 1056 0
 1777 00c6 FB68     		ldr	r3, [r7, #12]
 1778 00c8 0022     		movs	r2, #0
 1779 00ca 83F83820 		strb	r2, [r3, #56]
1057:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1058:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     return HAL_OK;
 1780              		.loc 1 1058 0
 1781 00ce 0023     		movs	r3, #0
 1782 00d0 00E0     		b	.L94
 1783              	.L91:
1059:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
1060:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   else
1061:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
1062:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     return HAL_BUSY;
 1784              		.loc 1 1062 0
 1785 00d2 0223     		movs	r3, #2
 1786              	.L94:
1063:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
1064:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
 1787              		.loc 1 1064 0
 1788 00d4 1846     		mov	r0, r3
 1789 00d6 1C37     		adds	r7, r7, #28
 1790              	.LCFI67:
 1791              		.cfi_def_cfa_offset 12
 1792 00d8 BD46     		mov	sp, r7
 1793              	.LCFI68:
 1794              		.cfi_def_cfa_register 13
 1795              		@ sp needed
 1796 00da 90BD     		pop	{r4, r7, pc}
 1797              	.L99:
 1798              		.align	2
 1799              	.L98:
 1800 00dc 00000000 		.word	UART_DMAReceiveCplt
 1801 00e0 00000000 		.word	UART_DMARxHalfCplt
 1802 00e4 00000000 		.word	UART_DMAError
 1803              		.cfi_endproc
 1804              	.LFE75:
 1806              		.section	.text.HAL_UART_DMAPause,"ax",%progbits
 1807              		.align	2
 1808              		.global	HAL_UART_DMAPause
 1809              		.thumb
 1810              		.thumb_func
ARM GAS  /tmp/cckhygdq.s 			page 51


 1812              	HAL_UART_DMAPause:
 1813              	.LFB76:
1065:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     
1066:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
1067:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief Pauses the DMA Transfer.
1068:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  huart: Pointer to a UART_HandleTypeDef structure that contains
1069:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *                the configuration information for the specified UART module.
1070:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval HAL status
1071:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
1072:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_DMAPause(UART_HandleTypeDef *huart)
1073:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
 1814              		.loc 1 1073 0
 1815              		.cfi_startproc
 1816              		@ args = 0, pretend = 0, frame = 8
 1817              		@ frame_needed = 1, uses_anonymous_args = 0
 1818              		@ link register save eliminated.
 1819 0000 80B4     		push	{r7}
 1820              	.LCFI69:
 1821              		.cfi_def_cfa_offset 4
 1822              		.cfi_offset 7, -4
 1823 0002 83B0     		sub	sp, sp, #12
 1824              	.LCFI70:
 1825              		.cfi_def_cfa_offset 16
 1826 0004 00AF     		add	r7, sp, #0
 1827              	.LCFI71:
 1828              		.cfi_def_cfa_register 7
 1829 0006 7860     		str	r0, [r7, #4]
1074:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Process Locked */
1075:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   __HAL_LOCK(huart);
 1830              		.loc 1 1075 0
 1831 0008 7B68     		ldr	r3, [r7, #4]
 1832 000a 93F83830 		ldrb	r3, [r3, #56]	@ zero_extendqisi2
 1833 000e 012B     		cmp	r3, #1
 1834 0010 01D1     		bne	.L101
 1835              		.loc 1 1075 0 is_stmt 0 discriminator 1
 1836 0012 0223     		movs	r3, #2
 1837 0014 3BE0     		b	.L102
 1838              	.L101:
 1839              		.loc 1 1075 0 discriminator 2
 1840 0016 7B68     		ldr	r3, [r7, #4]
 1841 0018 0122     		movs	r2, #1
 1842 001a 83F83820 		strb	r2, [r3, #56]
1076:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
1077:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if(huart->State == HAL_UART_STATE_BUSY_TX)
 1843              		.loc 1 1077 0 is_stmt 1 discriminator 2
 1844 001e 7B68     		ldr	r3, [r7, #4]
 1845 0020 93F83930 		ldrb	r3, [r3, #57]
 1846 0024 DBB2     		uxtb	r3, r3
 1847 0026 122B     		cmp	r3, #18
 1848 0028 08D1     		bne	.L103
1078:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
1079:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Disable the UART DMA Tx request */
1080:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
 1849              		.loc 1 1080 0
 1850 002a 7B68     		ldr	r3, [r7, #4]
 1851 002c 1B68     		ldr	r3, [r3]
 1852 002e 7A68     		ldr	r2, [r7, #4]
ARM GAS  /tmp/cckhygdq.s 			page 52


 1853 0030 1268     		ldr	r2, [r2]
 1854 0032 5269     		ldr	r2, [r2, #20]
 1855 0034 22F08002 		bic	r2, r2, #128
 1856 0038 5A61     		str	r2, [r3, #20]
 1857 003a 23E0     		b	.L104
 1858              	.L103:
1081:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
1082:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   else if(huart->State == HAL_UART_STATE_BUSY_RX)
 1859              		.loc 1 1082 0
 1860 003c 7B68     		ldr	r3, [r7, #4]
 1861 003e 93F83930 		ldrb	r3, [r3, #57]
 1862 0042 DBB2     		uxtb	r3, r3
 1863 0044 222B     		cmp	r3, #34
 1864 0046 08D1     		bne	.L105
1083:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
1084:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Disable the UART DMA Rx request */
1085:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
 1865              		.loc 1 1085 0
 1866 0048 7B68     		ldr	r3, [r7, #4]
 1867 004a 1B68     		ldr	r3, [r3]
 1868 004c 7A68     		ldr	r2, [r7, #4]
 1869 004e 1268     		ldr	r2, [r2]
 1870 0050 5269     		ldr	r2, [r2, #20]
 1871 0052 22F04002 		bic	r2, r2, #64
 1872 0056 5A61     		str	r2, [r3, #20]
 1873 0058 14E0     		b	.L104
 1874              	.L105:
1086:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
1087:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   else if (huart->State == HAL_UART_STATE_BUSY_TX_RX)
 1875              		.loc 1 1087 0
 1876 005a 7B68     		ldr	r3, [r7, #4]
 1877 005c 93F83930 		ldrb	r3, [r3, #57]
 1878 0060 DBB2     		uxtb	r3, r3
 1879 0062 322B     		cmp	r3, #50
 1880 0064 08D1     		bne	.L106
1088:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
1089:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Disable the UART DMA Tx & Rx requests */
1090:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, (USART_CR3_DMAT | USART_CR3_DMAR));
 1881              		.loc 1 1090 0
 1882 0066 7B68     		ldr	r3, [r7, #4]
 1883 0068 1B68     		ldr	r3, [r3]
 1884 006a 7A68     		ldr	r2, [r7, #4]
 1885 006c 1268     		ldr	r2, [r2]
 1886 006e 5269     		ldr	r2, [r2, #20]
 1887 0070 22F0C002 		bic	r2, r2, #192
 1888 0074 5A61     		str	r2, [r3, #20]
 1889 0076 05E0     		b	.L104
 1890              	.L106:
1091:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
1092:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   else
1093:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
1094:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Process Unlocked */
1095:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     __HAL_UNLOCK(huart);
 1891              		.loc 1 1095 0
 1892 0078 7B68     		ldr	r3, [r7, #4]
 1893 007a 0022     		movs	r2, #0
 1894 007c 83F83820 		strb	r2, [r3, #56]
ARM GAS  /tmp/cckhygdq.s 			page 53


1096:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
1097:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     return HAL_ERROR; 
 1895              		.loc 1 1097 0
 1896 0080 0123     		movs	r3, #1
 1897 0082 04E0     		b	.L102
 1898              	.L104:
1098:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
1099:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
1100:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Process Unlocked */
1101:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   __HAL_UNLOCK(huart);
 1899              		.loc 1 1101 0
 1900 0084 7B68     		ldr	r3, [r7, #4]
 1901 0086 0022     		movs	r2, #0
 1902 0088 83F83820 		strb	r2, [r3, #56]
1102:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1103:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   return HAL_OK; 
 1903              		.loc 1 1103 0
 1904 008c 0023     		movs	r3, #0
 1905              	.L102:
1104:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
 1906              		.loc 1 1104 0
 1907 008e 1846     		mov	r0, r3
 1908 0090 0C37     		adds	r7, r7, #12
 1909              	.LCFI72:
 1910              		.cfi_def_cfa_offset 4
 1911 0092 BD46     		mov	sp, r7
 1912              	.LCFI73:
 1913              		.cfi_def_cfa_register 13
 1914              		@ sp needed
 1915 0094 5DF8047B 		ldr	r7, [sp], #4
 1916              	.LCFI74:
 1917              		.cfi_restore 7
 1918              		.cfi_def_cfa_offset 0
 1919 0098 7047     		bx	lr
 1920              		.cfi_endproc
 1921              	.LFE76:
 1923 009a 00BF     		.section	.text.HAL_UART_DMAResume,"ax",%progbits
 1924              		.align	2
 1925              		.global	HAL_UART_DMAResume
 1926              		.thumb
 1927              		.thumb_func
 1929              	HAL_UART_DMAResume:
 1930              	.LFB77:
1105:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1106:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
1107:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief Resumes the DMA Transfer.
1108:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  huart: Pointer to a UART_HandleTypeDef structure that contains
1109:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *                the configuration information for the specified UART module.
1110:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval HAL status
1111:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
1112:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_DMAResume(UART_HandleTypeDef *huart)
1113:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
 1931              		.loc 1 1113 0
 1932              		.cfi_startproc
 1933              		@ args = 0, pretend = 0, frame = 16
 1934              		@ frame_needed = 1, uses_anonymous_args = 0
 1935              		@ link register save eliminated.
ARM GAS  /tmp/cckhygdq.s 			page 54


 1936 0000 80B4     		push	{r7}
 1937              	.LCFI75:
 1938              		.cfi_def_cfa_offset 4
 1939              		.cfi_offset 7, -4
 1940 0002 85B0     		sub	sp, sp, #20
 1941              	.LCFI76:
 1942              		.cfi_def_cfa_offset 24
 1943 0004 00AF     		add	r7, sp, #0
 1944              	.LCFI77:
 1945              		.cfi_def_cfa_register 7
 1946 0006 7860     		str	r0, [r7, #4]
1114:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Process Locked */
1115:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   __HAL_LOCK(huart);
 1947              		.loc 1 1115 0
 1948 0008 7B68     		ldr	r3, [r7, #4]
 1949 000a 93F83830 		ldrb	r3, [r3, #56]	@ zero_extendqisi2
 1950 000e 012B     		cmp	r3, #1
 1951 0010 01D1     		bne	.L108
 1952              		.loc 1 1115 0 is_stmt 0 discriminator 1
 1953 0012 0223     		movs	r3, #2
 1954 0014 4DE0     		b	.L109
 1955              	.L108:
 1956              		.loc 1 1115 0 discriminator 2
 1957 0016 7B68     		ldr	r3, [r7, #4]
 1958 0018 0122     		movs	r2, #1
 1959 001a 83F83820 		strb	r2, [r3, #56]
1116:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1117:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if(huart->State == HAL_UART_STATE_BUSY_TX)
 1960              		.loc 1 1117 0 is_stmt 1 discriminator 2
 1961 001e 7B68     		ldr	r3, [r7, #4]
 1962 0020 93F83930 		ldrb	r3, [r3, #57]
 1963 0024 DBB2     		uxtb	r3, r3
 1964 0026 122B     		cmp	r3, #18
 1965 0028 08D1     		bne	.L110
1118:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
1119:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Enable the UART DMA Tx request */
1120:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_DMAT);
 1966              		.loc 1 1120 0
 1967 002a 7B68     		ldr	r3, [r7, #4]
 1968 002c 1B68     		ldr	r3, [r3]
 1969 002e 7A68     		ldr	r2, [r7, #4]
 1970 0030 1268     		ldr	r2, [r2]
 1971 0032 5269     		ldr	r2, [r2, #20]
 1972 0034 42F08002 		orr	r2, r2, #128
 1973 0038 5A61     		str	r2, [r3, #20]
 1974 003a 35E0     		b	.L111
 1975              	.L110:
1121:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
1122:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   else if(huart->State == HAL_UART_STATE_BUSY_RX)
 1976              		.loc 1 1122 0
 1977 003c 7B68     		ldr	r3, [r7, #4]
 1978 003e 93F83930 		ldrb	r3, [r3, #57]
 1979 0042 DBB2     		uxtb	r3, r3
 1980 0044 222B     		cmp	r3, #34
 1981 0046 11D1     		bne	.L112
 1982              	.LBB2:
1123:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
ARM GAS  /tmp/cckhygdq.s 			page 55


1124:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Clear the Overrun flag before resumming the Rx transfer*/
1125:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     __HAL_UART_CLEAR_OREFLAG(huart);
 1983              		.loc 1 1125 0
 1984 0048 7B68     		ldr	r3, [r7, #4]
 1985 004a 1B68     		ldr	r3, [r3]
 1986 004c 1B68     		ldr	r3, [r3]
 1987 004e FB60     		str	r3, [r7, #12]
 1988 0050 7B68     		ldr	r3, [r7, #4]
 1989 0052 1B68     		ldr	r3, [r3]
 1990 0054 5B68     		ldr	r3, [r3, #4]
 1991 0056 FB60     		str	r3, [r7, #12]
 1992 0058 FB68     		ldr	r3, [r7, #12]
 1993              	.LBE2:
1126:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Enable the UART DMA Rx request */
1127:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_DMAR);
 1994              		.loc 1 1127 0
 1995 005a 7B68     		ldr	r3, [r7, #4]
 1996 005c 1B68     		ldr	r3, [r3]
 1997 005e 7A68     		ldr	r2, [r7, #4]
 1998 0060 1268     		ldr	r2, [r2]
 1999 0062 5269     		ldr	r2, [r2, #20]
 2000 0064 42F04002 		orr	r2, r2, #64
 2001 0068 5A61     		str	r2, [r3, #20]
 2002 006a 1DE0     		b	.L111
 2003              	.L112:
1128:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
1129:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   else if(huart->State == HAL_UART_STATE_BUSY_TX_RX)
 2004              		.loc 1 1129 0
 2005 006c 7B68     		ldr	r3, [r7, #4]
 2006 006e 93F83930 		ldrb	r3, [r3, #57]
 2007 0072 DBB2     		uxtb	r3, r3
 2008 0074 322B     		cmp	r3, #50
 2009 0076 11D1     		bne	.L113
 2010              	.LBB3:
1130:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
1131:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Clear the Overrun flag before resumming the Rx transfer*/
1132:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     __HAL_UART_CLEAR_OREFLAG(huart);
 2011              		.loc 1 1132 0
 2012 0078 7B68     		ldr	r3, [r7, #4]
 2013 007a 1B68     		ldr	r3, [r3]
 2014 007c 1B68     		ldr	r3, [r3]
 2015 007e BB60     		str	r3, [r7, #8]
 2016 0080 7B68     		ldr	r3, [r7, #4]
 2017 0082 1B68     		ldr	r3, [r3]
 2018 0084 5B68     		ldr	r3, [r3, #4]
 2019 0086 BB60     		str	r3, [r7, #8]
 2020 0088 BB68     		ldr	r3, [r7, #8]
 2021              	.LBE3:
1133:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Enable the UART DMA Tx & Rx request */
1134:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, (USART_CR3_DMAT | USART_CR3_DMAR));
 2022              		.loc 1 1134 0
 2023 008a 7B68     		ldr	r3, [r7, #4]
 2024 008c 1B68     		ldr	r3, [r3]
 2025 008e 7A68     		ldr	r2, [r7, #4]
 2026 0090 1268     		ldr	r2, [r2]
 2027 0092 5269     		ldr	r2, [r2, #20]
 2028 0094 42F0C002 		orr	r2, r2, #192
ARM GAS  /tmp/cckhygdq.s 			page 56


 2029 0098 5A61     		str	r2, [r3, #20]
 2030 009a 05E0     		b	.L111
 2031              	.L113:
1135:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
1136:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   else
1137:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
1138:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Process Unlocked */
1139:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     __HAL_UNLOCK(huart);
 2032              		.loc 1 1139 0
 2033 009c 7B68     		ldr	r3, [r7, #4]
 2034 009e 0022     		movs	r2, #0
 2035 00a0 83F83820 		strb	r2, [r3, #56]
1140:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1141:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     return HAL_ERROR; 
 2036              		.loc 1 1141 0
 2037 00a4 0123     		movs	r3, #1
 2038 00a6 04E0     		b	.L109
 2039              	.L111:
1142:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
1143:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1144:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Process Unlocked */
1145:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   __HAL_UNLOCK(huart);
 2040              		.loc 1 1145 0
 2041 00a8 7B68     		ldr	r3, [r7, #4]
 2042 00aa 0022     		movs	r2, #0
 2043 00ac 83F83820 		strb	r2, [r3, #56]
1146:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1147:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   return HAL_OK;
 2044              		.loc 1 1147 0
 2045 00b0 0023     		movs	r3, #0
 2046              	.L109:
1148:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
 2047              		.loc 1 1148 0
 2048 00b2 1846     		mov	r0, r3
 2049 00b4 1437     		adds	r7, r7, #20
 2050              	.LCFI78:
 2051              		.cfi_def_cfa_offset 4
 2052 00b6 BD46     		mov	sp, r7
 2053              	.LCFI79:
 2054              		.cfi_def_cfa_register 13
 2055              		@ sp needed
 2056 00b8 5DF8047B 		ldr	r7, [sp], #4
 2057              	.LCFI80:
 2058              		.cfi_restore 7
 2059              		.cfi_def_cfa_offset 0
 2060 00bc 7047     		bx	lr
 2061              		.cfi_endproc
 2062              	.LFE77:
 2064 00be 00BF     		.section	.text.HAL_UART_DMAStop,"ax",%progbits
 2065              		.align	2
 2066              		.global	HAL_UART_DMAStop
 2067              		.thumb
 2068              		.thumb_func
 2070              	HAL_UART_DMAStop:
 2071              	.LFB78:
1149:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1150:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
ARM GAS  /tmp/cckhygdq.s 			page 57


1151:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief Stops the DMA Transfer.
1152:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  huart: Pointer to a UART_HandleTypeDef structure that contains
1153:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *                the configuration information for the specified UART module.
1154:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval HAL status
1155:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
1156:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_DMAStop(UART_HandleTypeDef *huart)
1157:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
 2072              		.loc 1 1157 0
 2073              		.cfi_startproc
 2074              		@ args = 0, pretend = 0, frame = 8
 2075              		@ frame_needed = 1, uses_anonymous_args = 0
 2076 0000 80B5     		push	{r7, lr}
 2077              	.LCFI81:
 2078              		.cfi_def_cfa_offset 8
 2079              		.cfi_offset 7, -8
 2080              		.cfi_offset 14, -4
 2081 0002 82B0     		sub	sp, sp, #8
 2082              	.LCFI82:
 2083              		.cfi_def_cfa_offset 16
 2084 0004 00AF     		add	r7, sp, #0
 2085              	.LCFI83:
 2086              		.cfi_def_cfa_register 7
 2087 0006 7860     		str	r0, [r7, #4]
1158:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* The Lock is not implemented on this API to allow the user application
1159:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****      to call the HAL UART API under callbacks HAL_UART_TxCpltCallback() / HAL_UART_RxCpltCallback()
1160:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****      when calling HAL_DMA_Abort() API the DMA TX/RX Transfer complete interrupt is generated
1161:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****      and the correspond call back is executed HAL_UART_TxCpltCallback() / HAL_UART_RxCpltCallback()
1162:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****      */
1163:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
1164:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Disable the UART Tx/Rx DMA requests */
1165:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_DMAT | USART_CR3_DMAR));
 2088              		.loc 1 1165 0
 2089 0008 7B68     		ldr	r3, [r7, #4]
 2090 000a 1B68     		ldr	r3, [r3]
 2091 000c 7A68     		ldr	r2, [r7, #4]
 2092 000e 1268     		ldr	r2, [r2]
 2093 0010 5269     		ldr	r2, [r2, #20]
 2094 0012 22F0C002 		bic	r2, r2, #192
 2095 0016 5A61     		str	r2, [r3, #20]
1166:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
1167:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Abort the UART DMA tx channel */
1168:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if(huart->hdmatx != NULL)
 2096              		.loc 1 1168 0
 2097 0018 7B68     		ldr	r3, [r7, #4]
 2098 001a 1B6B     		ldr	r3, [r3, #48]
 2099 001c 002B     		cmp	r3, #0
 2100 001e 04D0     		beq	.L115
1169:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
1170:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     HAL_DMA_Abort(huart->hdmatx);
 2101              		.loc 1 1170 0
 2102 0020 7B68     		ldr	r3, [r7, #4]
 2103 0022 1B6B     		ldr	r3, [r3, #48]
 2104 0024 1846     		mov	r0, r3
 2105 0026 FFF7FEFF 		bl	HAL_DMA_Abort
 2106              	.L115:
1171:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
1172:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Abort the UART DMA rx channel */
ARM GAS  /tmp/cckhygdq.s 			page 58


1173:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if(huart->hdmarx != NULL)
 2107              		.loc 1 1173 0
 2108 002a 7B68     		ldr	r3, [r7, #4]
 2109 002c 5B6B     		ldr	r3, [r3, #52]
 2110 002e 002B     		cmp	r3, #0
 2111 0030 04D0     		beq	.L116
1174:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
1175:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     HAL_DMA_Abort(huart->hdmarx);
 2112              		.loc 1 1175 0
 2113 0032 7B68     		ldr	r3, [r7, #4]
 2114 0034 5B6B     		ldr	r3, [r3, #52]
 2115 0036 1846     		mov	r0, r3
 2116 0038 FFF7FEFF 		bl	HAL_DMA_Abort
 2117              	.L116:
1176:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
1177:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
1178:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->State = HAL_UART_STATE_READY;
 2118              		.loc 1 1178 0
 2119 003c 7B68     		ldr	r3, [r7, #4]
 2120 003e 0122     		movs	r2, #1
 2121 0040 83F83920 		strb	r2, [r3, #57]
1179:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
1180:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   return HAL_OK;
 2122              		.loc 1 1180 0
 2123 0044 0023     		movs	r3, #0
1181:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
 2124              		.loc 1 1181 0
 2125 0046 1846     		mov	r0, r3
 2126 0048 0837     		adds	r7, r7, #8
 2127              	.LCFI84:
 2128              		.cfi_def_cfa_offset 8
 2129 004a BD46     		mov	sp, r7
 2130              	.LCFI85:
 2131              		.cfi_def_cfa_register 13
 2132              		@ sp needed
 2133 004c 80BD     		pop	{r7, pc}
 2134              		.cfi_endproc
 2135              	.LFE78:
 2137 004e 00BF     		.section	.text.HAL_UART_IRQHandler,"ax",%progbits
 2138              		.align	2
 2139              		.global	HAL_UART_IRQHandler
 2140              		.thumb
 2141              		.thumb_func
 2143              	HAL_UART_IRQHandler:
 2144              	.LFB79:
1182:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1183:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
1184:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief  This function handles UART interrupt request.
1185:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  huart: Pointer to a UART_HandleTypeDef structure that contains
1186:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *                the configuration information for the specified UART module.
1187:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval None
1188:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
1189:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** void HAL_UART_IRQHandler(UART_HandleTypeDef *huart)
1190:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
 2145              		.loc 1 1190 0
 2146              		.cfi_startproc
 2147              		@ args = 0, pretend = 0, frame = 24
ARM GAS  /tmp/cckhygdq.s 			page 59


 2148              		@ frame_needed = 1, uses_anonymous_args = 0
 2149 0000 80B5     		push	{r7, lr}
 2150              	.LCFI86:
 2151              		.cfi_def_cfa_offset 8
 2152              		.cfi_offset 7, -8
 2153              		.cfi_offset 14, -4
 2154 0002 86B0     		sub	sp, sp, #24
 2155              	.LCFI87:
 2156              		.cfi_def_cfa_offset 32
 2157 0004 00AF     		add	r7, sp, #0
 2158              	.LCFI88:
 2159              		.cfi_def_cfa_register 7
 2160 0006 7860     		str	r0, [r7, #4]
1191:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   uint32_t tmp_flag = 0, tmp_it_source = 0;
 2161              		.loc 1 1191 0
 2162 0008 0023     		movs	r3, #0
 2163 000a 7B61     		str	r3, [r7, #20]
 2164 000c 0023     		movs	r3, #0
 2165 000e 3B61     		str	r3, [r7, #16]
1192:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1193:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   tmp_flag = __HAL_UART_GET_FLAG(huart, UART_FLAG_PE);
 2166              		.loc 1 1193 0
 2167 0010 7B68     		ldr	r3, [r7, #4]
 2168 0012 1B68     		ldr	r3, [r3]
 2169 0014 1B68     		ldr	r3, [r3]
 2170 0016 03F00103 		and	r3, r3, #1
 2171 001a 002B     		cmp	r3, #0
 2172 001c 14BF     		ite	ne
 2173 001e 0123     		movne	r3, #1
 2174 0020 0023     		moveq	r3, #0
 2175 0022 DBB2     		uxtb	r3, r3
 2176 0024 7B61     		str	r3, [r7, #20]
1194:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   tmp_it_source = __HAL_UART_GET_IT_SOURCE(huart, UART_IT_PE);  
 2177              		.loc 1 1194 0
 2178 0026 7B68     		ldr	r3, [r7, #4]
 2179 0028 1B68     		ldr	r3, [r3]
 2180 002a DB68     		ldr	r3, [r3, #12]
 2181 002c 03F48073 		and	r3, r3, #256
 2182 0030 3B61     		str	r3, [r7, #16]
1195:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* UART parity error interrupt occurred ------------------------------------*/
1196:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if((tmp_flag != RESET) && (tmp_it_source != RESET))
 2183              		.loc 1 1196 0
 2184 0032 7B69     		ldr	r3, [r7, #20]
 2185 0034 002B     		cmp	r3, #0
 2186 0036 08D0     		beq	.L119
 2187              		.loc 1 1196 0 is_stmt 0 discriminator 1
 2188 0038 3B69     		ldr	r3, [r7, #16]
 2189 003a 002B     		cmp	r3, #0
 2190 003c 05D0     		beq	.L119
1197:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   { 
1198:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->ErrorCode |= HAL_UART_ERROR_PE;
 2191              		.loc 1 1198 0 is_stmt 1
 2192 003e 7B68     		ldr	r3, [r7, #4]
 2193 0040 DB6B     		ldr	r3, [r3, #60]
 2194 0042 43F00102 		orr	r2, r3, #1
 2195 0046 7B68     		ldr	r3, [r7, #4]
 2196 0048 DA63     		str	r2, [r3, #60]
ARM GAS  /tmp/cckhygdq.s 			page 60


 2197              	.L119:
1199:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
1200:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
1201:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   tmp_flag = __HAL_UART_GET_FLAG(huart, UART_FLAG_FE);
 2198              		.loc 1 1201 0
 2199 004a 7B68     		ldr	r3, [r7, #4]
 2200 004c 1B68     		ldr	r3, [r3]
 2201 004e 1B68     		ldr	r3, [r3]
 2202 0050 03F00203 		and	r3, r3, #2
 2203 0054 002B     		cmp	r3, #0
 2204 0056 14BF     		ite	ne
 2205 0058 0123     		movne	r3, #1
 2206 005a 0023     		moveq	r3, #0
 2207 005c DBB2     		uxtb	r3, r3
 2208 005e 7B61     		str	r3, [r7, #20]
1202:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   tmp_it_source = __HAL_UART_GET_IT_SOURCE(huart, UART_IT_ERR);
 2209              		.loc 1 1202 0
 2210 0060 7B68     		ldr	r3, [r7, #4]
 2211 0062 1B68     		ldr	r3, [r3]
 2212 0064 5B69     		ldr	r3, [r3, #20]
 2213 0066 03F00103 		and	r3, r3, #1
 2214 006a 3B61     		str	r3, [r7, #16]
1203:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* UART frame error interrupt occurred -------------------------------------*/
1204:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if((tmp_flag != RESET) && (tmp_it_source != RESET))
 2215              		.loc 1 1204 0
 2216 006c 7B69     		ldr	r3, [r7, #20]
 2217 006e 002B     		cmp	r3, #0
 2218 0070 08D0     		beq	.L120
 2219              		.loc 1 1204 0 is_stmt 0 discriminator 1
 2220 0072 3B69     		ldr	r3, [r7, #16]
 2221 0074 002B     		cmp	r3, #0
 2222 0076 05D0     		beq	.L120
1205:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   { 
1206:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->ErrorCode |= HAL_UART_ERROR_FE;
 2223              		.loc 1 1206 0 is_stmt 1
 2224 0078 7B68     		ldr	r3, [r7, #4]
 2225 007a DB6B     		ldr	r3, [r3, #60]
 2226 007c 43F00402 		orr	r2, r3, #4
 2227 0080 7B68     		ldr	r3, [r7, #4]
 2228 0082 DA63     		str	r2, [r3, #60]
 2229              	.L120:
1207:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
1208:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
1209:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   tmp_flag = __HAL_UART_GET_FLAG(huart, UART_FLAG_NE);
 2230              		.loc 1 1209 0
 2231 0084 7B68     		ldr	r3, [r7, #4]
 2232 0086 1B68     		ldr	r3, [r3]
 2233 0088 1B68     		ldr	r3, [r3]
 2234 008a 03F00403 		and	r3, r3, #4
 2235 008e 002B     		cmp	r3, #0
 2236 0090 14BF     		ite	ne
 2237 0092 0123     		movne	r3, #1
 2238 0094 0023     		moveq	r3, #0
 2239 0096 DBB2     		uxtb	r3, r3
 2240 0098 7B61     		str	r3, [r7, #20]
1210:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* UART noise error interrupt occurred -------------------------------------*/
1211:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if((tmp_flag != RESET) && (tmp_it_source != RESET))
ARM GAS  /tmp/cckhygdq.s 			page 61


 2241              		.loc 1 1211 0
 2242 009a 7B69     		ldr	r3, [r7, #20]
 2243 009c 002B     		cmp	r3, #0
 2244 009e 08D0     		beq	.L121
 2245              		.loc 1 1211 0 is_stmt 0 discriminator 1
 2246 00a0 3B69     		ldr	r3, [r7, #16]
 2247 00a2 002B     		cmp	r3, #0
 2248 00a4 05D0     		beq	.L121
1212:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   { 
1213:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->ErrorCode |= HAL_UART_ERROR_NE;
 2249              		.loc 1 1213 0 is_stmt 1
 2250 00a6 7B68     		ldr	r3, [r7, #4]
 2251 00a8 DB6B     		ldr	r3, [r3, #60]
 2252 00aa 43F00202 		orr	r2, r3, #2
 2253 00ae 7B68     		ldr	r3, [r7, #4]
 2254 00b0 DA63     		str	r2, [r3, #60]
 2255              	.L121:
1214:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
1215:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
1216:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   tmp_flag = __HAL_UART_GET_FLAG(huart, UART_FLAG_ORE);
 2256              		.loc 1 1216 0
 2257 00b2 7B68     		ldr	r3, [r7, #4]
 2258 00b4 1B68     		ldr	r3, [r3]
 2259 00b6 1B68     		ldr	r3, [r3]
 2260 00b8 03F00803 		and	r3, r3, #8
 2261 00bc 002B     		cmp	r3, #0
 2262 00be 14BF     		ite	ne
 2263 00c0 0123     		movne	r3, #1
 2264 00c2 0023     		moveq	r3, #0
 2265 00c4 DBB2     		uxtb	r3, r3
 2266 00c6 7B61     		str	r3, [r7, #20]
1217:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* UART Over-Run interrupt occurred ----------------------------------------*/
1218:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if((tmp_flag != RESET) && (tmp_it_source != RESET))
 2267              		.loc 1 1218 0
 2268 00c8 7B69     		ldr	r3, [r7, #20]
 2269 00ca 002B     		cmp	r3, #0
 2270 00cc 08D0     		beq	.L122
 2271              		.loc 1 1218 0 is_stmt 0 discriminator 1
 2272 00ce 3B69     		ldr	r3, [r7, #16]
 2273 00d0 002B     		cmp	r3, #0
 2274 00d2 05D0     		beq	.L122
1219:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   { 
1220:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->ErrorCode |= HAL_UART_ERROR_ORE;
 2275              		.loc 1 1220 0 is_stmt 1
 2276 00d4 7B68     		ldr	r3, [r7, #4]
 2277 00d6 DB6B     		ldr	r3, [r3, #60]
 2278 00d8 43F00802 		orr	r2, r3, #8
 2279 00dc 7B68     		ldr	r3, [r7, #4]
 2280 00de DA63     		str	r2, [r3, #60]
 2281              	.L122:
1221:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
1222:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
1223:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   tmp_flag = __HAL_UART_GET_FLAG(huart, UART_FLAG_RXNE);
 2282              		.loc 1 1223 0
 2283 00e0 7B68     		ldr	r3, [r7, #4]
 2284 00e2 1B68     		ldr	r3, [r3]
 2285 00e4 1B68     		ldr	r3, [r3]
ARM GAS  /tmp/cckhygdq.s 			page 62


 2286 00e6 03F02003 		and	r3, r3, #32
 2287 00ea 002B     		cmp	r3, #0
 2288 00ec 14BF     		ite	ne
 2289 00ee 0123     		movne	r3, #1
 2290 00f0 0023     		moveq	r3, #0
 2291 00f2 DBB2     		uxtb	r3, r3
 2292 00f4 7B61     		str	r3, [r7, #20]
1224:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   tmp_it_source = __HAL_UART_GET_IT_SOURCE(huart, UART_IT_RXNE);
 2293              		.loc 1 1224 0
 2294 00f6 7B68     		ldr	r3, [r7, #4]
 2295 00f8 1B68     		ldr	r3, [r3]
 2296 00fa DB68     		ldr	r3, [r3, #12]
 2297 00fc 03F02003 		and	r3, r3, #32
 2298 0100 3B61     		str	r3, [r7, #16]
1225:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* UART in mode Receiver ---------------------------------------------------*/
1226:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if((tmp_flag != RESET) && (tmp_it_source != RESET))
 2299              		.loc 1 1226 0
 2300 0102 7B69     		ldr	r3, [r7, #20]
 2301 0104 002B     		cmp	r3, #0
 2302 0106 05D0     		beq	.L123
 2303              		.loc 1 1226 0 is_stmt 0 discriminator 1
 2304 0108 3B69     		ldr	r3, [r7, #16]
 2305 010a 002B     		cmp	r3, #0
 2306 010c 02D0     		beq	.L123
1227:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   { 
1228:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     UART_Receive_IT(huart);
 2307              		.loc 1 1228 0 is_stmt 1
 2308 010e 7868     		ldr	r0, [r7, #4]
 2309 0110 FFF7FEFF 		bl	UART_Receive_IT
 2310              	.L123:
1229:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
1230:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
1231:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   tmp_flag = __HAL_UART_GET_FLAG(huart, UART_FLAG_TXE);
 2311              		.loc 1 1231 0
 2312 0114 7B68     		ldr	r3, [r7, #4]
 2313 0116 1B68     		ldr	r3, [r3]
 2314 0118 1B68     		ldr	r3, [r3]
 2315 011a 03F08003 		and	r3, r3, #128
 2316 011e 002B     		cmp	r3, #0
 2317 0120 14BF     		ite	ne
 2318 0122 0123     		movne	r3, #1
 2319 0124 0023     		moveq	r3, #0
 2320 0126 DBB2     		uxtb	r3, r3
 2321 0128 7B61     		str	r3, [r7, #20]
1232:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   tmp_it_source = __HAL_UART_GET_IT_SOURCE(huart, UART_IT_TXE);
 2322              		.loc 1 1232 0
 2323 012a 7B68     		ldr	r3, [r7, #4]
 2324 012c 1B68     		ldr	r3, [r3]
 2325 012e DB68     		ldr	r3, [r3, #12]
 2326 0130 03F08003 		and	r3, r3, #128
 2327 0134 3B61     		str	r3, [r7, #16]
1233:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* UART in mode Transmitter ------------------------------------------------*/
1234:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if((tmp_flag != RESET) && (tmp_it_source != RESET))
 2328              		.loc 1 1234 0
 2329 0136 7B69     		ldr	r3, [r7, #20]
 2330 0138 002B     		cmp	r3, #0
 2331 013a 05D0     		beq	.L124
ARM GAS  /tmp/cckhygdq.s 			page 63


 2332              		.loc 1 1234 0 is_stmt 0 discriminator 1
 2333 013c 3B69     		ldr	r3, [r7, #16]
 2334 013e 002B     		cmp	r3, #0
 2335 0140 02D0     		beq	.L124
1235:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
1236:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     UART_Transmit_IT(huart);
 2336              		.loc 1 1236 0 is_stmt 1
 2337 0142 7868     		ldr	r0, [r7, #4]
 2338 0144 FFF7FEFF 		bl	UART_Transmit_IT
 2339              	.L124:
1237:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
1238:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1239:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   tmp_flag = __HAL_UART_GET_FLAG(huart, UART_FLAG_TC);
 2340              		.loc 1 1239 0
 2341 0148 7B68     		ldr	r3, [r7, #4]
 2342 014a 1B68     		ldr	r3, [r3]
 2343 014c 1B68     		ldr	r3, [r3]
 2344 014e 03F04003 		and	r3, r3, #64
 2345 0152 002B     		cmp	r3, #0
 2346 0154 14BF     		ite	ne
 2347 0156 0123     		movne	r3, #1
 2348 0158 0023     		moveq	r3, #0
 2349 015a DBB2     		uxtb	r3, r3
 2350 015c 7B61     		str	r3, [r7, #20]
1240:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   tmp_it_source = __HAL_UART_GET_IT_SOURCE(huart, UART_IT_TC);
 2351              		.loc 1 1240 0
 2352 015e 7B68     		ldr	r3, [r7, #4]
 2353 0160 1B68     		ldr	r3, [r3]
 2354 0162 DB68     		ldr	r3, [r3, #12]
 2355 0164 03F04003 		and	r3, r3, #64
 2356 0168 3B61     		str	r3, [r7, #16]
1241:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* UART in mode Transmitter end --------------------------------------------*/
1242:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if((tmp_flag != RESET) && (tmp_it_source != RESET))
 2357              		.loc 1 1242 0
 2358 016a 7B69     		ldr	r3, [r7, #20]
 2359 016c 002B     		cmp	r3, #0
 2360 016e 05D0     		beq	.L125
 2361              		.loc 1 1242 0 is_stmt 0 discriminator 1
 2362 0170 3B69     		ldr	r3, [r7, #16]
 2363 0172 002B     		cmp	r3, #0
 2364 0174 02D0     		beq	.L125
1243:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
1244:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     UART_EndTransmit_IT(huart);
 2365              		.loc 1 1244 0 is_stmt 1
 2366 0176 7868     		ldr	r0, [r7, #4]
 2367 0178 FFF7FEFF 		bl	UART_EndTransmit_IT
 2368              	.L125:
1245:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }  
1246:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1247:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if(huart->ErrorCode != HAL_UART_ERROR_NONE)
 2369              		.loc 1 1247 0
 2370 017c 7B68     		ldr	r3, [r7, #4]
 2371 017e DB6B     		ldr	r3, [r3, #60]
 2372 0180 002B     		cmp	r3, #0
 2373 0182 0FD0     		beq	.L118
 2374              	.LBB4:
1248:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
ARM GAS  /tmp/cckhygdq.s 			page 64


1249:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Clear all the error flag at once */
1250:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     __HAL_UART_CLEAR_PEFLAG(huart);
 2375              		.loc 1 1250 0
 2376 0184 7B68     		ldr	r3, [r7, #4]
 2377 0186 1B68     		ldr	r3, [r3]
 2378 0188 1B68     		ldr	r3, [r3]
 2379 018a FB60     		str	r3, [r7, #12]
 2380 018c 7B68     		ldr	r3, [r7, #4]
 2381 018e 1B68     		ldr	r3, [r3]
 2382 0190 5B68     		ldr	r3, [r3, #4]
 2383 0192 FB60     		str	r3, [r7, #12]
 2384 0194 FB68     		ldr	r3, [r7, #12]
 2385              	.LBE4:
1251:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     
1252:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Set the UART state ready to be able to start again the process */
1253:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->State = HAL_UART_STATE_READY;
 2386              		.loc 1 1253 0
 2387 0196 7B68     		ldr	r3, [r7, #4]
 2388 0198 0122     		movs	r2, #1
 2389 019a 83F83920 		strb	r2, [r3, #57]
1254:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     
1255:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     HAL_UART_ErrorCallback(huart);
 2390              		.loc 1 1255 0
 2391 019e 7868     		ldr	r0, [r7, #4]
 2392 01a0 FFF7FEFF 		bl	HAL_UART_ErrorCallback
 2393              	.L118:
1256:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }  
1257:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
 2394              		.loc 1 1257 0
 2395 01a4 1837     		adds	r7, r7, #24
 2396              	.LCFI89:
 2397              		.cfi_def_cfa_offset 8
 2398 01a6 BD46     		mov	sp, r7
 2399              	.LCFI90:
 2400              		.cfi_def_cfa_register 13
 2401              		@ sp needed
 2402 01a8 80BD     		pop	{r7, pc}
 2403              		.cfi_endproc
 2404              	.LFE79:
 2406              		.section	.text.HAL_UART_TxCpltCallback,"ax",%progbits
 2407              		.align	2
 2408              		.weak	HAL_UART_TxCpltCallback
 2409              		.thumb
 2410              		.thumb_func
 2412              	HAL_UART_TxCpltCallback:
 2413              	.LFB80:
1258:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1259:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
1260:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief  Tx Transfer completed callbacks.
1261:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  huart: Pointer to a UART_HandleTypeDef structure that contains
1262:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *                the configuration information for the specified UART module.
1263:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval None
1264:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
1265:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****  __weak void HAL_UART_TxCpltCallback(UART_HandleTypeDef *huart)
1266:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
 2414              		.loc 1 1266 0
 2415              		.cfi_startproc
ARM GAS  /tmp/cckhygdq.s 			page 65


 2416              		@ args = 0, pretend = 0, frame = 8
 2417              		@ frame_needed = 1, uses_anonymous_args = 0
 2418              		@ link register save eliminated.
 2419 0000 80B4     		push	{r7}
 2420              	.LCFI91:
 2421              		.cfi_def_cfa_offset 4
 2422              		.cfi_offset 7, -4
 2423 0002 83B0     		sub	sp, sp, #12
 2424              	.LCFI92:
 2425              		.cfi_def_cfa_offset 16
 2426 0004 00AF     		add	r7, sp, #0
 2427              	.LCFI93:
 2428              		.cfi_def_cfa_register 7
 2429 0006 7860     		str	r0, [r7, #4]
1267:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
1268:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   UNUSED(huart);
1269:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* NOTE: This function should not be modified, when the callback is needed,
1270:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****            the HAL_UART_TxCpltCallback can be implemented in the user file
1271:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****    */ 
1272:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
 2430              		.loc 1 1272 0
 2431 0008 0C37     		adds	r7, r7, #12
 2432              	.LCFI94:
 2433              		.cfi_def_cfa_offset 4
 2434 000a BD46     		mov	sp, r7
 2435              	.LCFI95:
 2436              		.cfi_def_cfa_register 13
 2437              		@ sp needed
 2438 000c 5DF8047B 		ldr	r7, [sp], #4
 2439              	.LCFI96:
 2440              		.cfi_restore 7
 2441              		.cfi_def_cfa_offset 0
 2442 0010 7047     		bx	lr
 2443              		.cfi_endproc
 2444              	.LFE80:
 2446 0012 00BF     		.section	.text.HAL_UART_TxHalfCpltCallback,"ax",%progbits
 2447              		.align	2
 2448              		.weak	HAL_UART_TxHalfCpltCallback
 2449              		.thumb
 2450              		.thumb_func
 2452              	HAL_UART_TxHalfCpltCallback:
 2453              	.LFB81:
1273:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1274:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
1275:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief  Tx Half Transfer completed callbacks.
1276:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  huart: Pointer to a UART_HandleTypeDef structure that contains
1277:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *                the configuration information for the specified UART module.
1278:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval None
1279:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
1280:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****  __weak void HAL_UART_TxHalfCpltCallback(UART_HandleTypeDef *huart)
1281:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
 2454              		.loc 1 1281 0
 2455              		.cfi_startproc
 2456              		@ args = 0, pretend = 0, frame = 8
 2457              		@ frame_needed = 1, uses_anonymous_args = 0
 2458              		@ link register save eliminated.
 2459 0000 80B4     		push	{r7}
ARM GAS  /tmp/cckhygdq.s 			page 66


 2460              	.LCFI97:
 2461              		.cfi_def_cfa_offset 4
 2462              		.cfi_offset 7, -4
 2463 0002 83B0     		sub	sp, sp, #12
 2464              	.LCFI98:
 2465              		.cfi_def_cfa_offset 16
 2466 0004 00AF     		add	r7, sp, #0
 2467              	.LCFI99:
 2468              		.cfi_def_cfa_register 7
 2469 0006 7860     		str	r0, [r7, #4]
1282:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
1283:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   UNUSED(huart);
1284:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* NOTE: This function should not be modified, when the callback is needed,
1285:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****            the HAL_UART_TxHalfCpltCallback can be implemented in the user file
1286:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****    */ 
1287:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
 2470              		.loc 1 1287 0
 2471 0008 0C37     		adds	r7, r7, #12
 2472              	.LCFI100:
 2473              		.cfi_def_cfa_offset 4
 2474 000a BD46     		mov	sp, r7
 2475              	.LCFI101:
 2476              		.cfi_def_cfa_register 13
 2477              		@ sp needed
 2478 000c 5DF8047B 		ldr	r7, [sp], #4
 2479              	.LCFI102:
 2480              		.cfi_restore 7
 2481              		.cfi_def_cfa_offset 0
 2482 0010 7047     		bx	lr
 2483              		.cfi_endproc
 2484              	.LFE81:
 2486 0012 00BF     		.section	.text.HAL_UART_RxCpltCallback,"ax",%progbits
 2487              		.align	2
 2488              		.weak	HAL_UART_RxCpltCallback
 2489              		.thumb
 2490              		.thumb_func
 2492              	HAL_UART_RxCpltCallback:
 2493              	.LFB82:
1288:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1289:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
1290:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief  Rx Transfer completed callbacks.
1291:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  huart: Pointer to a UART_HandleTypeDef structure that contains
1292:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *                the configuration information for the specified UART module.
1293:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval None
1294:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
1295:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** __weak void HAL_UART_RxCpltCallback(UART_HandleTypeDef *huart)
1296:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
 2494              		.loc 1 1296 0
 2495              		.cfi_startproc
 2496              		@ args = 0, pretend = 0, frame = 8
 2497              		@ frame_needed = 1, uses_anonymous_args = 0
 2498              		@ link register save eliminated.
 2499 0000 80B4     		push	{r7}
 2500              	.LCFI103:
 2501              		.cfi_def_cfa_offset 4
 2502              		.cfi_offset 7, -4
 2503 0002 83B0     		sub	sp, sp, #12
ARM GAS  /tmp/cckhygdq.s 			page 67


 2504              	.LCFI104:
 2505              		.cfi_def_cfa_offset 16
 2506 0004 00AF     		add	r7, sp, #0
 2507              	.LCFI105:
 2508              		.cfi_def_cfa_register 7
 2509 0006 7860     		str	r0, [r7, #4]
1297:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
1298:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   UNUSED(huart);
1299:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* NOTE: This function should not be modified, when the callback is needed,
1300:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****            the HAL_UART_RxCpltCallback can be implemented in the user file
1301:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****    */
1302:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
 2510              		.loc 1 1302 0
 2511 0008 0C37     		adds	r7, r7, #12
 2512              	.LCFI106:
 2513              		.cfi_def_cfa_offset 4
 2514 000a BD46     		mov	sp, r7
 2515              	.LCFI107:
 2516              		.cfi_def_cfa_register 13
 2517              		@ sp needed
 2518 000c 5DF8047B 		ldr	r7, [sp], #4
 2519              	.LCFI108:
 2520              		.cfi_restore 7
 2521              		.cfi_def_cfa_offset 0
 2522 0010 7047     		bx	lr
 2523              		.cfi_endproc
 2524              	.LFE82:
 2526 0012 00BF     		.section	.text.HAL_UART_RxHalfCpltCallback,"ax",%progbits
 2527              		.align	2
 2528              		.weak	HAL_UART_RxHalfCpltCallback
 2529              		.thumb
 2530              		.thumb_func
 2532              	HAL_UART_RxHalfCpltCallback:
 2533              	.LFB83:
1303:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1304:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
1305:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief  Rx Half Transfer completed callbacks.
1306:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  huart: Pointer to a UART_HandleTypeDef structure that contains
1307:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *                the configuration information for the specified UART module.
1308:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval None
1309:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
1310:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** __weak void HAL_UART_RxHalfCpltCallback(UART_HandleTypeDef *huart)
1311:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
 2534              		.loc 1 1311 0
 2535              		.cfi_startproc
 2536              		@ args = 0, pretend = 0, frame = 8
 2537              		@ frame_needed = 1, uses_anonymous_args = 0
 2538              		@ link register save eliminated.
 2539 0000 80B4     		push	{r7}
 2540              	.LCFI109:
 2541              		.cfi_def_cfa_offset 4
 2542              		.cfi_offset 7, -4
 2543 0002 83B0     		sub	sp, sp, #12
 2544              	.LCFI110:
 2545              		.cfi_def_cfa_offset 16
 2546 0004 00AF     		add	r7, sp, #0
 2547              	.LCFI111:
ARM GAS  /tmp/cckhygdq.s 			page 68


 2548              		.cfi_def_cfa_register 7
 2549 0006 7860     		str	r0, [r7, #4]
1312:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
1313:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   UNUSED(huart);
1314:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* NOTE: This function should not be modified, when the callback is needed,
1315:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****            the HAL_UART_RxHalfCpltCallback can be implemented in the user file
1316:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****    */
1317:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
 2550              		.loc 1 1317 0
 2551 0008 0C37     		adds	r7, r7, #12
 2552              	.LCFI112:
 2553              		.cfi_def_cfa_offset 4
 2554 000a BD46     		mov	sp, r7
 2555              	.LCFI113:
 2556              		.cfi_def_cfa_register 13
 2557              		@ sp needed
 2558 000c 5DF8047B 		ldr	r7, [sp], #4
 2559              	.LCFI114:
 2560              		.cfi_restore 7
 2561              		.cfi_def_cfa_offset 0
 2562 0010 7047     		bx	lr
 2563              		.cfi_endproc
 2564              	.LFE83:
 2566 0012 00BF     		.section	.text.HAL_UART_ErrorCallback,"ax",%progbits
 2567              		.align	2
 2568              		.weak	HAL_UART_ErrorCallback
 2569              		.thumb
 2570              		.thumb_func
 2572              	HAL_UART_ErrorCallback:
 2573              	.LFB84:
1318:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1319:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
1320:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief  UART error callbacks.
1321:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  huart: Pointer to a UART_HandleTypeDef structure that contains
1322:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *                the configuration information for the specified UART module.
1323:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval None
1324:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
1325:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****  __weak void HAL_UART_ErrorCallback(UART_HandleTypeDef *huart)
1326:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
 2574              		.loc 1 1326 0
 2575              		.cfi_startproc
 2576              		@ args = 0, pretend = 0, frame = 8
 2577              		@ frame_needed = 1, uses_anonymous_args = 0
 2578              		@ link register save eliminated.
 2579 0000 80B4     		push	{r7}
 2580              	.LCFI115:
 2581              		.cfi_def_cfa_offset 4
 2582              		.cfi_offset 7, -4
 2583 0002 83B0     		sub	sp, sp, #12
 2584              	.LCFI116:
 2585              		.cfi_def_cfa_offset 16
 2586 0004 00AF     		add	r7, sp, #0
 2587              	.LCFI117:
 2588              		.cfi_def_cfa_register 7
 2589 0006 7860     		str	r0, [r7, #4]
1327:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
1328:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   UNUSED(huart);
ARM GAS  /tmp/cckhygdq.s 			page 69


1329:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* NOTE: This function should not be modified, when the callback is needed,
1330:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****            the HAL_UART_ErrorCallback can be implemented in the user file
1331:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****    */ 
1332:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
 2590              		.loc 1 1332 0
 2591 0008 0C37     		adds	r7, r7, #12
 2592              	.LCFI118:
 2593              		.cfi_def_cfa_offset 4
 2594 000a BD46     		mov	sp, r7
 2595              	.LCFI119:
 2596              		.cfi_def_cfa_register 13
 2597              		@ sp needed
 2598 000c 5DF8047B 		ldr	r7, [sp], #4
 2599              	.LCFI120:
 2600              		.cfi_restore 7
 2601              		.cfi_def_cfa_offset 0
 2602 0010 7047     		bx	lr
 2603              		.cfi_endproc
 2604              	.LFE84:
 2606 0012 00BF     		.section	.text.HAL_LIN_SendBreak,"ax",%progbits
 2607              		.align	2
 2608              		.global	HAL_LIN_SendBreak
 2609              		.thumb
 2610              		.thumb_func
 2612              	HAL_LIN_SendBreak:
 2613              	.LFB85:
1333:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1334:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
1335:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @}
1336:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
1337:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1338:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /** @defgroup UART_Exported_Functions_Group3 Peripheral Control functions 
1339:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *  @brief   UART control functions 
1340:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *
1341:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** @verbatim   
1342:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   ==============================================================================
1343:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****                       ##### Peripheral Control functions #####
1344:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   ==============================================================================  
1345:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   [..]
1346:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     This subsection provides a set of functions allowing to control the UART:
1347:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     (+) HAL_LIN_SendBreak() API can be helpful to transmit the break character.
1348:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     (+) HAL_MultiProcessor_EnterMuteMode() API can be helpful to enter the UART in mute mode. 
1349:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     (+) HAL_MultiProcessor_ExitMuteMode() API can be helpful to exit the UART mute mode by software
1350:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     (+) HAL_HalfDuplex_EnableTransmitter() API to enable the UART transmitter and disables the UART
1351:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     (+) HAL_HalfDuplex_EnableReceiver() API to enable the UART receiver and disables the UART trans
1352:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     
1353:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** @endverbatim
1354:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @{
1355:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
1356:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1357:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
1358:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief  Transmits break characters.
1359:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  huart: Pointer to a UART_HandleTypeDef structure that contains
1360:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *                the configuration information for the specified UART module.
1361:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval HAL status
1362:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
1363:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** HAL_StatusTypeDef HAL_LIN_SendBreak(UART_HandleTypeDef *huart)
ARM GAS  /tmp/cckhygdq.s 			page 70


1364:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
 2614              		.loc 1 1364 0
 2615              		.cfi_startproc
 2616              		@ args = 0, pretend = 0, frame = 8
 2617              		@ frame_needed = 1, uses_anonymous_args = 0
 2618              		@ link register save eliminated.
 2619 0000 80B4     		push	{r7}
 2620              	.LCFI121:
 2621              		.cfi_def_cfa_offset 4
 2622              		.cfi_offset 7, -4
 2623 0002 83B0     		sub	sp, sp, #12
 2624              	.LCFI122:
 2625              		.cfi_def_cfa_offset 16
 2626 0004 00AF     		add	r7, sp, #0
 2627              	.LCFI123:
 2628              		.cfi_def_cfa_register 7
 2629 0006 7860     		str	r0, [r7, #4]
1365:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Check the parameters */
1366:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   assert_param(IS_UART_INSTANCE(huart->Instance));
1367:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
1368:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Process Locked */
1369:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   __HAL_LOCK(huart);
 2630              		.loc 1 1369 0
 2631 0008 7B68     		ldr	r3, [r7, #4]
 2632 000a 93F83830 		ldrb	r3, [r3, #56]	@ zero_extendqisi2
 2633 000e 012B     		cmp	r3, #1
 2634 0010 01D1     		bne	.L133
 2635              		.loc 1 1369 0 is_stmt 0 discriminator 1
 2636 0012 0223     		movs	r3, #2
 2637 0014 18E0     		b	.L134
 2638              	.L133:
 2639              		.loc 1 1369 0 discriminator 2
 2640 0016 7B68     		ldr	r3, [r7, #4]
 2641 0018 0122     		movs	r2, #1
 2642 001a 83F83820 		strb	r2, [r3, #56]
1370:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
1371:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->State = HAL_UART_STATE_BUSY;
 2643              		.loc 1 1371 0 is_stmt 1 discriminator 2
 2644 001e 7B68     		ldr	r3, [r7, #4]
 2645 0020 0222     		movs	r2, #2
 2646 0022 83F83920 		strb	r2, [r3, #57]
1372:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
1373:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Send break characters */
1374:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   SET_BIT(huart->Instance->CR1, USART_CR1_SBK);
 2647              		.loc 1 1374 0 discriminator 2
 2648 0026 7B68     		ldr	r3, [r7, #4]
 2649 0028 1B68     		ldr	r3, [r3]
 2650 002a 7A68     		ldr	r2, [r7, #4]
 2651 002c 1268     		ldr	r2, [r2]
 2652 002e D268     		ldr	r2, [r2, #12]
 2653 0030 42F00102 		orr	r2, r2, #1
 2654 0034 DA60     		str	r2, [r3, #12]
1375:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****  
1376:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->State = HAL_UART_STATE_READY;
 2655              		.loc 1 1376 0 discriminator 2
 2656 0036 7B68     		ldr	r3, [r7, #4]
 2657 0038 0122     		movs	r2, #1
ARM GAS  /tmp/cckhygdq.s 			page 71


 2658 003a 83F83920 		strb	r2, [r3, #57]
1377:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
1378:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Process Unlocked */
1379:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   __HAL_UNLOCK(huart);
 2659              		.loc 1 1379 0 discriminator 2
 2660 003e 7B68     		ldr	r3, [r7, #4]
 2661 0040 0022     		movs	r2, #0
 2662 0042 83F83820 		strb	r2, [r3, #56]
1380:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
1381:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   return HAL_OK; 
 2663              		.loc 1 1381 0 discriminator 2
 2664 0046 0023     		movs	r3, #0
 2665              	.L134:
1382:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
 2666              		.loc 1 1382 0
 2667 0048 1846     		mov	r0, r3
 2668 004a 0C37     		adds	r7, r7, #12
 2669              	.LCFI124:
 2670              		.cfi_def_cfa_offset 4
 2671 004c BD46     		mov	sp, r7
 2672              	.LCFI125:
 2673              		.cfi_def_cfa_register 13
 2674              		@ sp needed
 2675 004e 5DF8047B 		ldr	r7, [sp], #4
 2676              	.LCFI126:
 2677              		.cfi_restore 7
 2678              		.cfi_def_cfa_offset 0
 2679 0052 7047     		bx	lr
 2680              		.cfi_endproc
 2681              	.LFE85:
 2683              		.section	.text.HAL_MultiProcessor_EnterMuteMode,"ax",%progbits
 2684              		.align	2
 2685              		.global	HAL_MultiProcessor_EnterMuteMode
 2686              		.thumb
 2687              		.thumb_func
 2689              	HAL_MultiProcessor_EnterMuteMode:
 2690              	.LFB86:
1383:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1384:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
1385:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief  Enters the UART in mute mode. 
1386:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  huart: Pointer to a UART_HandleTypeDef structure that contains
1387:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *                the configuration information for the specified UART module.
1388:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval HAL status
1389:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
1390:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** HAL_StatusTypeDef HAL_MultiProcessor_EnterMuteMode(UART_HandleTypeDef *huart)
1391:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
 2691              		.loc 1 1391 0
 2692              		.cfi_startproc
 2693              		@ args = 0, pretend = 0, frame = 8
 2694              		@ frame_needed = 1, uses_anonymous_args = 0
 2695              		@ link register save eliminated.
 2696 0000 80B4     		push	{r7}
 2697              	.LCFI127:
 2698              		.cfi_def_cfa_offset 4
 2699              		.cfi_offset 7, -4
 2700 0002 83B0     		sub	sp, sp, #12
 2701              	.LCFI128:
ARM GAS  /tmp/cckhygdq.s 			page 72


 2702              		.cfi_def_cfa_offset 16
 2703 0004 00AF     		add	r7, sp, #0
 2704              	.LCFI129:
 2705              		.cfi_def_cfa_register 7
 2706 0006 7860     		str	r0, [r7, #4]
1392:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Check the parameters */
1393:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   assert_param(IS_UART_INSTANCE(huart->Instance));
1394:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
1395:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Process Locked */
1396:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   __HAL_LOCK(huart);
 2707              		.loc 1 1396 0
 2708 0008 7B68     		ldr	r3, [r7, #4]
 2709 000a 93F83830 		ldrb	r3, [r3, #56]	@ zero_extendqisi2
 2710 000e 012B     		cmp	r3, #1
 2711 0010 01D1     		bne	.L136
 2712              		.loc 1 1396 0 is_stmt 0 discriminator 1
 2713 0012 0223     		movs	r3, #2
 2714 0014 18E0     		b	.L137
 2715              	.L136:
 2716              		.loc 1 1396 0 discriminator 2
 2717 0016 7B68     		ldr	r3, [r7, #4]
 2718 0018 0122     		movs	r2, #1
 2719 001a 83F83820 		strb	r2, [r3, #56]
1397:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
1398:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->State = HAL_UART_STATE_BUSY;
 2720              		.loc 1 1398 0 is_stmt 1 discriminator 2
 2721 001e 7B68     		ldr	r3, [r7, #4]
 2722 0020 0222     		movs	r2, #2
 2723 0022 83F83920 		strb	r2, [r3, #57]
1399:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
1400:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Enable the USART mute mode  by setting the RWU bit in the CR1 register */
1401:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   SET_BIT(huart->Instance->CR1, USART_CR1_RWU);
 2724              		.loc 1 1401 0 discriminator 2
 2725 0026 7B68     		ldr	r3, [r7, #4]
 2726 0028 1B68     		ldr	r3, [r3]
 2727 002a 7A68     		ldr	r2, [r7, #4]
 2728 002c 1268     		ldr	r2, [r2]
 2729 002e D268     		ldr	r2, [r2, #12]
 2730 0030 42F00202 		orr	r2, r2, #2
 2731 0034 DA60     		str	r2, [r3, #12]
1402:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
1403:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->State = HAL_UART_STATE_READY;
 2732              		.loc 1 1403 0 discriminator 2
 2733 0036 7B68     		ldr	r3, [r7, #4]
 2734 0038 0122     		movs	r2, #1
 2735 003a 83F83920 		strb	r2, [r3, #57]
1404:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
1405:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Process Unlocked */
1406:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   __HAL_UNLOCK(huart);
 2736              		.loc 1 1406 0 discriminator 2
 2737 003e 7B68     		ldr	r3, [r7, #4]
 2738 0040 0022     		movs	r2, #0
 2739 0042 83F83820 		strb	r2, [r3, #56]
1407:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
1408:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   return HAL_OK; 
 2740              		.loc 1 1408 0 discriminator 2
 2741 0046 0023     		movs	r3, #0
ARM GAS  /tmp/cckhygdq.s 			page 73


 2742              	.L137:
1409:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
 2743              		.loc 1 1409 0
 2744 0048 1846     		mov	r0, r3
 2745 004a 0C37     		adds	r7, r7, #12
 2746              	.LCFI130:
 2747              		.cfi_def_cfa_offset 4
 2748 004c BD46     		mov	sp, r7
 2749              	.LCFI131:
 2750              		.cfi_def_cfa_register 13
 2751              		@ sp needed
 2752 004e 5DF8047B 		ldr	r7, [sp], #4
 2753              	.LCFI132:
 2754              		.cfi_restore 7
 2755              		.cfi_def_cfa_offset 0
 2756 0052 7047     		bx	lr
 2757              		.cfi_endproc
 2758              	.LFE86:
 2760              		.section	.text.HAL_MultiProcessor_ExitMuteMode,"ax",%progbits
 2761              		.align	2
 2762              		.global	HAL_MultiProcessor_ExitMuteMode
 2763              		.thumb
 2764              		.thumb_func
 2766              	HAL_MultiProcessor_ExitMuteMode:
 2767              	.LFB87:
1410:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1411:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
1412:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief  Exits the UART mute mode: wake up software. 
1413:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  huart: Pointer to a UART_HandleTypeDef structure that contains
1414:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *                the configuration information for the specified UART module.
1415:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval HAL status
1416:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
1417:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** HAL_StatusTypeDef HAL_MultiProcessor_ExitMuteMode(UART_HandleTypeDef *huart)
1418:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
 2768              		.loc 1 1418 0
 2769              		.cfi_startproc
 2770              		@ args = 0, pretend = 0, frame = 8
 2771              		@ frame_needed = 1, uses_anonymous_args = 0
 2772              		@ link register save eliminated.
 2773 0000 80B4     		push	{r7}
 2774              	.LCFI133:
 2775              		.cfi_def_cfa_offset 4
 2776              		.cfi_offset 7, -4
 2777 0002 83B0     		sub	sp, sp, #12
 2778              	.LCFI134:
 2779              		.cfi_def_cfa_offset 16
 2780 0004 00AF     		add	r7, sp, #0
 2781              	.LCFI135:
 2782              		.cfi_def_cfa_register 7
 2783 0006 7860     		str	r0, [r7, #4]
1419:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Check the parameters */
1420:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   assert_param(IS_UART_INSTANCE(huart->Instance));
1421:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
1422:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Process Locked */
1423:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   __HAL_LOCK(huart);
 2784              		.loc 1 1423 0
 2785 0008 7B68     		ldr	r3, [r7, #4]
ARM GAS  /tmp/cckhygdq.s 			page 74


 2786 000a 93F83830 		ldrb	r3, [r3, #56]	@ zero_extendqisi2
 2787 000e 012B     		cmp	r3, #1
 2788 0010 01D1     		bne	.L139
 2789              		.loc 1 1423 0 is_stmt 0 discriminator 1
 2790 0012 0223     		movs	r3, #2
 2791 0014 18E0     		b	.L140
 2792              	.L139:
 2793              		.loc 1 1423 0 discriminator 2
 2794 0016 7B68     		ldr	r3, [r7, #4]
 2795 0018 0122     		movs	r2, #1
 2796 001a 83F83820 		strb	r2, [r3, #56]
1424:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
1425:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->State = HAL_UART_STATE_BUSY;
 2797              		.loc 1 1425 0 is_stmt 1 discriminator 2
 2798 001e 7B68     		ldr	r3, [r7, #4]
 2799 0020 0222     		movs	r2, #2
 2800 0022 83F83920 		strb	r2, [r3, #57]
1426:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
1427:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Disable the USART mute mode by clearing the RWU bit in the CR1 register */
1428:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, USART_CR1_RWU);
 2801              		.loc 1 1428 0 discriminator 2
 2802 0026 7B68     		ldr	r3, [r7, #4]
 2803 0028 1B68     		ldr	r3, [r3]
 2804 002a 7A68     		ldr	r2, [r7, #4]
 2805 002c 1268     		ldr	r2, [r2]
 2806 002e D268     		ldr	r2, [r2, #12]
 2807 0030 22F00202 		bic	r2, r2, #2
 2808 0034 DA60     		str	r2, [r3, #12]
1429:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
1430:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->State = HAL_UART_STATE_READY;
 2809              		.loc 1 1430 0 discriminator 2
 2810 0036 7B68     		ldr	r3, [r7, #4]
 2811 0038 0122     		movs	r2, #1
 2812 003a 83F83920 		strb	r2, [r3, #57]
1431:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
1432:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Process Unlocked */
1433:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   __HAL_UNLOCK(huart);
 2813              		.loc 1 1433 0 discriminator 2
 2814 003e 7B68     		ldr	r3, [r7, #4]
 2815 0040 0022     		movs	r2, #0
 2816 0042 83F83820 		strb	r2, [r3, #56]
1434:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
1435:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   return HAL_OK; 
 2817              		.loc 1 1435 0 discriminator 2
 2818 0046 0023     		movs	r3, #0
 2819              	.L140:
1436:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
 2820              		.loc 1 1436 0
 2821 0048 1846     		mov	r0, r3
 2822 004a 0C37     		adds	r7, r7, #12
 2823              	.LCFI136:
 2824              		.cfi_def_cfa_offset 4
 2825 004c BD46     		mov	sp, r7
 2826              	.LCFI137:
 2827              		.cfi_def_cfa_register 13
 2828              		@ sp needed
 2829 004e 5DF8047B 		ldr	r7, [sp], #4
ARM GAS  /tmp/cckhygdq.s 			page 75


 2830              	.LCFI138:
 2831              		.cfi_restore 7
 2832              		.cfi_def_cfa_offset 0
 2833 0052 7047     		bx	lr
 2834              		.cfi_endproc
 2835              	.LFE87:
 2837              		.section	.text.HAL_HalfDuplex_EnableTransmitter,"ax",%progbits
 2838              		.align	2
 2839              		.global	HAL_HalfDuplex_EnableTransmitter
 2840              		.thumb
 2841              		.thumb_func
 2843              	HAL_HalfDuplex_EnableTransmitter:
 2844              	.LFB88:
1437:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1438:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
1439:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief  Enables the UART transmitter and disables the UART receiver.
1440:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  huart: Pointer to a UART_HandleTypeDef structure that contains
1441:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *                the configuration information for the specified UART module.
1442:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval HAL status
1443:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
1444:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** HAL_StatusTypeDef HAL_HalfDuplex_EnableTransmitter(UART_HandleTypeDef *huart)
1445:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
 2845              		.loc 1 1445 0
 2846              		.cfi_startproc
 2847              		@ args = 0, pretend = 0, frame = 8
 2848              		@ frame_needed = 1, uses_anonymous_args = 0
 2849              		@ link register save eliminated.
 2850 0000 80B4     		push	{r7}
 2851              	.LCFI139:
 2852              		.cfi_def_cfa_offset 4
 2853              		.cfi_offset 7, -4
 2854 0002 83B0     		sub	sp, sp, #12
 2855              	.LCFI140:
 2856              		.cfi_def_cfa_offset 16
 2857 0004 00AF     		add	r7, sp, #0
 2858              	.LCFI141:
 2859              		.cfi_def_cfa_register 7
 2860 0006 7860     		str	r0, [r7, #4]
1446:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Process Locked */
1447:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   __HAL_LOCK(huart);
 2861              		.loc 1 1447 0
 2862 0008 7B68     		ldr	r3, [r7, #4]
 2863 000a 93F83830 		ldrb	r3, [r3, #56]	@ zero_extendqisi2
 2864 000e 012B     		cmp	r3, #1
 2865 0010 01D1     		bne	.L142
 2866              		.loc 1 1447 0 is_stmt 0 discriminator 1
 2867 0012 0223     		movs	r3, #2
 2868 0014 1AE0     		b	.L143
 2869              	.L142:
 2870              		.loc 1 1447 0 discriminator 2
 2871 0016 7B68     		ldr	r3, [r7, #4]
 2872 0018 0122     		movs	r2, #1
 2873 001a 83F83820 		strb	r2, [r3, #56]
1448:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
1449:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->State = HAL_UART_STATE_BUSY;
 2874              		.loc 1 1449 0 is_stmt 1 discriminator 2
 2875 001e 7B68     		ldr	r3, [r7, #4]
ARM GAS  /tmp/cckhygdq.s 			page 76


 2876 0020 0222     		movs	r2, #2
 2877 0022 83F83920 		strb	r2, [r3, #57]
1450:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1451:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /*-------------------------- USART CR1 Configuration -----------------------*/
1452:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Clear TE and RE bits */
1453:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Enable the USART's transmit interface by setting the TE bit in the USART CR1 register */
1454:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR1, (uint32_t)(USART_CR1_TE | USART_CR1_RE), USART_CR1_TE);
 2878              		.loc 1 1454 0 discriminator 2
 2879 0026 7B68     		ldr	r3, [r7, #4]
 2880 0028 1B68     		ldr	r3, [r3]
 2881 002a 7A68     		ldr	r2, [r7, #4]
 2882 002c 1268     		ldr	r2, [r2]
 2883 002e D268     		ldr	r2, [r2, #12]
 2884 0030 22F00C02 		bic	r2, r2, #12
 2885 0034 42F00802 		orr	r2, r2, #8
 2886 0038 DA60     		str	r2, [r3, #12]
1455:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****  
1456:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->State = HAL_UART_STATE_READY;
 2887              		.loc 1 1456 0 discriminator 2
 2888 003a 7B68     		ldr	r3, [r7, #4]
 2889 003c 0122     		movs	r2, #1
 2890 003e 83F83920 		strb	r2, [r3, #57]
1457:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
1458:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Process Unlocked */
1459:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   __HAL_UNLOCK(huart);
 2891              		.loc 1 1459 0 discriminator 2
 2892 0042 7B68     		ldr	r3, [r7, #4]
 2893 0044 0022     		movs	r2, #0
 2894 0046 83F83820 		strb	r2, [r3, #56]
1460:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
1461:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   return HAL_OK; 
 2895              		.loc 1 1461 0 discriminator 2
 2896 004a 0023     		movs	r3, #0
 2897              	.L143:
1462:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
 2898              		.loc 1 1462 0
 2899 004c 1846     		mov	r0, r3
 2900 004e 0C37     		adds	r7, r7, #12
 2901              	.LCFI142:
 2902              		.cfi_def_cfa_offset 4
 2903 0050 BD46     		mov	sp, r7
 2904              	.LCFI143:
 2905              		.cfi_def_cfa_register 13
 2906              		@ sp needed
 2907 0052 5DF8047B 		ldr	r7, [sp], #4
 2908              	.LCFI144:
 2909              		.cfi_restore 7
 2910              		.cfi_def_cfa_offset 0
 2911 0056 7047     		bx	lr
 2912              		.cfi_endproc
 2913              	.LFE88:
 2915              		.section	.text.HAL_HalfDuplex_EnableReceiver,"ax",%progbits
 2916              		.align	2
 2917              		.global	HAL_HalfDuplex_EnableReceiver
 2918              		.thumb
 2919              		.thumb_func
 2921              	HAL_HalfDuplex_EnableReceiver:
ARM GAS  /tmp/cckhygdq.s 			page 77


 2922              	.LFB89:
1463:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1464:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
1465:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief  Enables the UART receiver and disables the UART transmitter.
1466:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  huart: Pointer to a UART_HandleTypeDef structure that contains
1467:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *                the configuration information for the specified UART module.
1468:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval HAL status
1469:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
1470:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** HAL_StatusTypeDef HAL_HalfDuplex_EnableReceiver(UART_HandleTypeDef *huart)
1471:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
 2923              		.loc 1 1471 0
 2924              		.cfi_startproc
 2925              		@ args = 0, pretend = 0, frame = 8
 2926              		@ frame_needed = 1, uses_anonymous_args = 0
 2927              		@ link register save eliminated.
 2928 0000 80B4     		push	{r7}
 2929              	.LCFI145:
 2930              		.cfi_def_cfa_offset 4
 2931              		.cfi_offset 7, -4
 2932 0002 83B0     		sub	sp, sp, #12
 2933              	.LCFI146:
 2934              		.cfi_def_cfa_offset 16
 2935 0004 00AF     		add	r7, sp, #0
 2936              	.LCFI147:
 2937              		.cfi_def_cfa_register 7
 2938 0006 7860     		str	r0, [r7, #4]
1472:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Process Locked */
1473:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   __HAL_LOCK(huart);
 2939              		.loc 1 1473 0
 2940 0008 7B68     		ldr	r3, [r7, #4]
 2941 000a 93F83830 		ldrb	r3, [r3, #56]	@ zero_extendqisi2
 2942 000e 012B     		cmp	r3, #1
 2943 0010 01D1     		bne	.L145
 2944              		.loc 1 1473 0 is_stmt 0 discriminator 1
 2945 0012 0223     		movs	r3, #2
 2946 0014 1AE0     		b	.L146
 2947              	.L145:
 2948              		.loc 1 1473 0 discriminator 2
 2949 0016 7B68     		ldr	r3, [r7, #4]
 2950 0018 0122     		movs	r2, #1
 2951 001a 83F83820 		strb	r2, [r3, #56]
1474:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
1475:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->State = HAL_UART_STATE_BUSY;
 2952              		.loc 1 1475 0 is_stmt 1 discriminator 2
 2953 001e 7B68     		ldr	r3, [r7, #4]
 2954 0020 0222     		movs	r2, #2
 2955 0022 83F83920 		strb	r2, [r3, #57]
1476:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1477:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /*-------------------------- USART CR1 Configuration -----------------------*/
1478:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Clear TE and RE bits */
1479:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Enable the USART's receive interface by setting the RE bit in the USART CR1 register */
1480:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR1, (uint32_t)(USART_CR1_TE | USART_CR1_RE), USART_CR1_RE);
 2956              		.loc 1 1480 0 discriminator 2
 2957 0026 7B68     		ldr	r3, [r7, #4]
 2958 0028 1B68     		ldr	r3, [r3]
 2959 002a 7A68     		ldr	r2, [r7, #4]
 2960 002c 1268     		ldr	r2, [r2]
ARM GAS  /tmp/cckhygdq.s 			page 78


 2961 002e D268     		ldr	r2, [r2, #12]
 2962 0030 22F00C02 		bic	r2, r2, #12
 2963 0034 42F00402 		orr	r2, r2, #4
 2964 0038 DA60     		str	r2, [r3, #12]
1481:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
1482:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->State = HAL_UART_STATE_READY;
 2965              		.loc 1 1482 0 discriminator 2
 2966 003a 7B68     		ldr	r3, [r7, #4]
 2967 003c 0122     		movs	r2, #1
 2968 003e 83F83920 		strb	r2, [r3, #57]
1483:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
1484:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Process Unlocked */
1485:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   __HAL_UNLOCK(huart);
 2969              		.loc 1 1485 0 discriminator 2
 2970 0042 7B68     		ldr	r3, [r7, #4]
 2971 0044 0022     		movs	r2, #0
 2972 0046 83F83820 		strb	r2, [r3, #56]
1486:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
1487:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   return HAL_OK; 
 2973              		.loc 1 1487 0 discriminator 2
 2974 004a 0023     		movs	r3, #0
 2975              	.L146:
1488:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
 2976              		.loc 1 1488 0
 2977 004c 1846     		mov	r0, r3
 2978 004e 0C37     		adds	r7, r7, #12
 2979              	.LCFI148:
 2980              		.cfi_def_cfa_offset 4
 2981 0050 BD46     		mov	sp, r7
 2982              	.LCFI149:
 2983              		.cfi_def_cfa_register 13
 2984              		@ sp needed
 2985 0052 5DF8047B 		ldr	r7, [sp], #4
 2986              	.LCFI150:
 2987              		.cfi_restore 7
 2988              		.cfi_def_cfa_offset 0
 2989 0056 7047     		bx	lr
 2990              		.cfi_endproc
 2991              	.LFE89:
 2993              		.section	.text.HAL_UART_GetState,"ax",%progbits
 2994              		.align	2
 2995              		.global	HAL_UART_GetState
 2996              		.thumb
 2997              		.thumb_func
 2999              	HAL_UART_GetState:
 3000              	.LFB90:
1489:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1490:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
1491:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @}
1492:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
1493:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1494:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /** @defgroup UART_Exported_Functions_Group4 Peripheral State and Errors functions 
1495:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *  @brief   UART State and Errors functions 
1496:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *
1497:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** @verbatim   
1498:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   ==============================================================================
1499:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****                  ##### Peripheral State and Errors functions #####
ARM GAS  /tmp/cckhygdq.s 			page 79


1500:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   ==============================================================================  
1501:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****  [..]
1502:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****    This subsection provides a set of functions allowing to return the State of 
1503:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****    UART communication process, return Peripheral Errors occurred during communication 
1504:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****    process
1505:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****    (+) HAL_UART_GetState() API can be helpful to check in run-time the state of the UART peripheral
1506:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****    (+) HAL_UART_GetError() check in run-time errors that could be occurred during communication. 
1507:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1508:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** @endverbatim
1509:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @{
1510:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
1511:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
1512:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
1513:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief  Returns the UART state.
1514:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  huart: Pointer to a UART_HandleTypeDef structure that contains
1515:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *                the configuration information for the specified UART module.
1516:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval HAL state
1517:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
1518:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** HAL_UART_StateTypeDef HAL_UART_GetState(UART_HandleTypeDef *huart)
1519:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
 3001              		.loc 1 1519 0
 3002              		.cfi_startproc
 3003              		@ args = 0, pretend = 0, frame = 8
 3004              		@ frame_needed = 1, uses_anonymous_args = 0
 3005              		@ link register save eliminated.
 3006 0000 80B4     		push	{r7}
 3007              	.LCFI151:
 3008              		.cfi_def_cfa_offset 4
 3009              		.cfi_offset 7, -4
 3010 0002 83B0     		sub	sp, sp, #12
 3011              	.LCFI152:
 3012              		.cfi_def_cfa_offset 16
 3013 0004 00AF     		add	r7, sp, #0
 3014              	.LCFI153:
 3015              		.cfi_def_cfa_register 7
 3016 0006 7860     		str	r0, [r7, #4]
1520:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   return huart->State;
 3017              		.loc 1 1520 0
 3018 0008 7B68     		ldr	r3, [r7, #4]
 3019 000a 93F83930 		ldrb	r3, [r3, #57]
 3020 000e DBB2     		uxtb	r3, r3
1521:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
 3021              		.loc 1 1521 0
 3022 0010 1846     		mov	r0, r3
 3023 0012 0C37     		adds	r7, r7, #12
 3024              	.LCFI154:
 3025              		.cfi_def_cfa_offset 4
 3026 0014 BD46     		mov	sp, r7
 3027              	.LCFI155:
 3028              		.cfi_def_cfa_register 13
 3029              		@ sp needed
 3030 0016 5DF8047B 		ldr	r7, [sp], #4
 3031              	.LCFI156:
 3032              		.cfi_restore 7
 3033              		.cfi_def_cfa_offset 0
 3034 001a 7047     		bx	lr
 3035              		.cfi_endproc
ARM GAS  /tmp/cckhygdq.s 			page 80


 3036              	.LFE90:
 3038              		.section	.text.HAL_UART_GetError,"ax",%progbits
 3039              		.align	2
 3040              		.global	HAL_UART_GetError
 3041              		.thumb
 3042              		.thumb_func
 3044              	HAL_UART_GetError:
 3045              	.LFB91:
1522:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1523:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
1524:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** * @brief  Return the UART error code
1525:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** * @param  huart: Pointer to a UART_HandleTypeDef structure that contains
1526:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *              the configuration information for the specified UART.
1527:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** * @retval UART Error Code
1528:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** */
1529:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** uint32_t HAL_UART_GetError(UART_HandleTypeDef *huart)
1530:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
 3046              		.loc 1 1530 0
 3047              		.cfi_startproc
 3048              		@ args = 0, pretend = 0, frame = 8
 3049              		@ frame_needed = 1, uses_anonymous_args = 0
 3050              		@ link register save eliminated.
 3051 0000 80B4     		push	{r7}
 3052              	.LCFI157:
 3053              		.cfi_def_cfa_offset 4
 3054              		.cfi_offset 7, -4
 3055 0002 83B0     		sub	sp, sp, #12
 3056              	.LCFI158:
 3057              		.cfi_def_cfa_offset 16
 3058 0004 00AF     		add	r7, sp, #0
 3059              	.LCFI159:
 3060              		.cfi_def_cfa_register 7
 3061 0006 7860     		str	r0, [r7, #4]
1531:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   return huart->ErrorCode;
 3062              		.loc 1 1531 0
 3063 0008 7B68     		ldr	r3, [r7, #4]
 3064 000a DB6B     		ldr	r3, [r3, #60]
1532:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
 3065              		.loc 1 1532 0
 3066 000c 1846     		mov	r0, r3
 3067 000e 0C37     		adds	r7, r7, #12
 3068              	.LCFI160:
 3069              		.cfi_def_cfa_offset 4
 3070 0010 BD46     		mov	sp, r7
 3071              	.LCFI161:
 3072              		.cfi_def_cfa_register 13
 3073              		@ sp needed
 3074 0012 5DF8047B 		ldr	r7, [sp], #4
 3075              	.LCFI162:
 3076              		.cfi_restore 7
 3077              		.cfi_def_cfa_offset 0
 3078 0016 7047     		bx	lr
 3079              		.cfi_endproc
 3080              	.LFE91:
 3082              		.section	.text.UART_DMATransmitCplt,"ax",%progbits
 3083              		.align	2
 3084              		.thumb
ARM GAS  /tmp/cckhygdq.s 			page 81


 3085              		.thumb_func
 3087              	UART_DMATransmitCplt:
 3088              	.LFB92:
1533:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1534:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
1535:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @}
1536:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
1537:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1538:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
1539:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @}
1540:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
1541:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1542:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /** @defgroup UART_Private_Functions   UART Private Functions
1543:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *  @brief   UART Private functions 
1544:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @{
1545:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
1546:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
1547:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief  DMA UART transmit process complete callback. 
1548:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  hdma: Pointer to a DMA_HandleTypeDef structure that contains
1549:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *               the configuration information for the specified DMA module.
1550:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval None
1551:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
1552:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** static void UART_DMATransmitCplt(DMA_HandleTypeDef *hdma)     
1553:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
 3089              		.loc 1 1553 0
 3090              		.cfi_startproc
 3091              		@ args = 0, pretend = 0, frame = 16
 3092              		@ frame_needed = 1, uses_anonymous_args = 0
 3093 0000 80B5     		push	{r7, lr}
 3094              	.LCFI163:
 3095              		.cfi_def_cfa_offset 8
 3096              		.cfi_offset 7, -8
 3097              		.cfi_offset 14, -4
 3098 0002 84B0     		sub	sp, sp, #16
 3099              	.LCFI164:
 3100              		.cfi_def_cfa_offset 24
 3101 0004 00AF     		add	r7, sp, #0
 3102              	.LCFI165:
 3103              		.cfi_def_cfa_register 7
 3104 0006 7860     		str	r0, [r7, #4]
1554:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   UART_HandleTypeDef* huart = ( UART_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
 3105              		.loc 1 1554 0
 3106 0008 7B68     		ldr	r3, [r7, #4]
 3107 000a 5B6A     		ldr	r3, [r3, #36]
 3108 000c FB60     		str	r3, [r7, #12]
1555:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* DMA Normal mode*/
1556:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if ( HAL_IS_BIT_CLR(hdma->Instance->CCR, DMA_CCR_CIRC) )
 3109              		.loc 1 1556 0
 3110 000e 7B68     		ldr	r3, [r7, #4]
 3111 0010 1B68     		ldr	r3, [r3]
 3112 0012 1B68     		ldr	r3, [r3]
 3113 0014 03F02003 		and	r3, r3, #32
 3114 0018 002B     		cmp	r3, #0
 3115 001a 13D1     		bne	.L152
1557:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
1558:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->TxXferCount = 0;
 3116              		.loc 1 1558 0
ARM GAS  /tmp/cckhygdq.s 			page 82


 3117 001c FB68     		ldr	r3, [r7, #12]
 3118 001e 0022     		movs	r2, #0
 3119 0020 DA84     		strh	r2, [r3, #38]	@ movhi
1559:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1560:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Disable the DMA transfer for transmit request by setting the DMAT bit
1561:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****        in the UART CR3 register */
1562:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
 3120              		.loc 1 1562 0
 3121 0022 FB68     		ldr	r3, [r7, #12]
 3122 0024 1B68     		ldr	r3, [r3]
 3123 0026 FA68     		ldr	r2, [r7, #12]
 3124 0028 1268     		ldr	r2, [r2]
 3125 002a 5269     		ldr	r2, [r2, #20]
 3126 002c 22F08002 		bic	r2, r2, #128
 3127 0030 5A61     		str	r2, [r3, #20]
1563:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1564:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Enable the UART Transmit Complete Interrupt */    
1565:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     __HAL_UART_ENABLE_IT(huart, UART_IT_TC);
 3128              		.loc 1 1565 0
 3129 0032 FB68     		ldr	r3, [r7, #12]
 3130 0034 1B68     		ldr	r3, [r3]
 3131 0036 FA68     		ldr	r2, [r7, #12]
 3132 0038 1268     		ldr	r2, [r2]
 3133 003a D268     		ldr	r2, [r2, #12]
 3134 003c 42F04002 		orr	r2, r2, #64
 3135 0040 DA60     		str	r2, [r3, #12]
 3136 0042 02E0     		b	.L151
 3137              	.L152:
1566:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
1567:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* DMA Circular mode */
1568:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   else
1569:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
1570:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     HAL_UART_TxCpltCallback(huart);
 3138              		.loc 1 1570 0
 3139 0044 F868     		ldr	r0, [r7, #12]
 3140 0046 FFF7FEFF 		bl	HAL_UART_TxCpltCallback
 3141              	.L151:
1571:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
1572:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
 3142              		.loc 1 1572 0
 3143 004a 1037     		adds	r7, r7, #16
 3144              	.LCFI166:
 3145              		.cfi_def_cfa_offset 8
 3146 004c BD46     		mov	sp, r7
 3147              	.LCFI167:
 3148              		.cfi_def_cfa_register 13
 3149              		@ sp needed
 3150 004e 80BD     		pop	{r7, pc}
 3151              		.cfi_endproc
 3152              	.LFE92:
 3154              		.section	.text.UART_DMATxHalfCplt,"ax",%progbits
 3155              		.align	2
 3156              		.thumb
 3157              		.thumb_func
 3159              	UART_DMATxHalfCplt:
 3160              	.LFB93:
1573:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
ARM GAS  /tmp/cckhygdq.s 			page 83


1574:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
1575:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief DMA UART transmit process half complete callback 
1576:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  hdma: Pointer to a DMA_HandleTypeDef structure that contains
1577:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *               the configuration information for the specified DMA module.
1578:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval None
1579:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
1580:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** static void UART_DMATxHalfCplt(DMA_HandleTypeDef *hdma)
1581:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
 3161              		.loc 1 1581 0
 3162              		.cfi_startproc
 3163              		@ args = 0, pretend = 0, frame = 16
 3164              		@ frame_needed = 1, uses_anonymous_args = 0
 3165 0000 80B5     		push	{r7, lr}
 3166              	.LCFI168:
 3167              		.cfi_def_cfa_offset 8
 3168              		.cfi_offset 7, -8
 3169              		.cfi_offset 14, -4
 3170 0002 84B0     		sub	sp, sp, #16
 3171              	.LCFI169:
 3172              		.cfi_def_cfa_offset 24
 3173 0004 00AF     		add	r7, sp, #0
 3174              	.LCFI170:
 3175              		.cfi_def_cfa_register 7
 3176 0006 7860     		str	r0, [r7, #4]
1582:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   UART_HandleTypeDef* huart = (UART_HandleTypeDef*)((DMA_HandleTypeDef*)hdma)->Parent;
 3177              		.loc 1 1582 0
 3178 0008 7B68     		ldr	r3, [r7, #4]
 3179 000a 5B6A     		ldr	r3, [r3, #36]
 3180 000c FB60     		str	r3, [r7, #12]
1583:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1584:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   HAL_UART_TxHalfCpltCallback(huart);
 3181              		.loc 1 1584 0
 3182 000e F868     		ldr	r0, [r7, #12]
 3183 0010 FFF7FEFF 		bl	HAL_UART_TxHalfCpltCallback
1585:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
 3184              		.loc 1 1585 0
 3185 0014 1037     		adds	r7, r7, #16
 3186              	.LCFI171:
 3187              		.cfi_def_cfa_offset 8
 3188 0016 BD46     		mov	sp, r7
 3189              	.LCFI172:
 3190              		.cfi_def_cfa_register 13
 3191              		@ sp needed
 3192 0018 80BD     		pop	{r7, pc}
 3193              		.cfi_endproc
 3194              	.LFE93:
 3196 001a 00BF     		.section	.text.UART_DMAReceiveCplt,"ax",%progbits
 3197              		.align	2
 3198              		.thumb
 3199              		.thumb_func
 3201              	UART_DMAReceiveCplt:
 3202              	.LFB94:
1586:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1587:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
1588:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief  DMA UART receive process complete callback. 
1589:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  hdma: Pointer to a DMA_HandleTypeDef structure that contains
1590:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *               the configuration information for the specified DMA module.
ARM GAS  /tmp/cckhygdq.s 			page 84


1591:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval None
1592:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
1593:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** static void UART_DMAReceiveCplt(DMA_HandleTypeDef *hdma)  
1594:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
 3203              		.loc 1 1594 0
 3204              		.cfi_startproc
 3205              		@ args = 0, pretend = 0, frame = 16
 3206              		@ frame_needed = 1, uses_anonymous_args = 0
 3207 0000 80B5     		push	{r7, lr}
 3208              	.LCFI173:
 3209              		.cfi_def_cfa_offset 8
 3210              		.cfi_offset 7, -8
 3211              		.cfi_offset 14, -4
 3212 0002 84B0     		sub	sp, sp, #16
 3213              	.LCFI174:
 3214              		.cfi_def_cfa_offset 24
 3215 0004 00AF     		add	r7, sp, #0
 3216              	.LCFI175:
 3217              		.cfi_def_cfa_register 7
 3218 0006 7860     		str	r0, [r7, #4]
1595:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   UART_HandleTypeDef* huart = ( UART_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
 3219              		.loc 1 1595 0
 3220 0008 7B68     		ldr	r3, [r7, #4]
 3221 000a 5B6A     		ldr	r3, [r3, #36]
 3222 000c FB60     		str	r3, [r7, #12]
1596:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* DMA Normal mode*/
1597:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if ( HAL_IS_BIT_CLR(hdma->Instance->CCR, DMA_CCR_CIRC) )
 3223              		.loc 1 1597 0
 3224 000e 7B68     		ldr	r3, [r7, #4]
 3225 0010 1B68     		ldr	r3, [r3]
 3226 0012 1B68     		ldr	r3, [r3]
 3227 0014 03F02003 		and	r3, r3, #32
 3228 0018 002B     		cmp	r3, #0
 3229 001a 19D1     		bne	.L156
1598:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
1599:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->RxXferCount = 0;
 3230              		.loc 1 1599 0
 3231 001c FB68     		ldr	r3, [r7, #12]
 3232 001e 0022     		movs	r2, #0
 3233 0020 DA85     		strh	r2, [r3, #46]	@ movhi
1600:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
1601:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Disable the DMA transfer for the receiver request by setting the DMAR bit 
1602:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****        in the UART CR3 register */
1603:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
 3234              		.loc 1 1603 0
 3235 0022 FB68     		ldr	r3, [r7, #12]
 3236 0024 1B68     		ldr	r3, [r3]
 3237 0026 FA68     		ldr	r2, [r7, #12]
 3238 0028 1268     		ldr	r2, [r2]
 3239 002a 5269     		ldr	r2, [r2, #20]
 3240 002c 22F04002 		bic	r2, r2, #64
 3241 0030 5A61     		str	r2, [r3, #20]
1604:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1605:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Check if a transmit process is ongoing or not */
1606:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     if(huart->State == HAL_UART_STATE_BUSY_TX_RX) 
 3242              		.loc 1 1606 0
 3243 0032 FB68     		ldr	r3, [r7, #12]
ARM GAS  /tmp/cckhygdq.s 			page 85


 3244 0034 93F83930 		ldrb	r3, [r3, #57]
 3245 0038 DBB2     		uxtb	r3, r3
 3246 003a 322B     		cmp	r3, #50
 3247 003c 04D1     		bne	.L157
1607:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
1608:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       huart->State = HAL_UART_STATE_BUSY_TX;
 3248              		.loc 1 1608 0
 3249 003e FB68     		ldr	r3, [r7, #12]
 3250 0040 1222     		movs	r2, #18
 3251 0042 83F83920 		strb	r2, [r3, #57]
 3252 0046 03E0     		b	.L156
 3253              	.L157:
1609:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
1610:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     else
1611:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
1612:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       huart->State = HAL_UART_STATE_READY;
 3254              		.loc 1 1612 0
 3255 0048 FB68     		ldr	r3, [r7, #12]
 3256 004a 0122     		movs	r2, #1
 3257 004c 83F83920 		strb	r2, [r3, #57]
 3258              	.L156:
1613:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
1614:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
1615:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   HAL_UART_RxCpltCallback(huart);
 3259              		.loc 1 1615 0
 3260 0050 F868     		ldr	r0, [r7, #12]
 3261 0052 FFF7FEFF 		bl	HAL_UART_RxCpltCallback
1616:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
 3262              		.loc 1 1616 0
 3263 0056 1037     		adds	r7, r7, #16
 3264              	.LCFI176:
 3265              		.cfi_def_cfa_offset 8
 3266 0058 BD46     		mov	sp, r7
 3267              	.LCFI177:
 3268              		.cfi_def_cfa_register 13
 3269              		@ sp needed
 3270 005a 80BD     		pop	{r7, pc}
 3271              		.cfi_endproc
 3272              	.LFE94:
 3274              		.section	.text.UART_DMARxHalfCplt,"ax",%progbits
 3275              		.align	2
 3276              		.thumb
 3277              		.thumb_func
 3279              	UART_DMARxHalfCplt:
 3280              	.LFB95:
1617:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1618:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
1619:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief DMA UART receive process half complete callback 
1620:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  hdma: Pointer to a DMA_HandleTypeDef structure that contains
1621:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *               the configuration information for the specified DMA module.
1622:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval None
1623:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
1624:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** static void UART_DMARxHalfCplt(DMA_HandleTypeDef *hdma)
1625:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
 3281              		.loc 1 1625 0
 3282              		.cfi_startproc
 3283              		@ args = 0, pretend = 0, frame = 16
ARM GAS  /tmp/cckhygdq.s 			page 86


 3284              		@ frame_needed = 1, uses_anonymous_args = 0
 3285 0000 80B5     		push	{r7, lr}
 3286              	.LCFI178:
 3287              		.cfi_def_cfa_offset 8
 3288              		.cfi_offset 7, -8
 3289              		.cfi_offset 14, -4
 3290 0002 84B0     		sub	sp, sp, #16
 3291              	.LCFI179:
 3292              		.cfi_def_cfa_offset 24
 3293 0004 00AF     		add	r7, sp, #0
 3294              	.LCFI180:
 3295              		.cfi_def_cfa_register 7
 3296 0006 7860     		str	r0, [r7, #4]
1626:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   UART_HandleTypeDef* huart = (UART_HandleTypeDef*)((DMA_HandleTypeDef*)hdma)->Parent;
 3297              		.loc 1 1626 0
 3298 0008 7B68     		ldr	r3, [r7, #4]
 3299 000a 5B6A     		ldr	r3, [r3, #36]
 3300 000c FB60     		str	r3, [r7, #12]
1627:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1628:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   HAL_UART_RxHalfCpltCallback(huart); 
 3301              		.loc 1 1628 0
 3302 000e F868     		ldr	r0, [r7, #12]
 3303 0010 FFF7FEFF 		bl	HAL_UART_RxHalfCpltCallback
1629:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
 3304              		.loc 1 1629 0
 3305 0014 1037     		adds	r7, r7, #16
 3306              	.LCFI181:
 3307              		.cfi_def_cfa_offset 8
 3308 0016 BD46     		mov	sp, r7
 3309              	.LCFI182:
 3310              		.cfi_def_cfa_register 13
 3311              		@ sp needed
 3312 0018 80BD     		pop	{r7, pc}
 3313              		.cfi_endproc
 3314              	.LFE95:
 3316 001a 00BF     		.section	.text.UART_DMAError,"ax",%progbits
 3317              		.align	2
 3318              		.thumb
 3319              		.thumb_func
 3321              	UART_DMAError:
 3322              	.LFB96:
1630:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1631:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
1632:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief  DMA UART communication error callback.
1633:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  hdma: Pointer to a DMA_HandleTypeDef structure that contains
1634:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *               the configuration information for the specified DMA module.
1635:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval None
1636:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
1637:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** static void UART_DMAError(DMA_HandleTypeDef *hdma)   
1638:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
 3323              		.loc 1 1638 0
 3324              		.cfi_startproc
 3325              		@ args = 0, pretend = 0, frame = 16
 3326              		@ frame_needed = 1, uses_anonymous_args = 0
 3327 0000 80B5     		push	{r7, lr}
 3328              	.LCFI183:
 3329              		.cfi_def_cfa_offset 8
ARM GAS  /tmp/cckhygdq.s 			page 87


 3330              		.cfi_offset 7, -8
 3331              		.cfi_offset 14, -4
 3332 0002 84B0     		sub	sp, sp, #16
 3333              	.LCFI184:
 3334              		.cfi_def_cfa_offset 24
 3335 0004 00AF     		add	r7, sp, #0
 3336              	.LCFI185:
 3337              		.cfi_def_cfa_register 7
 3338 0006 7860     		str	r0, [r7, #4]
1639:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   UART_HandleTypeDef* huart = ( UART_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
 3339              		.loc 1 1639 0
 3340 0008 7B68     		ldr	r3, [r7, #4]
 3341 000a 5B6A     		ldr	r3, [r3, #36]
 3342 000c FB60     		str	r3, [r7, #12]
1640:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->RxXferCount = 0;
 3343              		.loc 1 1640 0
 3344 000e FB68     		ldr	r3, [r7, #12]
 3345 0010 0022     		movs	r2, #0
 3346 0012 DA85     		strh	r2, [r3, #46]	@ movhi
1641:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->TxXferCount = 0;
 3347              		.loc 1 1641 0
 3348 0014 FB68     		ldr	r3, [r7, #12]
 3349 0016 0022     		movs	r2, #0
 3350 0018 DA84     		strh	r2, [r3, #38]	@ movhi
1642:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->State= HAL_UART_STATE_READY;
 3351              		.loc 1 1642 0
 3352 001a FB68     		ldr	r3, [r7, #12]
 3353 001c 0122     		movs	r2, #1
 3354 001e 83F83920 		strb	r2, [r3, #57]
1643:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->ErrorCode |= HAL_UART_ERROR_DMA;
 3355              		.loc 1 1643 0
 3356 0022 FB68     		ldr	r3, [r7, #12]
 3357 0024 DB6B     		ldr	r3, [r3, #60]
 3358 0026 43F01002 		orr	r2, r3, #16
 3359 002a FB68     		ldr	r3, [r7, #12]
 3360 002c DA63     		str	r2, [r3, #60]
1644:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   HAL_UART_ErrorCallback(huart);
 3361              		.loc 1 1644 0
 3362 002e F868     		ldr	r0, [r7, #12]
 3363 0030 FFF7FEFF 		bl	HAL_UART_ErrorCallback
1645:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
 3364              		.loc 1 1645 0
 3365 0034 1037     		adds	r7, r7, #16
 3366              	.LCFI186:
 3367              		.cfi_def_cfa_offset 8
 3368 0036 BD46     		mov	sp, r7
 3369              	.LCFI187:
 3370              		.cfi_def_cfa_register 13
 3371              		@ sp needed
 3372 0038 80BD     		pop	{r7, pc}
 3373              		.cfi_endproc
 3374              	.LFE96:
 3376 003a 00BF     		.section	.text.UART_WaitOnFlagUntilTimeout,"ax",%progbits
 3377              		.align	2
 3378              		.thumb
 3379              		.thumb_func
 3381              	UART_WaitOnFlagUntilTimeout:
ARM GAS  /tmp/cckhygdq.s 			page 88


 3382              	.LFB97:
1646:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1647:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
1648:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief  This function handles UART Communication Timeout.
1649:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  huart: Pointer to a UART_HandleTypeDef structure that contains
1650:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *                the configuration information for the specified UART module.
1651:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  Flag: specifies the UART flag to check.
1652:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  Status: The new Flag status (SET or RESET).
1653:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  Timeout: Timeout duration
1654:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval HAL status
1655:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
1656:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** static HAL_StatusTypeDef UART_WaitOnFlagUntilTimeout(UART_HandleTypeDef *huart, uint32_t Flag, Flag
1657:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
 3383              		.loc 1 1657 0
 3384              		.cfi_startproc
 3385              		@ args = 0, pretend = 0, frame = 24
 3386              		@ frame_needed = 1, uses_anonymous_args = 0
 3387 0000 80B5     		push	{r7, lr}
 3388              	.LCFI188:
 3389              		.cfi_def_cfa_offset 8
 3390              		.cfi_offset 7, -8
 3391              		.cfi_offset 14, -4
 3392 0002 86B0     		sub	sp, sp, #24
 3393              	.LCFI189:
 3394              		.cfi_def_cfa_offset 32
 3395 0004 00AF     		add	r7, sp, #0
 3396              	.LCFI190:
 3397              		.cfi_def_cfa_register 7
 3398 0006 F860     		str	r0, [r7, #12]
 3399 0008 B960     		str	r1, [r7, #8]
 3400 000a 3B60     		str	r3, [r7]
 3401 000c 1346     		mov	r3, r2
 3402 000e FB71     		strb	r3, [r7, #7]
1658:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   uint32_t tickstart = 0;
 3403              		.loc 1 1658 0
 3404 0010 0023     		movs	r3, #0
 3405 0012 7B61     		str	r3, [r7, #20]
1659:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1660:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Get tick */ 
1661:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   tickstart = HAL_GetTick();
 3406              		.loc 1 1661 0
 3407 0014 FFF7FEFF 		bl	HAL_GetTick
 3408 0018 7861     		str	r0, [r7, #20]
1662:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1663:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Wait until flag is set */
1664:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if(Status == RESET)
 3409              		.loc 1 1664 0
 3410 001a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3411 001c 002B     		cmp	r3, #0
 3412 001e 42D1     		bne	.L161
1665:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
1666:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     while(__HAL_UART_GET_FLAG(huart, Flag) == RESET)
 3413              		.loc 1 1666 0
 3414 0020 38E0     		b	.L162
 3415              	.L165:
1667:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
1668:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       /* Check for the Timeout */
ARM GAS  /tmp/cckhygdq.s 			page 89


1669:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       if(Timeout != HAL_MAX_DELAY)
 3416              		.loc 1 1669 0
 3417 0022 3B68     		ldr	r3, [r7]
 3418 0024 B3F1FF3F 		cmp	r3, #-1
 3419 0028 34D0     		beq	.L162
1670:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       {
1671:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         if((Timeout == 0)||((HAL_GetTick() - tickstart ) > Timeout))
 3420              		.loc 1 1671 0
 3421 002a 3B68     		ldr	r3, [r7]
 3422 002c 002B     		cmp	r3, #0
 3423 002e 07D0     		beq	.L163
 3424              		.loc 1 1671 0 is_stmt 0 discriminator 1
 3425 0030 FFF7FEFF 		bl	HAL_GetTick
 3426 0034 0246     		mov	r2, r0
 3427 0036 7B69     		ldr	r3, [r7, #20]
 3428 0038 D21A     		subs	r2, r2, r3
 3429 003a 3B68     		ldr	r3, [r7]
 3430 003c 9A42     		cmp	r2, r3
 3431 003e 29D9     		bls	.L162
 3432              	.L163:
1672:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         {
1673:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****           /* Disable TXE, RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts for
1674:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****           __HAL_UART_DISABLE_IT(huart, UART_IT_TXE);
 3433              		.loc 1 1674 0 is_stmt 1
 3434 0040 FB68     		ldr	r3, [r7, #12]
 3435 0042 1B68     		ldr	r3, [r3]
 3436 0044 FA68     		ldr	r2, [r7, #12]
 3437 0046 1268     		ldr	r2, [r2]
 3438 0048 D268     		ldr	r2, [r2, #12]
 3439 004a 22F08002 		bic	r2, r2, #128
 3440 004e DA60     		str	r2, [r3, #12]
1675:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****           __HAL_UART_DISABLE_IT(huart, UART_IT_RXNE);
 3441              		.loc 1 1675 0
 3442 0050 FB68     		ldr	r3, [r7, #12]
 3443 0052 1B68     		ldr	r3, [r3]
 3444 0054 FA68     		ldr	r2, [r7, #12]
 3445 0056 1268     		ldr	r2, [r2]
 3446 0058 D268     		ldr	r2, [r2, #12]
 3447 005a 22F02002 		bic	r2, r2, #32
 3448 005e DA60     		str	r2, [r3, #12]
1676:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****           __HAL_UART_DISABLE_IT(huart, UART_IT_PE);
 3449              		.loc 1 1676 0
 3450 0060 FB68     		ldr	r3, [r7, #12]
 3451 0062 1B68     		ldr	r3, [r3]
 3452 0064 FA68     		ldr	r2, [r7, #12]
 3453 0066 1268     		ldr	r2, [r2]
 3454 0068 D268     		ldr	r2, [r2, #12]
 3455 006a 22F48072 		bic	r2, r2, #256
 3456 006e DA60     		str	r2, [r3, #12]
1677:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****           __HAL_UART_DISABLE_IT(huart, UART_IT_ERR);
 3457              		.loc 1 1677 0
 3458 0070 FB68     		ldr	r3, [r7, #12]
 3459 0072 1B68     		ldr	r3, [r3]
 3460 0074 FA68     		ldr	r2, [r7, #12]
 3461 0076 1268     		ldr	r2, [r2]
 3462 0078 5269     		ldr	r2, [r2, #20]
 3463 007a 22F00102 		bic	r2, r2, #1
ARM GAS  /tmp/cckhygdq.s 			page 90


 3464 007e 5A61     		str	r2, [r3, #20]
1678:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1679:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****           huart->State= HAL_UART_STATE_READY;
 3465              		.loc 1 1679 0
 3466 0080 FB68     		ldr	r3, [r7, #12]
 3467 0082 0122     		movs	r2, #1
 3468 0084 83F83920 		strb	r2, [r3, #57]
1680:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1681:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****           /* Process Unlocked */
1682:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****           __HAL_UNLOCK(huart);
 3469              		.loc 1 1682 0
 3470 0088 FB68     		ldr	r3, [r7, #12]
 3471 008a 0022     		movs	r2, #0
 3472 008c 83F83820 		strb	r2, [r3, #56]
1683:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1684:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****           return HAL_TIMEOUT;
 3473              		.loc 1 1684 0
 3474 0090 0323     		movs	r3, #3
 3475 0092 4BE0     		b	.L164
 3476              	.L162:
1666:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
 3477              		.loc 1 1666 0
 3478 0094 FB68     		ldr	r3, [r7, #12]
 3479 0096 1B68     		ldr	r3, [r3]
 3480 0098 1A68     		ldr	r2, [r3]
 3481 009a BB68     		ldr	r3, [r7, #8]
 3482 009c 1A40     		ands	r2, r2, r3
 3483 009e BB68     		ldr	r3, [r7, #8]
 3484 00a0 9A42     		cmp	r2, r3
 3485 00a2 BED1     		bne	.L165
 3486 00a4 41E0     		b	.L166
 3487              	.L161:
1685:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         }
1686:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       }
1687:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
1688:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
1689:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   else
1690:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
1691:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     while(__HAL_UART_GET_FLAG(huart, Flag) != RESET)
 3488              		.loc 1 1691 0
 3489 00a6 38E0     		b	.L167
 3490              	.L169:
1692:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
1693:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       /* Check for the Timeout */
1694:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       if(Timeout != HAL_MAX_DELAY)
 3491              		.loc 1 1694 0
 3492 00a8 3B68     		ldr	r3, [r7]
 3493 00aa B3F1FF3F 		cmp	r3, #-1
 3494 00ae 34D0     		beq	.L167
1695:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       {
1696:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         if((Timeout == 0)||((HAL_GetTick() - tickstart ) > Timeout))
 3495              		.loc 1 1696 0
 3496 00b0 3B68     		ldr	r3, [r7]
 3497 00b2 002B     		cmp	r3, #0
 3498 00b4 07D0     		beq	.L168
 3499              		.loc 1 1696 0 is_stmt 0 discriminator 1
 3500 00b6 FFF7FEFF 		bl	HAL_GetTick
ARM GAS  /tmp/cckhygdq.s 			page 91


 3501 00ba 0246     		mov	r2, r0
 3502 00bc 7B69     		ldr	r3, [r7, #20]
 3503 00be D21A     		subs	r2, r2, r3
 3504 00c0 3B68     		ldr	r3, [r7]
 3505 00c2 9A42     		cmp	r2, r3
 3506 00c4 29D9     		bls	.L167
 3507              	.L168:
1697:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         {
1698:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****           /* Disable TXE, RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts for
1699:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****           __HAL_UART_DISABLE_IT(huart, UART_IT_TXE);
 3508              		.loc 1 1699 0 is_stmt 1
 3509 00c6 FB68     		ldr	r3, [r7, #12]
 3510 00c8 1B68     		ldr	r3, [r3]
 3511 00ca FA68     		ldr	r2, [r7, #12]
 3512 00cc 1268     		ldr	r2, [r2]
 3513 00ce D268     		ldr	r2, [r2, #12]
 3514 00d0 22F08002 		bic	r2, r2, #128
 3515 00d4 DA60     		str	r2, [r3, #12]
1700:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****           __HAL_UART_DISABLE_IT(huart, UART_IT_RXNE);
 3516              		.loc 1 1700 0
 3517 00d6 FB68     		ldr	r3, [r7, #12]
 3518 00d8 1B68     		ldr	r3, [r3]
 3519 00da FA68     		ldr	r2, [r7, #12]
 3520 00dc 1268     		ldr	r2, [r2]
 3521 00de D268     		ldr	r2, [r2, #12]
 3522 00e0 22F02002 		bic	r2, r2, #32
 3523 00e4 DA60     		str	r2, [r3, #12]
1701:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****           __HAL_UART_DISABLE_IT(huart, UART_IT_PE);
 3524              		.loc 1 1701 0
 3525 00e6 FB68     		ldr	r3, [r7, #12]
 3526 00e8 1B68     		ldr	r3, [r3]
 3527 00ea FA68     		ldr	r2, [r7, #12]
 3528 00ec 1268     		ldr	r2, [r2]
 3529 00ee D268     		ldr	r2, [r2, #12]
 3530 00f0 22F48072 		bic	r2, r2, #256
 3531 00f4 DA60     		str	r2, [r3, #12]
1702:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****           __HAL_UART_DISABLE_IT(huart, UART_IT_ERR);
 3532              		.loc 1 1702 0
 3533 00f6 FB68     		ldr	r3, [r7, #12]
 3534 00f8 1B68     		ldr	r3, [r3]
 3535 00fa FA68     		ldr	r2, [r7, #12]
 3536 00fc 1268     		ldr	r2, [r2]
 3537 00fe 5269     		ldr	r2, [r2, #20]
 3538 0100 22F00102 		bic	r2, r2, #1
 3539 0104 5A61     		str	r2, [r3, #20]
1703:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1704:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****           huart->State= HAL_UART_STATE_READY;
 3540              		.loc 1 1704 0
 3541 0106 FB68     		ldr	r3, [r7, #12]
 3542 0108 0122     		movs	r2, #1
 3543 010a 83F83920 		strb	r2, [r3, #57]
1705:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1706:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****           /* Process Unlocked */
1707:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****           __HAL_UNLOCK(huart);
 3544              		.loc 1 1707 0
 3545 010e FB68     		ldr	r3, [r7, #12]
 3546 0110 0022     		movs	r2, #0
ARM GAS  /tmp/cckhygdq.s 			page 92


 3547 0112 83F83820 		strb	r2, [r3, #56]
1708:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1709:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****           return HAL_TIMEOUT;
 3548              		.loc 1 1709 0
 3549 0116 0323     		movs	r3, #3
 3550 0118 08E0     		b	.L164
 3551              	.L167:
1691:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
 3552              		.loc 1 1691 0
 3553 011a FB68     		ldr	r3, [r7, #12]
 3554 011c 1B68     		ldr	r3, [r3]
 3555 011e 1A68     		ldr	r2, [r3]
 3556 0120 BB68     		ldr	r3, [r7, #8]
 3557 0122 1A40     		ands	r2, r2, r3
 3558 0124 BB68     		ldr	r3, [r7, #8]
 3559 0126 9A42     		cmp	r2, r3
 3560 0128 BED0     		beq	.L169
 3561              	.L166:
1710:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         }
1711:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       }
1712:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
1713:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
1714:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   return HAL_OK;
 3562              		.loc 1 1714 0
 3563 012a 0023     		movs	r3, #0
 3564              	.L164:
1715:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
 3565              		.loc 1 1715 0
 3566 012c 1846     		mov	r0, r3
 3567 012e 1837     		adds	r7, r7, #24
 3568              	.LCFI191:
 3569              		.cfi_def_cfa_offset 8
 3570 0130 BD46     		mov	sp, r7
 3571              	.LCFI192:
 3572              		.cfi_def_cfa_register 13
 3573              		@ sp needed
 3574 0132 80BD     		pop	{r7, pc}
 3575              		.cfi_endproc
 3576              	.LFE97:
 3578              		.section	.text.UART_Transmit_IT,"ax",%progbits
 3579              		.align	2
 3580              		.thumb
 3581              		.thumb_func
 3583              	UART_Transmit_IT:
 3584              	.LFB98:
1716:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1717:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
1718:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief  Sends an amount of data in non blocking mode.
1719:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  huart: Pointer to a UART_HandleTypeDef structure that contains
1720:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *                the configuration information for the specified UART module.
1721:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval HAL status
1722:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
1723:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** static HAL_StatusTypeDef UART_Transmit_IT(UART_HandleTypeDef *huart)
1724:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
 3585              		.loc 1 1724 0
 3586              		.cfi_startproc
 3587              		@ args = 0, pretend = 0, frame = 16
ARM GAS  /tmp/cckhygdq.s 			page 93


 3588              		@ frame_needed = 1, uses_anonymous_args = 0
 3589              		@ link register save eliminated.
 3590 0000 80B4     		push	{r7}
 3591              	.LCFI193:
 3592              		.cfi_def_cfa_offset 4
 3593              		.cfi_offset 7, -4
 3594 0002 85B0     		sub	sp, sp, #20
 3595              	.LCFI194:
 3596              		.cfi_def_cfa_offset 24
 3597 0004 00AF     		add	r7, sp, #0
 3598              	.LCFI195:
 3599              		.cfi_def_cfa_register 7
 3600 0006 7860     		str	r0, [r7, #4]
1725:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   uint16_t* tmp;
1726:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   uint32_t tmp_state = 0;
 3601              		.loc 1 1726 0
 3602 0008 0023     		movs	r3, #0
 3603 000a FB60     		str	r3, [r7, #12]
1727:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
1728:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   tmp_state = huart->State;
 3604              		.loc 1 1728 0
 3605 000c 7B68     		ldr	r3, [r7, #4]
 3606 000e 93F83930 		ldrb	r3, [r3, #57]
 3607 0012 DBB2     		uxtb	r3, r3
 3608 0014 FB60     		str	r3, [r7, #12]
1729:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if((tmp_state == HAL_UART_STATE_BUSY_TX) || (tmp_state == HAL_UART_STATE_BUSY_TX_RX))
 3609              		.loc 1 1729 0
 3610 0016 FB68     		ldr	r3, [r7, #12]
 3611 0018 122B     		cmp	r3, #18
 3612 001a 02D0     		beq	.L171
 3613              		.loc 1 1729 0 is_stmt 0 discriminator 1
 3614 001c FB68     		ldr	r3, [r7, #12]
 3615 001e 322B     		cmp	r3, #50
 3616 0020 43D1     		bne	.L172
 3617              	.L171:
1730:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
1731:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     if(huart->Init.WordLength == UART_WORDLENGTH_9B)
 3618              		.loc 1 1731 0 is_stmt 1
 3619 0022 7B68     		ldr	r3, [r7, #4]
 3620 0024 9B68     		ldr	r3, [r3, #8]
 3621 0026 B3F5805F 		cmp	r3, #4096
 3622 002a 19D1     		bne	.L173
1732:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
1733:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       tmp = (uint16_t*) huart->pTxBuffPtr;
 3623              		.loc 1 1733 0
 3624 002c 7B68     		ldr	r3, [r7, #4]
 3625 002e 1B6A     		ldr	r3, [r3, #32]
 3626 0030 BB60     		str	r3, [r7, #8]
1734:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       huart->Instance->DR = (uint16_t)(*tmp & (uint16_t)0x01FF);
 3627              		.loc 1 1734 0
 3628 0032 7B68     		ldr	r3, [r7, #4]
 3629 0034 1B68     		ldr	r3, [r3]
 3630 0036 BA68     		ldr	r2, [r7, #8]
 3631 0038 1288     		ldrh	r2, [r2]
 3632 003a C2F30802 		ubfx	r2, r2, #0, #9
 3633 003e 5A60     		str	r2, [r3, #4]
1735:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       if(huart->Init.Parity == UART_PARITY_NONE)
ARM GAS  /tmp/cckhygdq.s 			page 94


 3634              		.loc 1 1735 0
 3635 0040 7B68     		ldr	r3, [r7, #4]
 3636 0042 1B69     		ldr	r3, [r3, #16]
 3637 0044 002B     		cmp	r3, #0
 3638 0046 05D1     		bne	.L174
1736:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       {
1737:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         huart->pTxBuffPtr += 2;
 3639              		.loc 1 1737 0
 3640 0048 7B68     		ldr	r3, [r7, #4]
 3641 004a 1B6A     		ldr	r3, [r3, #32]
 3642 004c 9A1C     		adds	r2, r3, #2
 3643 004e 7B68     		ldr	r3, [r7, #4]
 3644 0050 1A62     		str	r2, [r3, #32]
 3645 0052 0EE0     		b	.L176
 3646              	.L174:
1738:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       }
1739:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       else
1740:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       {
1741:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         huart->pTxBuffPtr += 1;
 3647              		.loc 1 1741 0
 3648 0054 7B68     		ldr	r3, [r7, #4]
 3649 0056 1B6A     		ldr	r3, [r3, #32]
 3650 0058 5A1C     		adds	r2, r3, #1
 3651 005a 7B68     		ldr	r3, [r7, #4]
 3652 005c 1A62     		str	r2, [r3, #32]
 3653 005e 08E0     		b	.L176
 3654              	.L173:
1742:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       }
1743:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     } 
1744:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     else
1745:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
1746:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       huart->Instance->DR = (uint8_t)(*huart->pTxBuffPtr++ & (uint8_t)0x00FF);
 3655              		.loc 1 1746 0
 3656 0060 7B68     		ldr	r3, [r7, #4]
 3657 0062 1A68     		ldr	r2, [r3]
 3658 0064 7B68     		ldr	r3, [r7, #4]
 3659 0066 1B6A     		ldr	r3, [r3, #32]
 3660 0068 581C     		adds	r0, r3, #1
 3661 006a 7968     		ldr	r1, [r7, #4]
 3662 006c 0862     		str	r0, [r1, #32]
 3663 006e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3664 0070 5360     		str	r3, [r2, #4]
 3665              	.L176:
1747:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
1748:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1749:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     if(--huart->TxXferCount == 0)
 3666              		.loc 1 1749 0
 3667 0072 7B68     		ldr	r3, [r7, #4]
 3668 0074 DB8C     		ldrh	r3, [r3, #38]
 3669 0076 013B     		subs	r3, r3, #1
 3670 0078 9AB2     		uxth	r2, r3
 3671 007a 7B68     		ldr	r3, [r7, #4]
 3672 007c DA84     		strh	r2, [r3, #38]	@ movhi
 3673 007e 7B68     		ldr	r3, [r7, #4]
 3674 0080 DB8C     		ldrh	r3, [r3, #38]
 3675 0082 002B     		cmp	r3, #0
 3676 0084 0FD1     		bne	.L177
ARM GAS  /tmp/cckhygdq.s 			page 95


1750:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
1751:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       /* Disable the UART Transmit Complete Interrupt */
1752:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       __HAL_UART_DISABLE_IT(huart, UART_IT_TXE);
 3677              		.loc 1 1752 0
 3678 0086 7B68     		ldr	r3, [r7, #4]
 3679 0088 1B68     		ldr	r3, [r3]
 3680 008a 7A68     		ldr	r2, [r7, #4]
 3681 008c 1268     		ldr	r2, [r2]
 3682 008e D268     		ldr	r2, [r2, #12]
 3683 0090 22F08002 		bic	r2, r2, #128
 3684 0094 DA60     		str	r2, [r3, #12]
1753:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1754:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       /* Enable the UART Transmit Complete Interrupt */    
1755:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       __HAL_UART_ENABLE_IT(huart, UART_IT_TC);
 3685              		.loc 1 1755 0
 3686 0096 7B68     		ldr	r3, [r7, #4]
 3687 0098 1B68     		ldr	r3, [r3]
 3688 009a 7A68     		ldr	r2, [r7, #4]
 3689 009c 1268     		ldr	r2, [r2]
 3690 009e D268     		ldr	r2, [r2, #12]
 3691 00a0 42F04002 		orr	r2, r2, #64
 3692 00a4 DA60     		str	r2, [r3, #12]
 3693              	.L177:
1756:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
1757:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     return HAL_OK;
 3694              		.loc 1 1757 0
 3695 00a6 0023     		movs	r3, #0
 3696 00a8 00E0     		b	.L178
 3697              	.L172:
1758:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
1759:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   else
1760:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
1761:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     return HAL_BUSY;
 3698              		.loc 1 1761 0
 3699 00aa 0223     		movs	r3, #2
 3700              	.L178:
1762:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
1763:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
 3701              		.loc 1 1763 0
 3702 00ac 1846     		mov	r0, r3
 3703 00ae 1437     		adds	r7, r7, #20
 3704              	.LCFI196:
 3705              		.cfi_def_cfa_offset 4
 3706 00b0 BD46     		mov	sp, r7
 3707              	.LCFI197:
 3708              		.cfi_def_cfa_register 13
 3709              		@ sp needed
 3710 00b2 5DF8047B 		ldr	r7, [sp], #4
 3711              	.LCFI198:
 3712              		.cfi_restore 7
 3713              		.cfi_def_cfa_offset 0
 3714 00b6 7047     		bx	lr
 3715              		.cfi_endproc
 3716              	.LFE98:
 3718              		.section	.text.UART_EndTransmit_IT,"ax",%progbits
 3719              		.align	2
 3720              		.thumb
ARM GAS  /tmp/cckhygdq.s 			page 96


 3721              		.thumb_func
 3723              	UART_EndTransmit_IT:
 3724              	.LFB99:
1764:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1765:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1766:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
1767:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief  Wraps up transmission in non blocking mode.
1768:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  huart: pointer to a UART_HandleTypeDef structure that contains
1769:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *                the configuration information for the specified UART module.
1770:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval HAL status
1771:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
1772:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** static HAL_StatusTypeDef UART_EndTransmit_IT(UART_HandleTypeDef *huart)
1773:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
 3725              		.loc 1 1773 0
 3726              		.cfi_startproc
 3727              		@ args = 0, pretend = 0, frame = 8
 3728              		@ frame_needed = 1, uses_anonymous_args = 0
 3729 0000 80B5     		push	{r7, lr}
 3730              	.LCFI199:
 3731              		.cfi_def_cfa_offset 8
 3732              		.cfi_offset 7, -8
 3733              		.cfi_offset 14, -4
 3734 0002 82B0     		sub	sp, sp, #8
 3735              	.LCFI200:
 3736              		.cfi_def_cfa_offset 16
 3737 0004 00AF     		add	r7, sp, #0
 3738              	.LCFI201:
 3739              		.cfi_def_cfa_register 7
 3740 0006 7860     		str	r0, [r7, #4]
1774:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Disable the UART Transmit Complete Interrupt */    
1775:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   __HAL_UART_DISABLE_IT(huart, UART_IT_TC);
 3741              		.loc 1 1775 0
 3742 0008 7B68     		ldr	r3, [r7, #4]
 3743 000a 1B68     		ldr	r3, [r3]
 3744 000c 7A68     		ldr	r2, [r7, #4]
 3745 000e 1268     		ldr	r2, [r2]
 3746 0010 D268     		ldr	r2, [r2, #12]
 3747 0012 22F04002 		bic	r2, r2, #64
 3748 0016 DA60     		str	r2, [r3, #12]
1776:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
1777:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Check if a receive process is ongoing or not */
1778:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if(huart->State == HAL_UART_STATE_BUSY_TX_RX) 
 3749              		.loc 1 1778 0
 3750 0018 7B68     		ldr	r3, [r7, #4]
 3751 001a 93F83930 		ldrb	r3, [r3, #57]
 3752 001e DBB2     		uxtb	r3, r3
 3753 0020 322B     		cmp	r3, #50
 3754 0022 04D1     		bne	.L180
1779:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
1780:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->State = HAL_UART_STATE_BUSY_RX;
 3755              		.loc 1 1780 0
 3756 0024 7B68     		ldr	r3, [r7, #4]
 3757 0026 2222     		movs	r2, #34
 3758 0028 83F83920 		strb	r2, [r3, #57]
 3759 002c 03E0     		b	.L181
 3760              	.L180:
1781:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
ARM GAS  /tmp/cckhygdq.s 			page 97


1782:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   else
1783:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
1784:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->State = HAL_UART_STATE_READY;
 3761              		.loc 1 1784 0
 3762 002e 7B68     		ldr	r3, [r7, #4]
 3763 0030 0122     		movs	r2, #1
 3764 0032 83F83920 		strb	r2, [r3, #57]
 3765              	.L181:
1785:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
1786:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
1787:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   HAL_UART_TxCpltCallback(huart);
 3766              		.loc 1 1787 0
 3767 0036 7868     		ldr	r0, [r7, #4]
 3768 0038 FFF7FEFF 		bl	HAL_UART_TxCpltCallback
1788:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
1789:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   return HAL_OK;
 3769              		.loc 1 1789 0
 3770 003c 0023     		movs	r3, #0
1790:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
 3771              		.loc 1 1790 0
 3772 003e 1846     		mov	r0, r3
 3773 0040 0837     		adds	r7, r7, #8
 3774              	.LCFI202:
 3775              		.cfi_def_cfa_offset 8
 3776 0042 BD46     		mov	sp, r7
 3777              	.LCFI203:
 3778              		.cfi_def_cfa_register 13
 3779              		@ sp needed
 3780 0044 80BD     		pop	{r7, pc}
 3781              		.cfi_endproc
 3782              	.LFE99:
 3784 0046 00BF     		.section	.text.UART_Receive_IT,"ax",%progbits
 3785              		.align	2
 3786              		.thumb
 3787              		.thumb_func
 3789              	UART_Receive_IT:
 3790              	.LFB100:
1791:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1792:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
1793:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief  Receives an amount of data in non blocking mode 
1794:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  huart: Pointer to a UART_HandleTypeDef structure that contains
1795:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *                the configuration information for the specified UART module.
1796:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval HAL status
1797:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
1798:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** static HAL_StatusTypeDef UART_Receive_IT(UART_HandleTypeDef *huart)
1799:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
 3791              		.loc 1 1799 0
 3792              		.cfi_startproc
 3793              		@ args = 0, pretend = 0, frame = 16
 3794              		@ frame_needed = 1, uses_anonymous_args = 0
 3795 0000 80B5     		push	{r7, lr}
 3796              	.LCFI204:
 3797              		.cfi_def_cfa_offset 8
 3798              		.cfi_offset 7, -8
 3799              		.cfi_offset 14, -4
 3800 0002 84B0     		sub	sp, sp, #16
 3801              	.LCFI205:
ARM GAS  /tmp/cckhygdq.s 			page 98


 3802              		.cfi_def_cfa_offset 24
 3803 0004 00AF     		add	r7, sp, #0
 3804              	.LCFI206:
 3805              		.cfi_def_cfa_register 7
 3806 0006 7860     		str	r0, [r7, #4]
1800:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   uint16_t* tmp;
1801:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   uint32_t tmp_state = 0;
 3807              		.loc 1 1801 0
 3808 0008 0023     		movs	r3, #0
 3809 000a FB60     		str	r3, [r7, #12]
1802:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
1803:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   tmp_state = huart->State; 
 3810              		.loc 1 1803 0
 3811 000c 7B68     		ldr	r3, [r7, #4]
 3812 000e 93F83930 		ldrb	r3, [r3, #57]
 3813 0012 DBB2     		uxtb	r3, r3
 3814 0014 FB60     		str	r3, [r7, #12]
1804:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if((tmp_state == HAL_UART_STATE_BUSY_RX) || (tmp_state == HAL_UART_STATE_BUSY_TX_RX))
 3815              		.loc 1 1804 0
 3816 0016 FB68     		ldr	r3, [r7, #12]
 3817 0018 222B     		cmp	r3, #34
 3818 001a 02D0     		beq	.L184
 3819              		.loc 1 1804 0 is_stmt 0 discriminator 1
 3820 001c FB68     		ldr	r3, [r7, #12]
 3821 001e 322B     		cmp	r3, #50
 3822 0020 7CD1     		bne	.L185
 3823              	.L184:
1805:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
1806:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     if(huart->Init.WordLength == UART_WORDLENGTH_9B)
 3824              		.loc 1 1806 0 is_stmt 1
 3825 0022 7B68     		ldr	r3, [r7, #4]
 3826 0024 9B68     		ldr	r3, [r3, #8]
 3827 0026 B3F5805F 		cmp	r3, #4096
 3828 002a 23D1     		bne	.L186
1807:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
1808:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       tmp = (uint16_t*) huart->pRxBuffPtr;
 3829              		.loc 1 1808 0
 3830 002c 7B68     		ldr	r3, [r7, #4]
 3831 002e 9B6A     		ldr	r3, [r3, #40]
 3832 0030 BB60     		str	r3, [r7, #8]
1809:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       if(huart->Init.Parity == UART_PARITY_NONE)
 3833              		.loc 1 1809 0
 3834 0032 7B68     		ldr	r3, [r7, #4]
 3835 0034 1B69     		ldr	r3, [r3, #16]
 3836 0036 002B     		cmp	r3, #0
 3837 0038 0ED1     		bne	.L187
1810:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       {
1811:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         *tmp = (uint16_t)(huart->Instance->DR & (uint16_t)0x01FF);
 3838              		.loc 1 1811 0
 3839 003a 7B68     		ldr	r3, [r7, #4]
 3840 003c 1B68     		ldr	r3, [r3]
 3841 003e 5B68     		ldr	r3, [r3, #4]
 3842 0040 9BB2     		uxth	r3, r3
 3843 0042 C3F30803 		ubfx	r3, r3, #0, #9
 3844 0046 9AB2     		uxth	r2, r3
 3845 0048 BB68     		ldr	r3, [r7, #8]
 3846 004a 1A80     		strh	r2, [r3]	@ movhi
ARM GAS  /tmp/cckhygdq.s 			page 99


1812:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         huart->pRxBuffPtr += 2;
 3847              		.loc 1 1812 0
 3848 004c 7B68     		ldr	r3, [r7, #4]
 3849 004e 9B6A     		ldr	r3, [r3, #40]
 3850 0050 9A1C     		adds	r2, r3, #2
 3851 0052 7B68     		ldr	r3, [r7, #4]
 3852 0054 9A62     		str	r2, [r3, #40]
 3853 0056 29E0     		b	.L189
 3854              	.L187:
1813:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       }
1814:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       else
1815:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       {
1816:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         *tmp = (uint16_t)(huart->Instance->DR & (uint16_t)0x00FF);
 3855              		.loc 1 1816 0
 3856 0058 7B68     		ldr	r3, [r7, #4]
 3857 005a 1B68     		ldr	r3, [r3]
 3858 005c 5B68     		ldr	r3, [r3, #4]
 3859 005e 9BB2     		uxth	r3, r3
 3860 0060 DBB2     		uxtb	r3, r3
 3861 0062 9AB2     		uxth	r2, r3
 3862 0064 BB68     		ldr	r3, [r7, #8]
 3863 0066 1A80     		strh	r2, [r3]	@ movhi
1817:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         huart->pRxBuffPtr += 1;
 3864              		.loc 1 1817 0
 3865 0068 7B68     		ldr	r3, [r7, #4]
 3866 006a 9B6A     		ldr	r3, [r3, #40]
 3867 006c 5A1C     		adds	r2, r3, #1
 3868 006e 7B68     		ldr	r3, [r7, #4]
 3869 0070 9A62     		str	r2, [r3, #40]
 3870 0072 1BE0     		b	.L189
 3871              	.L186:
1818:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       }
1819:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
1820:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     else
1821:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
1822:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       if(huart->Init.Parity == UART_PARITY_NONE)
 3872              		.loc 1 1822 0
 3873 0074 7B68     		ldr	r3, [r7, #4]
 3874 0076 1B69     		ldr	r3, [r3, #16]
 3875 0078 002B     		cmp	r3, #0
 3876 007a 0AD1     		bne	.L190
1823:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       {
1824:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         *huart->pRxBuffPtr++ = (uint8_t)(huart->Instance->DR & (uint8_t)0x00FF);
 3877              		.loc 1 1824 0
 3878 007c 7B68     		ldr	r3, [r7, #4]
 3879 007e 9B6A     		ldr	r3, [r3, #40]
 3880 0080 591C     		adds	r1, r3, #1
 3881 0082 7A68     		ldr	r2, [r7, #4]
 3882 0084 9162     		str	r1, [r2, #40]
 3883 0086 7A68     		ldr	r2, [r7, #4]
 3884 0088 1268     		ldr	r2, [r2]
 3885 008a 5268     		ldr	r2, [r2, #4]
 3886 008c D2B2     		uxtb	r2, r2
 3887 008e 1A70     		strb	r2, [r3]
 3888 0090 0CE0     		b	.L189
 3889              	.L190:
1825:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       }
ARM GAS  /tmp/cckhygdq.s 			page 100


1826:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       else
1827:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       {
1828:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         *huart->pRxBuffPtr++ = (uint8_t)(huart->Instance->DR & (uint8_t)0x007F);
 3890              		.loc 1 1828 0
 3891 0092 7B68     		ldr	r3, [r7, #4]
 3892 0094 9B6A     		ldr	r3, [r3, #40]
 3893 0096 591C     		adds	r1, r3, #1
 3894 0098 7A68     		ldr	r2, [r7, #4]
 3895 009a 9162     		str	r1, [r2, #40]
 3896 009c 7A68     		ldr	r2, [r7, #4]
 3897 009e 1268     		ldr	r2, [r2]
 3898 00a0 5268     		ldr	r2, [r2, #4]
 3899 00a2 D2B2     		uxtb	r2, r2
 3900 00a4 02F07F02 		and	r2, r2, #127
 3901 00a8 D2B2     		uxtb	r2, r2
 3902 00aa 1A70     		strb	r2, [r3]
 3903              	.L189:
1829:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       }
1830:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
1831:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1832:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     if(--huart->RxXferCount == 0)
 3904              		.loc 1 1832 0
 3905 00ac 7B68     		ldr	r3, [r7, #4]
 3906 00ae DB8D     		ldrh	r3, [r3, #46]
 3907 00b0 013B     		subs	r3, r3, #1
 3908 00b2 9AB2     		uxth	r2, r3
 3909 00b4 7B68     		ldr	r3, [r7, #4]
 3910 00b6 DA85     		strh	r2, [r3, #46]	@ movhi
 3911 00b8 7B68     		ldr	r3, [r7, #4]
 3912 00ba DB8D     		ldrh	r3, [r3, #46]
 3913 00bc 002B     		cmp	r3, #0
 3914 00be 2BD1     		bne	.L191
1833:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
1834:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       __HAL_UART_DISABLE_IT(huart, UART_IT_RXNE);
 3915              		.loc 1 1834 0
 3916 00c0 7B68     		ldr	r3, [r7, #4]
 3917 00c2 1B68     		ldr	r3, [r3]
 3918 00c4 7A68     		ldr	r2, [r7, #4]
 3919 00c6 1268     		ldr	r2, [r2]
 3920 00c8 D268     		ldr	r2, [r2, #12]
 3921 00ca 22F02002 		bic	r2, r2, #32
 3922 00ce DA60     		str	r2, [r3, #12]
1835:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1836:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       /* Check if a transmit process is ongoing or not */
1837:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       if(huart->State == HAL_UART_STATE_BUSY_TX_RX) 
 3923              		.loc 1 1837 0
 3924 00d0 7B68     		ldr	r3, [r7, #4]
 3925 00d2 93F83930 		ldrb	r3, [r3, #57]
 3926 00d6 DBB2     		uxtb	r3, r3
 3927 00d8 322B     		cmp	r3, #50
 3928 00da 04D1     		bne	.L192
1838:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       {
1839:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         huart->State = HAL_UART_STATE_BUSY_TX;
 3929              		.loc 1 1839 0
 3930 00dc 7B68     		ldr	r3, [r7, #4]
 3931 00de 1222     		movs	r2, #18
 3932 00e0 83F83920 		strb	r2, [r3, #57]
ARM GAS  /tmp/cckhygdq.s 			page 101


 3933 00e4 13E0     		b	.L193
 3934              	.L192:
1840:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       }
1841:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       else
1842:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       {
1843:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         /* Disable the UART Parity Error Interrupt */
1844:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         __HAL_UART_DISABLE_IT(huart, UART_IT_PE);
 3935              		.loc 1 1844 0
 3936 00e6 7B68     		ldr	r3, [r7, #4]
 3937 00e8 1B68     		ldr	r3, [r3]
 3938 00ea 7A68     		ldr	r2, [r7, #4]
 3939 00ec 1268     		ldr	r2, [r2]
 3940 00ee D268     		ldr	r2, [r2, #12]
 3941 00f0 22F48072 		bic	r2, r2, #256
 3942 00f4 DA60     		str	r2, [r3, #12]
1845:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1846:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         /* Disable the UART Error Interrupt: (Frame error, noise error, overrun error) */
1847:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         __HAL_UART_DISABLE_IT(huart, UART_IT_ERR);
 3943              		.loc 1 1847 0
 3944 00f6 7B68     		ldr	r3, [r7, #4]
 3945 00f8 1B68     		ldr	r3, [r3]
 3946 00fa 7A68     		ldr	r2, [r7, #4]
 3947 00fc 1268     		ldr	r2, [r2]
 3948 00fe 5269     		ldr	r2, [r2, #20]
 3949 0100 22F00102 		bic	r2, r2, #1
 3950 0104 5A61     		str	r2, [r3, #20]
1848:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1849:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         huart->State = HAL_UART_STATE_READY;
 3951              		.loc 1 1849 0
 3952 0106 7B68     		ldr	r3, [r7, #4]
 3953 0108 0122     		movs	r2, #1
 3954 010a 83F83920 		strb	r2, [r3, #57]
 3955              	.L193:
1850:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       }
1851:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       HAL_UART_RxCpltCallback(huart);
 3956              		.loc 1 1851 0
 3957 010e 7868     		ldr	r0, [r7, #4]
 3958 0110 FFF7FEFF 		bl	HAL_UART_RxCpltCallback
1852:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1853:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       return HAL_OK;
 3959              		.loc 1 1853 0
 3960 0114 0023     		movs	r3, #0
 3961 0116 02E0     		b	.L194
 3962              	.L191:
1854:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
1855:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     return HAL_OK;
 3963              		.loc 1 1855 0
 3964 0118 0023     		movs	r3, #0
 3965 011a 00E0     		b	.L194
 3966              	.L185:
1856:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
1857:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   else
1858:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
1859:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     return HAL_BUSY; 
 3967              		.loc 1 1859 0
 3968 011c 0223     		movs	r3, #2
 3969              	.L194:
ARM GAS  /tmp/cckhygdq.s 			page 102


1860:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
1861:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
 3970              		.loc 1 1861 0
 3971 011e 1846     		mov	r0, r3
 3972 0120 1037     		adds	r7, r7, #16
 3973              	.LCFI207:
 3974              		.cfi_def_cfa_offset 8
 3975 0122 BD46     		mov	sp, r7
 3976              	.LCFI208:
 3977              		.cfi_def_cfa_register 13
 3978              		@ sp needed
 3979 0124 80BD     		pop	{r7, pc}
 3980              		.cfi_endproc
 3981              	.LFE100:
 3983 0126 00BF     		.section	.text.UART_SetConfig,"ax",%progbits
 3984              		.align	2
 3985              		.thumb
 3986              		.thumb_func
 3988              	UART_SetConfig:
 3989              	.LFB101:
1862:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1863:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
1864:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief  Configures the UART peripheral. 
1865:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  huart: Pointer to a UART_HandleTypeDef structure that contains
1866:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *                the configuration information for the specified UART module.
1867:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval None
1868:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
1869:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** static void UART_SetConfig(UART_HandleTypeDef *huart)
1870:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
 3990              		.loc 1 1870 0
 3991              		.cfi_startproc
 3992              		@ args = 0, pretend = 0, frame = 16
 3993              		@ frame_needed = 1, uses_anonymous_args = 0
 3994 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 3995              	.LCFI209:
 3996              		.cfi_def_cfa_offset 20
 3997              		.cfi_offset 4, -20
 3998              		.cfi_offset 5, -16
 3999              		.cfi_offset 6, -12
 4000              		.cfi_offset 7, -8
 4001              		.cfi_offset 14, -4
 4002 0002 85B0     		sub	sp, sp, #20
 4003              	.LCFI210:
 4004              		.cfi_def_cfa_offset 40
 4005 0004 00AF     		add	r7, sp, #0
 4006              	.LCFI211:
 4007              		.cfi_def_cfa_register 7
 4008 0006 7860     		str	r0, [r7, #4]
1871:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   uint32_t tmpreg = 0x00;
 4009              		.loc 1 1871 0
 4010 0008 0023     		movs	r3, #0
 4011 000a FB60     		str	r3, [r7, #12]
1872:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
1873:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Check the parameters */
1874:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   assert_param(IS_UART_BAUDRATE(huart->Init.BaudRate));  
1875:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   assert_param(IS_UART_STOPBITS(huart->Init.StopBits));
1876:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   assert_param(IS_UART_PARITY(huart->Init.Parity));
ARM GAS  /tmp/cckhygdq.s 			page 103


1877:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   assert_param(IS_UART_MODE(huart->Init.Mode));
1878:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1879:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /*------- UART-associated USART registers setting : CR2 Configuration ------*/
1880:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Configure the UART Stop Bits: Set STOP[13:12] bits according 
1881:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****    * to huart->Init.StopBits value */
1882:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR2, USART_CR2_STOP, huart->Init.StopBits);
 4012              		.loc 1 1882 0
 4013 000c 7B68     		ldr	r3, [r7, #4]
 4014 000e 1B68     		ldr	r3, [r3]
 4015 0010 7A68     		ldr	r2, [r7, #4]
 4016 0012 1268     		ldr	r2, [r2]
 4017 0014 1269     		ldr	r2, [r2, #16]
 4018 0016 22F44051 		bic	r1, r2, #12288
 4019 001a 7A68     		ldr	r2, [r7, #4]
 4020 001c D268     		ldr	r2, [r2, #12]
 4021 001e 0A43     		orrs	r2, r2, r1
 4022 0020 1A61     		str	r2, [r3, #16]
1883:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1884:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /*------- UART-associated USART registers setting : CR1 Configuration ------*/
1885:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Configure the UART Word Length, Parity and mode: 
1886:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****      Set the M bits according to huart->Init.WordLength value 
1887:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****      Set PCE and PS bits according to huart->Init.Parity value
1888:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****      Set TE and RE bits according to huart->Init.Mode value */
1889:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   tmpreg = (uint32_t)huart->Init.WordLength | huart->Init.Parity | huart->Init.Mode ;
 4023              		.loc 1 1889 0
 4024 0022 7B68     		ldr	r3, [r7, #4]
 4025 0024 9A68     		ldr	r2, [r3, #8]
 4026 0026 7B68     		ldr	r3, [r7, #4]
 4027 0028 1B69     		ldr	r3, [r3, #16]
 4028 002a 1A43     		orrs	r2, r2, r3
 4029 002c 7B68     		ldr	r3, [r7, #4]
 4030 002e 5B69     		ldr	r3, [r3, #20]
 4031 0030 1343     		orrs	r3, r3, r2
 4032 0032 FB60     		str	r3, [r7, #12]
1890:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR1, 
 4033              		.loc 1 1890 0
 4034 0034 7B68     		ldr	r3, [r7, #4]
 4035 0036 1A68     		ldr	r2, [r3]
 4036 0038 7B68     		ldr	r3, [r7, #4]
 4037 003a 1B68     		ldr	r3, [r3]
 4038 003c DB68     		ldr	r3, [r3, #12]
 4039 003e 23F4B053 		bic	r3, r3, #5632
 4040 0042 23F00C03 		bic	r3, r3, #12
 4041 0046 F968     		ldr	r1, [r7, #12]
 4042 0048 0B43     		orrs	r3, r3, r1
 4043 004a D360     		str	r3, [r2, #12]
1891:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****              (uint32_t)(USART_CR1_M | USART_CR1_PCE | USART_CR1_PS | USART_CR1_TE | USART_CR1_RE), 
1892:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****              tmpreg);
1893:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
1894:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /*------- UART-associated USART registers setting : CR3 Configuration ------*/
1895:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Configure the UART HFC: Set CTSE and RTSE bits according to huart->Init.HwFlowCtl value */
1896:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR3, (USART_CR3_RTSE | USART_CR3_CTSE), huart->Init.HwFlowCtl);
 4044              		.loc 1 1896 0
 4045 004c 7B68     		ldr	r3, [r7, #4]
 4046 004e 1B68     		ldr	r3, [r3]
 4047 0050 7A68     		ldr	r2, [r7, #4]
 4048 0052 1268     		ldr	r2, [r2]
ARM GAS  /tmp/cckhygdq.s 			page 104


 4049 0054 5269     		ldr	r2, [r2, #20]
 4050 0056 22F44071 		bic	r1, r2, #768
 4051 005a 7A68     		ldr	r2, [r7, #4]
 4052 005c 9269     		ldr	r2, [r2, #24]
 4053 005e 0A43     		orrs	r2, r2, r1
 4054 0060 5A61     		str	r2, [r3, #20]
1897:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
1898:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /*------- UART-associated USART registers setting : BRR Configuration ------*/
1899:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if((huart->Instance == USART1))
 4055              		.loc 1 1899 0
 4056 0062 7B68     		ldr	r3, [r7, #4]
 4057 0064 1B68     		ldr	r3, [r3]
 4058 0066 6E4A     		ldr	r2, .L198
 4059 0068 9342     		cmp	r3, r2
 4060 006a 6BD1     		bne	.L196
1900:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
1901:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->Instance->BRR = UART_BRR_SAMPLING16(HAL_RCC_GetPCLK2Freq(), huart->Init.BaudRate);
 4061              		.loc 1 1901 0
 4062 006c 7B68     		ldr	r3, [r7, #4]
 4063 006e 1C68     		ldr	r4, [r3]
 4064 0070 FFF7FEFF 		bl	HAL_RCC_GetPCLK2Freq
 4065 0074 0246     		mov	r2, r0
 4066 0076 1346     		mov	r3, r2
 4067 0078 9B00     		lsls	r3, r3, #2
 4068 007a 1344     		add	r3, r3, r2
 4069 007c 9A00     		lsls	r2, r3, #2
 4070 007e 1A44     		add	r2, r2, r3
 4071 0080 7B68     		ldr	r3, [r7, #4]
 4072 0082 5B68     		ldr	r3, [r3, #4]
 4073 0084 9B00     		lsls	r3, r3, #2
 4074 0086 B2FBF3F3 		udiv	r3, r2, r3
 4075 008a 664A     		ldr	r2, .L198+4
 4076 008c A2FB0323 		umull	r2, r3, r2, r3
 4077 0090 5B09     		lsrs	r3, r3, #5
 4078 0092 1D01     		lsls	r5, r3, #4
 4079 0094 FFF7FEFF 		bl	HAL_RCC_GetPCLK2Freq
 4080 0098 0246     		mov	r2, r0
 4081 009a 1346     		mov	r3, r2
 4082 009c 9B00     		lsls	r3, r3, #2
 4083 009e 1344     		add	r3, r3, r2
 4084 00a0 9A00     		lsls	r2, r3, #2
 4085 00a2 1A44     		add	r2, r2, r3
 4086 00a4 7B68     		ldr	r3, [r7, #4]
 4087 00a6 5B68     		ldr	r3, [r3, #4]
 4088 00a8 9B00     		lsls	r3, r3, #2
 4089 00aa B2FBF3F6 		udiv	r6, r2, r3
 4090 00ae FFF7FEFF 		bl	HAL_RCC_GetPCLK2Freq
 4091 00b2 0246     		mov	r2, r0
 4092 00b4 1346     		mov	r3, r2
 4093 00b6 9B00     		lsls	r3, r3, #2
 4094 00b8 1344     		add	r3, r3, r2
 4095 00ba 9A00     		lsls	r2, r3, #2
 4096 00bc 1A44     		add	r2, r2, r3
 4097 00be 7B68     		ldr	r3, [r7, #4]
 4098 00c0 5B68     		ldr	r3, [r3, #4]
 4099 00c2 9B00     		lsls	r3, r3, #2
 4100 00c4 B2FBF3F3 		udiv	r3, r2, r3
ARM GAS  /tmp/cckhygdq.s 			page 105


 4101 00c8 564A     		ldr	r2, .L198+4
 4102 00ca A2FB0323 		umull	r2, r3, r2, r3
 4103 00ce 5B09     		lsrs	r3, r3, #5
 4104 00d0 6422     		movs	r2, #100
 4105 00d2 02FB03F3 		mul	r3, r2, r3
 4106 00d6 F31A     		subs	r3, r6, r3
 4107 00d8 1B01     		lsls	r3, r3, #4
 4108 00da 3233     		adds	r3, r3, #50
 4109 00dc 514A     		ldr	r2, .L198+4
 4110 00de A2FB0323 		umull	r2, r3, r2, r3
 4111 00e2 5B09     		lsrs	r3, r3, #5
 4112 00e4 03F0F003 		and	r3, r3, #240
 4113 00e8 1D44     		add	r5, r5, r3
 4114 00ea FFF7FEFF 		bl	HAL_RCC_GetPCLK2Freq
 4115 00ee 0246     		mov	r2, r0
 4116 00f0 1346     		mov	r3, r2
 4117 00f2 9B00     		lsls	r3, r3, #2
 4118 00f4 1344     		add	r3, r3, r2
 4119 00f6 9A00     		lsls	r2, r3, #2
 4120 00f8 1A44     		add	r2, r2, r3
 4121 00fa 7B68     		ldr	r3, [r7, #4]
 4122 00fc 5B68     		ldr	r3, [r3, #4]
 4123 00fe 9B00     		lsls	r3, r3, #2
 4124 0100 B2FBF3F6 		udiv	r6, r2, r3
 4125 0104 FFF7FEFF 		bl	HAL_RCC_GetPCLK2Freq
 4126 0108 0246     		mov	r2, r0
 4127 010a 1346     		mov	r3, r2
 4128 010c 9B00     		lsls	r3, r3, #2
 4129 010e 1344     		add	r3, r3, r2
 4130 0110 9A00     		lsls	r2, r3, #2
 4131 0112 1A44     		add	r2, r2, r3
 4132 0114 7B68     		ldr	r3, [r7, #4]
 4133 0116 5B68     		ldr	r3, [r3, #4]
 4134 0118 9B00     		lsls	r3, r3, #2
 4135 011a B2FBF3F3 		udiv	r3, r2, r3
 4136 011e 414A     		ldr	r2, .L198+4
 4137 0120 A2FB0323 		umull	r2, r3, r2, r3
 4138 0124 5B09     		lsrs	r3, r3, #5
 4139 0126 6422     		movs	r2, #100
 4140 0128 02FB03F3 		mul	r3, r2, r3
 4141 012c F31A     		subs	r3, r6, r3
 4142 012e 1B01     		lsls	r3, r3, #4
 4143 0130 3233     		adds	r3, r3, #50
 4144 0132 3C4A     		ldr	r2, .L198+4
 4145 0134 A2FB0323 		umull	r2, r3, r2, r3
 4146 0138 5B09     		lsrs	r3, r3, #5
 4147 013a 03F00F03 		and	r3, r3, #15
 4148 013e 2B44     		add	r3, r3, r5
 4149 0140 A360     		str	r3, [r4, #8]
 4150 0142 6AE0     		b	.L195
 4151              	.L196:
1902:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
1903:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   else
1904:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
1905:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->Instance->BRR = UART_BRR_SAMPLING16(HAL_RCC_GetPCLK1Freq(), huart->Init.BaudRate);
 4152              		.loc 1 1905 0
 4153 0144 7B68     		ldr	r3, [r7, #4]
ARM GAS  /tmp/cckhygdq.s 			page 106


 4154 0146 1C68     		ldr	r4, [r3]
 4155 0148 FFF7FEFF 		bl	HAL_RCC_GetPCLK1Freq
 4156 014c 0246     		mov	r2, r0
 4157 014e 1346     		mov	r3, r2
 4158 0150 9B00     		lsls	r3, r3, #2
 4159 0152 1344     		add	r3, r3, r2
 4160 0154 9A00     		lsls	r2, r3, #2
 4161 0156 1A44     		add	r2, r2, r3
 4162 0158 7B68     		ldr	r3, [r7, #4]
 4163 015a 5B68     		ldr	r3, [r3, #4]
 4164 015c 9B00     		lsls	r3, r3, #2
 4165 015e B2FBF3F3 		udiv	r3, r2, r3
 4166 0162 304A     		ldr	r2, .L198+4
 4167 0164 A2FB0323 		umull	r2, r3, r2, r3
 4168 0168 5B09     		lsrs	r3, r3, #5
 4169 016a 1D01     		lsls	r5, r3, #4
 4170 016c FFF7FEFF 		bl	HAL_RCC_GetPCLK1Freq
 4171 0170 0246     		mov	r2, r0
 4172 0172 1346     		mov	r3, r2
 4173 0174 9B00     		lsls	r3, r3, #2
 4174 0176 1344     		add	r3, r3, r2
 4175 0178 9A00     		lsls	r2, r3, #2
 4176 017a 1A44     		add	r2, r2, r3
 4177 017c 7B68     		ldr	r3, [r7, #4]
 4178 017e 5B68     		ldr	r3, [r3, #4]
 4179 0180 9B00     		lsls	r3, r3, #2
 4180 0182 B2FBF3F6 		udiv	r6, r2, r3
 4181 0186 FFF7FEFF 		bl	HAL_RCC_GetPCLK1Freq
 4182 018a 0246     		mov	r2, r0
 4183 018c 1346     		mov	r3, r2
 4184 018e 9B00     		lsls	r3, r3, #2
 4185 0190 1344     		add	r3, r3, r2
 4186 0192 9A00     		lsls	r2, r3, #2
 4187 0194 1A44     		add	r2, r2, r3
 4188 0196 7B68     		ldr	r3, [r7, #4]
 4189 0198 5B68     		ldr	r3, [r3, #4]
 4190 019a 9B00     		lsls	r3, r3, #2
 4191 019c B2FBF3F3 		udiv	r3, r2, r3
 4192 01a0 204A     		ldr	r2, .L198+4
 4193 01a2 A2FB0323 		umull	r2, r3, r2, r3
 4194 01a6 5B09     		lsrs	r3, r3, #5
 4195 01a8 6422     		movs	r2, #100
 4196 01aa 02FB03F3 		mul	r3, r2, r3
 4197 01ae F31A     		subs	r3, r6, r3
 4198 01b0 1B01     		lsls	r3, r3, #4
 4199 01b2 3233     		adds	r3, r3, #50
 4200 01b4 1B4A     		ldr	r2, .L198+4
 4201 01b6 A2FB0323 		umull	r2, r3, r2, r3
 4202 01ba 5B09     		lsrs	r3, r3, #5
 4203 01bc 03F0F003 		and	r3, r3, #240
 4204 01c0 1D44     		add	r5, r5, r3
 4205 01c2 FFF7FEFF 		bl	HAL_RCC_GetPCLK1Freq
 4206 01c6 0246     		mov	r2, r0
 4207 01c8 1346     		mov	r3, r2
 4208 01ca 9B00     		lsls	r3, r3, #2
 4209 01cc 1344     		add	r3, r3, r2
 4210 01ce 9A00     		lsls	r2, r3, #2
ARM GAS  /tmp/cckhygdq.s 			page 107


 4211 01d0 1A44     		add	r2, r2, r3
 4212 01d2 7B68     		ldr	r3, [r7, #4]
 4213 01d4 5B68     		ldr	r3, [r3, #4]
 4214 01d6 9B00     		lsls	r3, r3, #2
 4215 01d8 B2FBF3F6 		udiv	r6, r2, r3
 4216 01dc FFF7FEFF 		bl	HAL_RCC_GetPCLK1Freq
 4217 01e0 0246     		mov	r2, r0
 4218 01e2 1346     		mov	r3, r2
 4219 01e4 9B00     		lsls	r3, r3, #2
 4220 01e6 1344     		add	r3, r3, r2
 4221 01e8 9A00     		lsls	r2, r3, #2
 4222 01ea 1A44     		add	r2, r2, r3
 4223 01ec 7B68     		ldr	r3, [r7, #4]
 4224 01ee 5B68     		ldr	r3, [r3, #4]
 4225 01f0 9B00     		lsls	r3, r3, #2
 4226 01f2 B2FBF3F3 		udiv	r3, r2, r3
 4227 01f6 0B4A     		ldr	r2, .L198+4
 4228 01f8 A2FB0323 		umull	r2, r3, r2, r3
 4229 01fc 5B09     		lsrs	r3, r3, #5
 4230 01fe 6422     		movs	r2, #100
 4231 0200 02FB03F3 		mul	r3, r2, r3
 4232 0204 F31A     		subs	r3, r6, r3
 4233 0206 1B01     		lsls	r3, r3, #4
 4234 0208 3233     		adds	r3, r3, #50
 4235 020a 064A     		ldr	r2, .L198+4
 4236 020c A2FB0323 		umull	r2, r3, r2, r3
 4237 0210 5B09     		lsrs	r3, r3, #5
 4238 0212 03F00F03 		and	r3, r3, #15
 4239 0216 2B44     		add	r3, r3, r5
 4240 0218 A360     		str	r3, [r4, #8]
 4241              	.L195:
1906:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
1907:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
 4242              		.loc 1 1907 0
 4243 021a 1437     		adds	r7, r7, #20
 4244              	.LCFI212:
 4245              		.cfi_def_cfa_offset 20
 4246 021c BD46     		mov	sp, r7
 4247              	.LCFI213:
 4248              		.cfi_def_cfa_register 13
 4249              		@ sp needed
 4250 021e F0BD     		pop	{r4, r5, r6, r7, pc}
 4251              	.L199:
 4252              		.align	2
 4253              	.L198:
 4254 0220 00380140 		.word	1073821696
 4255 0224 1F85EB51 		.word	1374389535
 4256              		.cfi_endproc
 4257              	.LFE101:
 4259              		.text
 4260              	.Letext0:
 4261              		.file 2 "/usr/include/newlib/machine/_default_types.h"
 4262              		.file 3 "/usr/include/newlib/stdint.h"
 4263              		.file 4 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f103xb.h"
 4264              		.file 5 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f1xx.h"
 4265              		.file 6 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_def.h"
 4266              		.file 7 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_dma.h"
ARM GAS  /tmp/cckhygdq.s 			page 108


 4267              		.file 8 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_uart.h"
 4268              		.file 9 "Drivers/CMSIS/Include/core_cm3.h"
ARM GAS  /tmp/cckhygdq.s 			page 109


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32f1xx_hal_uart.c
     /tmp/cckhygdq.s:19     .text.HAL_UART_Init:0000000000000000 $t
     /tmp/cckhygdq.s:24     .text.HAL_UART_Init:0000000000000000 HAL_UART_Init
     /tmp/cckhygdq.s:601    .text.HAL_UART_MspInit:0000000000000000 HAL_UART_MspInit
     /tmp/cckhygdq.s:3988   .text.UART_SetConfig:0000000000000000 UART_SetConfig
     /tmp/cckhygdq.s:129    .text.HAL_HalfDuplex_Init:0000000000000000 $t
     /tmp/cckhygdq.s:134    .text.HAL_HalfDuplex_Init:0000000000000000 HAL_HalfDuplex_Init
     /tmp/cckhygdq.s:246    .text.HAL_LIN_Init:0000000000000000 $t
     /tmp/cckhygdq.s:251    .text.HAL_LIN_Init:0000000000000000 HAL_LIN_Init
     /tmp/cckhygdq.s:374    .text.HAL_MultiProcessor_Init:0000000000000000 $t
     /tmp/cckhygdq.s:379    .text.HAL_MultiProcessor_Init:0000000000000000 HAL_MultiProcessor_Init
     /tmp/cckhygdq.s:506    .text.HAL_UART_DeInit:0000000000000000 $t
     /tmp/cckhygdq.s:511    .text.HAL_UART_DeInit:0000000000000000 HAL_UART_DeInit
     /tmp/cckhygdq.s:641    .text.HAL_UART_MspDeInit:0000000000000000 HAL_UART_MspDeInit
     /tmp/cckhygdq.s:596    .text.HAL_UART_MspInit:0000000000000000 $t
     /tmp/cckhygdq.s:636    .text.HAL_UART_MspDeInit:0000000000000000 $t
     /tmp/cckhygdq.s:676    .text.HAL_UART_Transmit:0000000000000000 $t
     /tmp/cckhygdq.s:681    .text.HAL_UART_Transmit:0000000000000000 HAL_UART_Transmit
     /tmp/cckhygdq.s:3381   .text.UART_WaitOnFlagUntilTimeout:0000000000000000 UART_WaitOnFlagUntilTimeout
     /tmp/cckhygdq.s:912    .text.HAL_UART_Receive:0000000000000000 $t
     /tmp/cckhygdq.s:917    .text.HAL_UART_Receive:0000000000000000 HAL_UART_Receive
     /tmp/cckhygdq.s:1165   .text.HAL_UART_Transmit_IT:0000000000000000 $t
     /tmp/cckhygdq.s:1170   .text.HAL_UART_Transmit_IT:0000000000000000 HAL_UART_Transmit_IT
     /tmp/cckhygdq.s:1304   .text.HAL_UART_Receive_IT:0000000000000000 $t
     /tmp/cckhygdq.s:1309   .text.HAL_UART_Receive_IT:0000000000000000 HAL_UART_Receive_IT
     /tmp/cckhygdq.s:1459   .text.HAL_UART_Transmit_DMA:0000000000000000 $t
     /tmp/cckhygdq.s:1464   .text.HAL_UART_Transmit_DMA:0000000000000000 HAL_UART_Transmit_DMA
     /tmp/cckhygdq.s:1631   .text.HAL_UART_Transmit_DMA:00000000000000f0 $d
     /tmp/cckhygdq.s:3087   .text.UART_DMATransmitCplt:0000000000000000 UART_DMATransmitCplt
     /tmp/cckhygdq.s:3159   .text.UART_DMATxHalfCplt:0000000000000000 UART_DMATxHalfCplt
     /tmp/cckhygdq.s:3321   .text.UART_DMAError:0000000000000000 UART_DMAError
     /tmp/cckhygdq.s:1638   .text.HAL_UART_Receive_DMA:0000000000000000 $t
     /tmp/cckhygdq.s:1643   .text.HAL_UART_Receive_DMA:0000000000000000 HAL_UART_Receive_DMA
     /tmp/cckhygdq.s:1800   .text.HAL_UART_Receive_DMA:00000000000000dc $d
     /tmp/cckhygdq.s:3201   .text.UART_DMAReceiveCplt:0000000000000000 UART_DMAReceiveCplt
     /tmp/cckhygdq.s:3279   .text.UART_DMARxHalfCplt:0000000000000000 UART_DMARxHalfCplt
     /tmp/cckhygdq.s:1807   .text.HAL_UART_DMAPause:0000000000000000 $t
     /tmp/cckhygdq.s:1812   .text.HAL_UART_DMAPause:0000000000000000 HAL_UART_DMAPause
     /tmp/cckhygdq.s:1924   .text.HAL_UART_DMAResume:0000000000000000 $t
     /tmp/cckhygdq.s:1929   .text.HAL_UART_DMAResume:0000000000000000 HAL_UART_DMAResume
     /tmp/cckhygdq.s:2065   .text.HAL_UART_DMAStop:0000000000000000 $t
     /tmp/cckhygdq.s:2070   .text.HAL_UART_DMAStop:0000000000000000 HAL_UART_DMAStop
     /tmp/cckhygdq.s:2138   .text.HAL_UART_IRQHandler:0000000000000000 $t
     /tmp/cckhygdq.s:2143   .text.HAL_UART_IRQHandler:0000000000000000 HAL_UART_IRQHandler
     /tmp/cckhygdq.s:3789   .text.UART_Receive_IT:0000000000000000 UART_Receive_IT
     /tmp/cckhygdq.s:3583   .text.UART_Transmit_IT:0000000000000000 UART_Transmit_IT
     /tmp/cckhygdq.s:3723   .text.UART_EndTransmit_IT:0000000000000000 UART_EndTransmit_IT
     /tmp/cckhygdq.s:2572   .text.HAL_UART_ErrorCallback:0000000000000000 HAL_UART_ErrorCallback
     /tmp/cckhygdq.s:2407   .text.HAL_UART_TxCpltCallback:0000000000000000 $t
     /tmp/cckhygdq.s:2412   .text.HAL_UART_TxCpltCallback:0000000000000000 HAL_UART_TxCpltCallback
     /tmp/cckhygdq.s:2447   .text.HAL_UART_TxHalfCpltCallback:0000000000000000 $t
     /tmp/cckhygdq.s:2452   .text.HAL_UART_TxHalfCpltCallback:0000000000000000 HAL_UART_TxHalfCpltCallback
     /tmp/cckhygdq.s:2487   .text.HAL_UART_RxCpltCallback:0000000000000000 $t
     /tmp/cckhygdq.s:2492   .text.HAL_UART_RxCpltCallback:0000000000000000 HAL_UART_RxCpltCallback
     /tmp/cckhygdq.s:2527   .text.HAL_UART_RxHalfCpltCallback:0000000000000000 $t
     /tmp/cckhygdq.s:2532   .text.HAL_UART_RxHalfCpltCallback:0000000000000000 HAL_UART_RxHalfCpltCallback
ARM GAS  /tmp/cckhygdq.s 			page 110


     /tmp/cckhygdq.s:2567   .text.HAL_UART_ErrorCallback:0000000000000000 $t
     /tmp/cckhygdq.s:2607   .text.HAL_LIN_SendBreak:0000000000000000 $t
     /tmp/cckhygdq.s:2612   .text.HAL_LIN_SendBreak:0000000000000000 HAL_LIN_SendBreak
     /tmp/cckhygdq.s:2684   .text.HAL_MultiProcessor_EnterMuteMode:0000000000000000 $t
     /tmp/cckhygdq.s:2689   .text.HAL_MultiProcessor_EnterMuteMode:0000000000000000 HAL_MultiProcessor_EnterMuteMode
     /tmp/cckhygdq.s:2761   .text.HAL_MultiProcessor_ExitMuteMode:0000000000000000 $t
     /tmp/cckhygdq.s:2766   .text.HAL_MultiProcessor_ExitMuteMode:0000000000000000 HAL_MultiProcessor_ExitMuteMode
     /tmp/cckhygdq.s:2838   .text.HAL_HalfDuplex_EnableTransmitter:0000000000000000 $t
     /tmp/cckhygdq.s:2843   .text.HAL_HalfDuplex_EnableTransmitter:0000000000000000 HAL_HalfDuplex_EnableTransmitter
     /tmp/cckhygdq.s:2916   .text.HAL_HalfDuplex_EnableReceiver:0000000000000000 $t
     /tmp/cckhygdq.s:2921   .text.HAL_HalfDuplex_EnableReceiver:0000000000000000 HAL_HalfDuplex_EnableReceiver
     /tmp/cckhygdq.s:2994   .text.HAL_UART_GetState:0000000000000000 $t
     /tmp/cckhygdq.s:2999   .text.HAL_UART_GetState:0000000000000000 HAL_UART_GetState
     /tmp/cckhygdq.s:3039   .text.HAL_UART_GetError:0000000000000000 $t
     /tmp/cckhygdq.s:3044   .text.HAL_UART_GetError:0000000000000000 HAL_UART_GetError
     /tmp/cckhygdq.s:3083   .text.UART_DMATransmitCplt:0000000000000000 $t
     /tmp/cckhygdq.s:3155   .text.UART_DMATxHalfCplt:0000000000000000 $t
     /tmp/cckhygdq.s:3197   .text.UART_DMAReceiveCplt:0000000000000000 $t
     /tmp/cckhygdq.s:3275   .text.UART_DMARxHalfCplt:0000000000000000 $t
     /tmp/cckhygdq.s:3317   .text.UART_DMAError:0000000000000000 $t
     /tmp/cckhygdq.s:3377   .text.UART_WaitOnFlagUntilTimeout:0000000000000000 $t
     /tmp/cckhygdq.s:3579   .text.UART_Transmit_IT:0000000000000000 $t
     /tmp/cckhygdq.s:3719   .text.UART_EndTransmit_IT:0000000000000000 $t
     /tmp/cckhygdq.s:3785   .text.UART_Receive_IT:0000000000000000 $t
     /tmp/cckhygdq.s:3984   .text.UART_SetConfig:0000000000000000 $t
     /tmp/cckhygdq.s:4254   .text.UART_SetConfig:0000000000000220 $d
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
HAL_DMA_Start_IT
HAL_DMA_Abort
HAL_GetTick
HAL_RCC_GetPCLK2Freq
HAL_RCC_GetPCLK1Freq
