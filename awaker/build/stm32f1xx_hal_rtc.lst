ARM GAS  /tmp/cccafUze.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"stm32f1xx_hal_rtc.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.section	.text.HAL_RTC_Init,"ax",%progbits
  19              		.align	2
  20              		.global	HAL_RTC_Init
  21              		.thumb
  22              		.thumb_func
  24              	HAL_RTC_Init:
  25              	.LFB63:
  26              		.file 1 "Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c"
   1:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** /**
   2:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   ******************************************************************************
   3:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @file    stm32f1xx_hal_rtc.c
   4:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @author  MCD Application Team
   5:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @version V1.0.4
   6:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @date    29-April-2016
   7:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @brief   RTC HAL module driver.
   8:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   *          This file provides firmware functions to manage the following 
   9:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   *          functionalities of the Real Time Clock (RTC) peripheral:
  10:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   *           + Initialization and de-initialization functions
  11:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   *           + RTC Time and Date functions
  12:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   *           + RTC Alarm functions
  13:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   *           + Peripheral Control functions   
  14:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   *           + Peripheral State functions
  15:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   *         
  16:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   @verbatim
  17:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   ==============================================================================
  18:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****                   ##### How to use this driver #####
  19:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   ==================================================================
  20:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   [..] 
  21:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     (+) Enable the RTC domain access (see description in the section above).
  22:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     (+) Configure the RTC Prescaler (Asynchronous prescaler to generate RTC 1Hz time base) 
  23:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****         using the HAL_RTC_Init() function.
  24:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   
  25:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   *** Time and Date configuration ***
  26:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   ===================================
  27:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   [..] 
  28:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     (+) To configure the RTC Calendar (Time and Date) use the HAL_RTC_SetTime() 
  29:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****         and HAL_RTC_SetDate() functions.
  30:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     (+) To read the RTC Calendar, use the HAL_RTC_GetTime() and HAL_RTC_GetDate() functions.
  31:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   
  32:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   *** Alarm configuration ***
ARM GAS  /tmp/cccafUze.s 			page 2


  33:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   ===========================
  34:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   [..]
  35:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     (+) To configure the RTC Alarm use the HAL_RTC_SetAlarm() function. 
  36:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****         You can also configure the RTC Alarm with interrupt mode using the HAL_RTC_SetAlarm_IT() fu
  37:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     (+) To read the RTC Alarm, use the HAL_RTC_GetAlarm() function.
  38:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   
  39:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   *** Tamper configuration ***
  40:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   ============================
  41:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   [..]
  42:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     (+) Enable the RTC Tamper and configure the Tamper Level using the 
  43:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****         HAL_RTCEx_SetTamper() function. You can configure RTC Tamper with interrupt
  44:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****         mode using HAL_RTCEx_SetTamper_IT() function.
  45:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     (+) The TAMPER1 alternate function can be mapped to PC13
  46:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
  47:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   *** Backup Data Registers configuration ***
  48:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   ===========================================
  49:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   [..]
  50:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     (+) To write to the RTC Backup Data registers, use the HAL_RTCEx_BKUPWrite()
  51:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****         function.  
  52:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     (+) To read the RTC Backup Data registers, use the HAL_RTCEx_BKUPRead()
  53:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****         function.
  54:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****      
  55:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****                   ##### WARNING: Drivers Restrictions  #####
  56:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   ==================================================================
  57:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   [..] RTC version used on STM32F1 families is version V1. All the features supported by V2
  58:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****        (other families) will be not supported on F1.
  59:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   [..] As on V2, main RTC features are managed by HW. But on F1, date feature is completely 
  60:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****        managed by SW.
  61:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   [..] Then, there are some restrictions compared to other families:
  62:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     (+) Only format 24 hours supported in HAL (format 12 hours not supported)
  63:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     (+) Date is saved in SRAM. Then, when MCU is in STOP or STANDBY mode, date will be lost.
  64:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****         User should implement a way to save date before entering in low power mode (an 
  65:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****         example is provided with firmware package based on backup registers)
  66:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     (+) Date is automatically updated each time a HAL_RTC_GetTime or HAL_RTC_GetDate is called.
  67:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     (+) Alarm detection is limited to 1 day. It will expire only 1 time (no alarm repetition, need
  68:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****         to program a new alarm)
  69:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
  70:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****               ##### Backup Domain Operating Condition #####
  71:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   ==============================================================================
  72:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   [..] The real-time clock (RTC) and the RTC backup registers can be powered
  73:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****        from the VBAT voltage when the main VDD supply is powered off.
  74:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****        To retain the content of the RTC backup registers and supply the RTC 
  75:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****        when VDD is turned off, VBAT pin can be connected to an optional 
  76:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****        standby voltage supplied by a battery or by another source.
  77:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
  78:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   [..] To allow the RTC operating even when the main digital supply (VDD) is turned
  79:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****        off, the VBAT pin powers the following blocks:
  80:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     (+) The RTC
  81:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     (+) The LSE oscillator
  82:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     (+) PC13 I/O
  83:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   
  84:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   [..] When the backup domain is supplied by VDD (analog switch connected to VDD),
  85:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****        the following pins are available:
  86:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     (+) PC13 can be used as a Tamper pin
  87:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   
  88:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   [..] When the backup domain is supplied by VBAT (analog switch connected to VBAT 
  89:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****        because VDD is not present), the following pins are available:
ARM GAS  /tmp/cccafUze.s 			page 3


  90:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     (+) PC13 can be used as the Tamper pin 
  91:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****              
  92:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****                    ##### Backup Domain Reset #####
  93:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   ==================================================================
  94:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   [..] The backup domain reset sets all RTC registers and the RCC_BDCR register
  95:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****        to their reset values. 
  96:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   [..] A backup domain reset is generated when one of the following events occurs:
  97:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     (#) Software reset, triggered by setting the BDRST bit in the 
  98:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****         RCC Backup domain control register (RCC_BDCR). 
  99:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     (#) VDD or VBAT power on, if both supplies have previously been powered off.  
 100:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     (#) Tamper detection event resets all data backup registers.
 101:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 102:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****                    ##### Backup Domain Access #####
 103:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   ==================================================================
 104:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   [..] After reset, the backup domain (RTC registers, RTC backup data 
 105:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****        registers and backup SRAM) is protected against possible unwanted write 
 106:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****        accesses. 
 107:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   [..] To enable access to the RTC Domain and RTC registers, proceed as follows:
 108:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     (+) Call the function HAL_RCCEx_PeriphCLKConfig in using RCC_PERIPHCLK_RTC for
 109:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****         PeriphClockSelection and select RTCClockSelection (LSE, LSI or HSE)
 110:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     (+) Enable the BKP clock in using __HAL_RCC_BKP_CLK_ENABLE()
 111:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   
 112:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****                   ##### RTC and low power modes #####
 113:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   ==================================================================
 114:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   [..] The MCU can be woken up from a low power mode by an RTC alternate 
 115:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****        function.
 116:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   [..] The RTC alternate functions are the RTC alarms (Alarm A), 
 117:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****        and RTC tamper event detection.
 118:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****        These RTC alternate functions can wake up the system from the Stop and 
 119:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****        Standby low power modes.
 120:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   [..] The system can also wake up from low power modes without depending 
 121:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****        on an external interrupt (Auto-wakeup mode), by using the RTC alarm.
 122:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****      
 123:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****    @endverbatim
 124:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   ******************************************************************************
 125:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @attention
 126:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   *
 127:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * <h2><center>&copy; COPYRIGHT(c) 2016 STMicroelectronics</center></h2>
 128:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   *
 129:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * Redistribution and use in source and binary forms, with or without modification,
 130:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * are permitted provided that the following conditions are met:
 131:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   *   1. Redistributions of source code must retain the above copyright notice,
 132:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   *      this list of conditions and the following disclaimer.
 133:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
 134:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   *      this list of conditions and the following disclaimer in the documentation
 135:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   *      and/or other materials provided with the distribution.
 136:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
 137:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   *      may be used to endorse or promote products derived from this software
 138:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   *      without specific prior written permission.
 139:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   *
 140:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 141:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 142:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 143:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
 144:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 145:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
 146:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
ARM GAS  /tmp/cccafUze.s 			page 4


 147:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
 148:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
 149:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 150:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   *
 151:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   ******************************************************************************
 152:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   */ 
 153:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 154:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** /* Includes ------------------------------------------------------------------*/
 155:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** #include "stm32f1xx_hal.h"
 156:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 157:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** /** @addtogroup STM32F1xx_HAL_Driver
 158:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @{
 159:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   */
 160:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 161:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** /** @defgroup RTC RTC
 162:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @brief RTC HAL module driver
 163:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @{
 164:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   */
 165:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 166:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** #ifdef HAL_RTC_MODULE_ENABLED
 167:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 168:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** /* Private typedef -----------------------------------------------------------*/
 169:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** /* Private define ------------------------------------------------------------*/
 170:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** /** @defgroup RTC_Private_Constants RTC Private Constants
 171:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @{
 172:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   */
 173:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** #define RTC_ALARM_RESETVALUE_REGISTER    (uint16_t)0xFFFF
 174:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** #define RTC_ALARM_RESETVALUE             (uint32_t)0xFFFFFFFF
 175:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 176:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** /**
 177:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @}
 178:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   */
 179:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 180:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** /* Private macro -------------------------------------------------------------*/
 181:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** /** @defgroup RTC_Private_Macros RTC Private Macros
 182:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @{
 183:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   */
 184:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** /**
 185:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @}
 186:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   */
 187:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 188:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** /* Private variables ---------------------------------------------------------*/
 189:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** /* Private function prototypes -----------------------------------------------*/
 190:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** /** @defgroup RTC_Private_Functions RTC Private Functions
 191:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @{
 192:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   */
 193:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** static uint32_t           RTC_ReadTimeCounter(RTC_HandleTypeDef* hrtc);
 194:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** static HAL_StatusTypeDef  RTC_WriteTimeCounter(RTC_HandleTypeDef* hrtc, uint32_t TimeCounter);
 195:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** static uint32_t           RTC_ReadAlarmCounter(RTC_HandleTypeDef* hrtc);
 196:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** static HAL_StatusTypeDef  RTC_WriteAlarmCounter(RTC_HandleTypeDef* hrtc, uint32_t AlarmCounter);
 197:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** static HAL_StatusTypeDef  RTC_EnterInitMode(RTC_HandleTypeDef* hrtc);
 198:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** static HAL_StatusTypeDef  RTC_ExitInitMode(RTC_HandleTypeDef* hrtc);
 199:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** static uint8_t            RTC_ByteToBcd2(uint8_t Value);
 200:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** static uint8_t            RTC_Bcd2ToByte(uint8_t Value);
 201:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** static uint8_t            RTC_IsLeapYear(uint16_t nYear);
 202:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** static void               RTC_DateUpdate(RTC_HandleTypeDef* hrtc, uint32_t DayElapsed);
 203:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** static uint8_t            RTC_WeekDayNum(uint32_t nYear, uint8_t nMonth, uint8_t nDay);
ARM GAS  /tmp/cccafUze.s 			page 5


 204:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 205:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** /**
 206:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @}
 207:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   */
 208:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 209:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** /* Private functions ---------------------------------------------------------*/
 210:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** /** @defgroup RTC_Exported_Functions RTC Exported Functions
 211:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @{
 212:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   */
 213:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   
 214:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** /** @defgroup RTC_Exported_Functions_Group1 Initialization and de-initialization functions 
 215:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****  *  @brief    Initialization and Configuration functions 
 216:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****  *
 217:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** @verbatim    
 218:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****  ===============================================================================
 219:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****               ##### Initialization and de-initialization functions #####
 220:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****  ===============================================================================
 221:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****    [..] This section provides functions allowing to initialize and configure the 
 222:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****          RTC Prescaler (Asynchronous), disable RTC registers Write protection, 
 223:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****          enter and exit the RTC initialization mode, 
 224:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****          RTC registers synchronization check and reference clock detection enable.
 225:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****          (#) The RTC Prescaler should be programmed to generate the RTC 1Hz time base. 
 226:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****          (#) All RTC registers are Write protected. Writing to the RTC registers
 227:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****              is enabled by setting the CNF bit in the RTC_CRL register.
 228:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****          (#) To read the calendar after wakeup from low power modes (Standby or Stop) 
 229:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****              the software must first wait for the RSF bit (Register Synchronized Flag) 
 230:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****              in the RTC_CRL register to be set by hardware.
 231:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****              The HAL_RTC_WaitForSynchro() function implements the above software 
 232:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****              sequence (RSF clear and RSF check).
 233:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****  
 234:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** @endverbatim
 235:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @{
 236:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   */
 237:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 238:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** /**
 239:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @brief  Initializes the RTC peripheral 
 240:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @param  hrtc   pointer to a RTC_HandleTypeDef structure that contains
 241:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   *                the configuration information for RTC.
 242:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @retval HAL status
 243:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   */
 244:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** HAL_StatusTypeDef HAL_RTC_Init(RTC_HandleTypeDef *hrtc)
 245:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** {
  27              		.loc 1 245 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 16
  30              		@ frame_needed = 1, uses_anonymous_args = 0
  31 0000 80B5     		push	{r7, lr}
  32              	.LCFI0:
  33              		.cfi_def_cfa_offset 8
  34              		.cfi_offset 7, -8
  35              		.cfi_offset 14, -4
  36 0002 84B0     		sub	sp, sp, #16
  37              	.LCFI1:
  38              		.cfi_def_cfa_offset 24
  39 0004 00AF     		add	r7, sp, #0
  40              	.LCFI2:
  41              		.cfi_def_cfa_register 7
ARM GAS  /tmp/cccafUze.s 			page 6


  42 0006 7860     		str	r0, [r7, #4]
 246:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   uint32_t prescaler = 0;
  43              		.loc 1 246 0
  44 0008 0023     		movs	r3, #0
  45 000a FB60     		str	r3, [r7, #12]
 247:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   /* Check input parameters */
 248:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   if(hrtc == NULL)
  46              		.loc 1 248 0
  47 000c 7B68     		ldr	r3, [r7, #4]
  48 000e 002B     		cmp	r3, #0
  49 0010 01D1     		bne	.L2
 249:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {
 250:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****      return HAL_ERROR;
  50              		.loc 1 250 0
  51 0012 0123     		movs	r3, #1
  52 0014 84E0     		b	.L3
  53              	.L2:
 251:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   }
 252:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   
 253:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   /* Check the parameters */
 254:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   assert_param(IS_RTC_ALL_INSTANCE(hrtc->Instance));
 255:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   assert_param(IS_RTC_CALIB_OUTPUT(hrtc->Init.OutPut));
 256:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   assert_param(IS_RTC_ASYNCH_PREDIV(hrtc->Init.AsynchPrediv));
 257:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     
 258:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   if(hrtc->State == HAL_RTC_STATE_RESET)
  54              		.loc 1 258 0
  55 0016 7B68     		ldr	r3, [r7, #4]
  56 0018 5B7C     		ldrb	r3, [r3, #17]
  57 001a DBB2     		uxtb	r3, r3
  58 001c 002B     		cmp	r3, #0
  59 001e 05D1     		bne	.L4
 259:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {
 260:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     /* Allocate lock resource and initialize it */
 261:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     hrtc->Lock = HAL_UNLOCKED;
  60              		.loc 1 261 0
  61 0020 7B68     		ldr	r3, [r7, #4]
  62 0022 0022     		movs	r2, #0
  63 0024 1A74     		strb	r2, [r3, #16]
 262:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     
 263:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     /* Initialize RTC MSP */
 264:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     HAL_RTC_MspInit(hrtc);
  64              		.loc 1 264 0
  65 0026 7868     		ldr	r0, [r7, #4]
  66 0028 FFF7FEFF 		bl	HAL_RTC_MspInit
  67              	.L4:
 265:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   }
 266:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   
 267:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   /* Set RTC state */  
 268:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   hrtc->State = HAL_RTC_STATE_BUSY;  
  68              		.loc 1 268 0
  69 002c 7B68     		ldr	r3, [r7, #4]
  70 002e 0222     		movs	r2, #2
  71 0030 5A74     		strb	r2, [r3, #17]
 269:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****        
 270:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   /* Waiting for synchro */
 271:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   if(HAL_RTC_WaitForSynchro(hrtc) != HAL_OK)
  72              		.loc 1 271 0
ARM GAS  /tmp/cccafUze.s 			page 7


  73 0032 7868     		ldr	r0, [r7, #4]
  74 0034 FFF7FEFF 		bl	HAL_RTC_WaitForSynchro
  75 0038 0346     		mov	r3, r0
  76 003a 002B     		cmp	r3, #0
  77 003c 04D0     		beq	.L5
 272:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {
 273:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     /* Set RTC state */
 274:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     hrtc->State = HAL_RTC_STATE_ERROR;
  78              		.loc 1 274 0
  79 003e 7B68     		ldr	r3, [r7, #4]
  80 0040 0422     		movs	r2, #4
  81 0042 5A74     		strb	r2, [r3, #17]
 275:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     
 276:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     return HAL_ERROR;
  82              		.loc 1 276 0
  83 0044 0123     		movs	r3, #1
  84 0046 6BE0     		b	.L3
  85              	.L5:
 277:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   } 
 278:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 279:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   /* Set Initialization mode */
 280:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   if(RTC_EnterInitMode(hrtc) != HAL_OK)
  86              		.loc 1 280 0
  87 0048 7868     		ldr	r0, [r7, #4]
  88 004a FFF7FEFF 		bl	RTC_EnterInitMode
  89 004e 0346     		mov	r3, r0
  90 0050 002B     		cmp	r3, #0
  91 0052 04D0     		beq	.L6
 281:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {
 282:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     /* Set RTC state */
 283:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     hrtc->State = HAL_RTC_STATE_ERROR;
  92              		.loc 1 283 0
  93 0054 7B68     		ldr	r3, [r7, #4]
  94 0056 0422     		movs	r2, #4
  95 0058 5A74     		strb	r2, [r3, #17]
 284:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     
 285:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     return HAL_ERROR;
  96              		.loc 1 285 0
  97 005a 0123     		movs	r3, #1
  98 005c 60E0     		b	.L3
  99              	.L6:
 286:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   } 
 287:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   else
 288:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   { 
 289:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     /* Clear Flags Bits */
 290:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     CLEAR_BIT(hrtc->Instance->CRL, (RTC_FLAG_OW | RTC_FLAG_ALRAF | RTC_FLAG_SEC));
 100              		.loc 1 290 0
 101 005e 7B68     		ldr	r3, [r7, #4]
 102 0060 1B68     		ldr	r3, [r3]
 103 0062 7A68     		ldr	r2, [r7, #4]
 104 0064 1268     		ldr	r2, [r2]
 105 0066 5268     		ldr	r2, [r2, #4]
 106 0068 22F00702 		bic	r2, r2, #7
 107 006c 5A60     		str	r2, [r3, #4]
 291:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     
 292:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     if(hrtc->Init.OutPut != RTC_OUTPUTSOURCE_NONE)
 108              		.loc 1 292 0
ARM GAS  /tmp/cccafUze.s 			page 8


 109 006e 7B68     		ldr	r3, [r7, #4]
 110 0070 9B68     		ldr	r3, [r3, #8]
 111 0072 002B     		cmp	r3, #0
 112 0074 05D0     		beq	.L7
 293:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     {
 294:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       /* Disable the selected Tamper pin */
 295:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       CLEAR_BIT(BKP->CR, BKP_CR_TPE);
 113              		.loc 1 295 0
 114 0076 2C4A     		ldr	r2, .L12
 115 0078 2B4B     		ldr	r3, .L12
 116 007a 1B6B     		ldr	r3, [r3, #48]
 117 007c 23F00103 		bic	r3, r3, #1
 118 0080 1363     		str	r3, [r2, #48]
 119              	.L7:
 296:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     }
 297:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     
 298:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     /* Set the signal which will be routed to RTC Tamper pin*/
 299:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     MODIFY_REG(BKP->RTCCR, (BKP_RTCCR_CCO | BKP_RTCCR_ASOE | BKP_RTCCR_ASOS), hrtc->Init.OutPut);
 120              		.loc 1 299 0
 121 0082 2949     		ldr	r1, .L12
 122 0084 284B     		ldr	r3, .L12
 123 0086 DB6A     		ldr	r3, [r3, #44]
 124 0088 23F46072 		bic	r2, r3, #896
 125 008c 7B68     		ldr	r3, [r7, #4]
 126 008e 9B68     		ldr	r3, [r3, #8]
 127 0090 1343     		orrs	r3, r3, r2
 128 0092 CB62     		str	r3, [r1, #44]
 300:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 301:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     if (hrtc->Init.AsynchPrediv != RTC_AUTO_1_SECOND)
 129              		.loc 1 301 0
 130 0094 7B68     		ldr	r3, [r7, #4]
 131 0096 5B68     		ldr	r3, [r3, #4]
 132 0098 B3F1FF3F 		cmp	r3, #-1
 133 009c 03D0     		beq	.L8
 302:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     {
 303:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       /* RTC Prescaler provided directly by end-user*/
 304:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       prescaler = hrtc->Init.AsynchPrediv;
 134              		.loc 1 304 0
 135 009e 7B68     		ldr	r3, [r7, #4]
 136 00a0 5B68     		ldr	r3, [r3, #4]
 137 00a2 FB60     		str	r3, [r7, #12]
 138 00a4 0EE0     		b	.L9
 139              	.L8:
 305:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     }
 306:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     else
 307:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     {
 308:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       /* RTC Prescaler will be automatically calculated to get 1 second timebase */
 309:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       /* Get the RTCCLK frequency */
 310:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       prescaler = HAL_RCCEx_GetPeriphCLKFreq(RCC_PERIPHCLK_RTC);
 140              		.loc 1 310 0
 141 00a6 0120     		movs	r0, #1
 142 00a8 FFF7FEFF 		bl	HAL_RCCEx_GetPeriphCLKFreq
 143 00ac F860     		str	r0, [r7, #12]
 311:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 312:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       /* Check that RTC clock is enabled*/
 313:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       if (prescaler == 0)
 144              		.loc 1 313 0
ARM GAS  /tmp/cccafUze.s 			page 9


 145 00ae FB68     		ldr	r3, [r7, #12]
 146 00b0 002B     		cmp	r3, #0
 147 00b2 04D1     		bne	.L10
 314:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       {
 315:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****         /* Should not happen. Frequency is not available*/
 316:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****         hrtc->State = HAL_RTC_STATE_ERROR;
 148              		.loc 1 316 0
 149 00b4 7B68     		ldr	r3, [r7, #4]
 150 00b6 0422     		movs	r2, #4
 151 00b8 5A74     		strb	r2, [r3, #17]
 317:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****         return HAL_ERROR;
 152              		.loc 1 317 0
 153 00ba 0123     		movs	r3, #1
 154 00bc 30E0     		b	.L3
 155              	.L10:
 318:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       }
 319:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       else
 320:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       {
 321:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****         /* RTC period = RTCCLK/(RTC_PR + 1) */
 322:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****         prescaler = prescaler - 1;
 156              		.loc 1 322 0
 157 00be FB68     		ldr	r3, [r7, #12]
 158 00c0 013B     		subs	r3, r3, #1
 159 00c2 FB60     		str	r3, [r7, #12]
 160              	.L9:
 323:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       }
 324:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     }
 325:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     
 326:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     /* Configure the RTC_PRLH / RTC_PRLL */
 327:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     MODIFY_REG(hrtc->Instance->PRLH, RTC_PRLH_PRL, (prescaler >> 16));
 161              		.loc 1 327 0
 162 00c4 7B68     		ldr	r3, [r7, #4]
 163 00c6 1B68     		ldr	r3, [r3]
 164 00c8 7A68     		ldr	r2, [r7, #4]
 165 00ca 1268     		ldr	r2, [r2]
 166 00cc 9268     		ldr	r2, [r2, #8]
 167 00ce 22F00F01 		bic	r1, r2, #15
 168 00d2 FA68     		ldr	r2, [r7, #12]
 169 00d4 120C     		lsrs	r2, r2, #16
 170 00d6 0A43     		orrs	r2, r2, r1
 171 00d8 9A60     		str	r2, [r3, #8]
 328:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     MODIFY_REG(hrtc->Instance->PRLL, RTC_PRLL_PRL, (prescaler & RTC_PRLL_PRL));
 172              		.loc 1 328 0
 173 00da 7B68     		ldr	r3, [r7, #4]
 174 00dc 1A68     		ldr	r2, [r3]
 175 00de 7B68     		ldr	r3, [r7, #4]
 176 00e0 1B68     		ldr	r3, [r3]
 177 00e2 DB68     		ldr	r3, [r3, #12]
 178 00e4 1B0C     		lsrs	r3, r3, #16
 179 00e6 1B04     		lsls	r3, r3, #16
 180 00e8 F968     		ldr	r1, [r7, #12]
 181 00ea 89B2     		uxth	r1, r1
 182 00ec 0B43     		orrs	r3, r3, r1
 183 00ee D360     		str	r3, [r2, #12]
 329:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       
 330:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     /* Wait for synchro */
 331:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     if(RTC_ExitInitMode(hrtc) != HAL_OK)
ARM GAS  /tmp/cccafUze.s 			page 10


 184              		.loc 1 331 0
 185 00f0 7868     		ldr	r0, [r7, #4]
 186 00f2 FFF7FEFF 		bl	RTC_ExitInitMode
 187 00f6 0346     		mov	r3, r0
 188 00f8 002B     		cmp	r3, #0
 189 00fa 04D0     		beq	.L11
 332:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     {       
 333:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       hrtc->State = HAL_RTC_STATE_ERROR;
 190              		.loc 1 333 0
 191 00fc 7B68     		ldr	r3, [r7, #4]
 192 00fe 0422     		movs	r2, #4
 193 0100 5A74     		strb	r2, [r3, #17]
 334:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       
 335:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       return HAL_ERROR;
 194              		.loc 1 335 0
 195 0102 0123     		movs	r3, #1
 196 0104 0CE0     		b	.L3
 197              	.L11:
 336:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     }
 337:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     
 338:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     /* Initialize date to 1st of January 2000 */
 339:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     hrtc->DateToUpdate.Year = 0x00;
 198              		.loc 1 339 0
 199 0106 7B68     		ldr	r3, [r7, #4]
 200 0108 0022     		movs	r2, #0
 201 010a DA73     		strb	r2, [r3, #15]
 340:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     hrtc->DateToUpdate.Month = RTC_MONTH_JANUARY;
 202              		.loc 1 340 0
 203 010c 7B68     		ldr	r3, [r7, #4]
 204 010e 0122     		movs	r2, #1
 205 0110 5A73     		strb	r2, [r3, #13]
 341:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     hrtc->DateToUpdate.Date = 0x01;
 206              		.loc 1 341 0
 207 0112 7B68     		ldr	r3, [r7, #4]
 208 0114 0122     		movs	r2, #1
 209 0116 9A73     		strb	r2, [r3, #14]
 342:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 343:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     /* Set RTC state */
 344:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     hrtc->State = HAL_RTC_STATE_READY;
 210              		.loc 1 344 0
 211 0118 7B68     		ldr	r3, [r7, #4]
 212 011a 0122     		movs	r2, #1
 213 011c 5A74     		strb	r2, [r3, #17]
 345:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     
 346:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     return HAL_OK;
 214              		.loc 1 346 0
 215 011e 0023     		movs	r3, #0
 216              	.L3:
 347:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   }
 348:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** }
 217              		.loc 1 348 0
 218 0120 1846     		mov	r0, r3
 219 0122 1037     		adds	r7, r7, #16
 220              	.LCFI3:
 221              		.cfi_def_cfa_offset 8
 222 0124 BD46     		mov	sp, r7
 223              	.LCFI4:
ARM GAS  /tmp/cccafUze.s 			page 11


 224              		.cfi_def_cfa_register 13
 225              		@ sp needed
 226 0126 80BD     		pop	{r7, pc}
 227              	.L13:
 228              		.align	2
 229              	.L12:
 230 0128 006C0040 		.word	1073769472
 231              		.cfi_endproc
 232              	.LFE63:
 234              		.section	.text.HAL_RTC_DeInit,"ax",%progbits
 235              		.align	2
 236              		.global	HAL_RTC_DeInit
 237              		.thumb
 238              		.thumb_func
 240              	HAL_RTC_DeInit:
 241              	.LFB64:
 349:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 350:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** /**
 351:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @brief  DeInitializes the RTC peripheral 
 352:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @param  hrtc   pointer to a RTC_HandleTypeDef structure that contains
 353:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   *                the configuration information for RTC.
 354:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @note   This function does not reset the RTC Backup Data registers.   
 355:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @retval HAL status
 356:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   */
 357:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** HAL_StatusTypeDef HAL_RTC_DeInit(RTC_HandleTypeDef *hrtc)
 358:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** {
 242              		.loc 1 358 0
 243              		.cfi_startproc
 244              		@ args = 0, pretend = 0, frame = 8
 245              		@ frame_needed = 1, uses_anonymous_args = 0
 246 0000 80B5     		push	{r7, lr}
 247              	.LCFI5:
 248              		.cfi_def_cfa_offset 8
 249              		.cfi_offset 7, -8
 250              		.cfi_offset 14, -4
 251 0002 82B0     		sub	sp, sp, #8
 252              	.LCFI6:
 253              		.cfi_def_cfa_offset 16
 254 0004 00AF     		add	r7, sp, #0
 255              	.LCFI7:
 256              		.cfi_def_cfa_register 7
 257 0006 7860     		str	r0, [r7, #4]
 359:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   /* Check input parameters */
 360:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   if(hrtc == NULL)
 258              		.loc 1 360 0
 259 0008 7B68     		ldr	r3, [r7, #4]
 260 000a 002B     		cmp	r3, #0
 261 000c 01D1     		bne	.L15
 361:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {
 362:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****      return HAL_ERROR;
 262              		.loc 1 362 0
 263 000e 0123     		movs	r3, #1
 264 0010 4CE0     		b	.L16
 265              	.L15:
 363:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   }
 364:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   
 365:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   /* Check the parameters */
ARM GAS  /tmp/cccafUze.s 			page 12


 366:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   assert_param(IS_RTC_ALL_INSTANCE(hrtc->Instance));
 367:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 368:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   /* Set RTC state */
 369:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   hrtc->State = HAL_RTC_STATE_BUSY; 
 266              		.loc 1 369 0
 267 0012 7B68     		ldr	r3, [r7, #4]
 268 0014 0222     		movs	r2, #2
 269 0016 5A74     		strb	r2, [r3, #17]
 370:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   
 371:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   /* Set Initialization mode */
 372:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   if(RTC_EnterInitMode(hrtc) != HAL_OK)
 270              		.loc 1 372 0
 271 0018 7868     		ldr	r0, [r7, #4]
 272 001a FFF7FEFF 		bl	RTC_EnterInitMode
 273 001e 0346     		mov	r3, r0
 274 0020 002B     		cmp	r3, #0
 275 0022 07D0     		beq	.L17
 373:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {
 374:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     /* Set RTC state */
 375:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     hrtc->State = HAL_RTC_STATE_ERROR;
 276              		.loc 1 375 0
 277 0024 7B68     		ldr	r3, [r7, #4]
 278 0026 0422     		movs	r2, #4
 279 0028 5A74     		strb	r2, [r3, #17]
 376:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     
 377:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     /* Release Lock */
 378:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     __HAL_UNLOCK(hrtc);
 280              		.loc 1 378 0
 281 002a 7B68     		ldr	r3, [r7, #4]
 282 002c 0022     		movs	r2, #0
 283 002e 1A74     		strb	r2, [r3, #16]
 379:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 380:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     return HAL_ERROR;
 284              		.loc 1 380 0
 285 0030 0123     		movs	r3, #1
 286 0032 3BE0     		b	.L16
 287              	.L17:
 381:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   }  
 382:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   else
 383:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {
 384:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     CLEAR_REG(hrtc->Instance->CNTL);
 288              		.loc 1 384 0
 289 0034 7B68     		ldr	r3, [r7, #4]
 290 0036 1B68     		ldr	r3, [r3]
 291 0038 0022     		movs	r2, #0
 292 003a DA61     		str	r2, [r3, #28]
 385:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     CLEAR_REG(hrtc->Instance->CNTH);
 293              		.loc 1 385 0
 294 003c 7B68     		ldr	r3, [r7, #4]
 295 003e 1B68     		ldr	r3, [r3]
 296 0040 0022     		movs	r2, #0
 297 0042 9A61     		str	r2, [r3, #24]
 386:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     WRITE_REG(hrtc->Instance->PRLL, 0x00008000);
 298              		.loc 1 386 0
 299 0044 7B68     		ldr	r3, [r7, #4]
 300 0046 1B68     		ldr	r3, [r3]
 301 0048 4FF40042 		mov	r2, #32768
ARM GAS  /tmp/cccafUze.s 			page 13


 302 004c DA60     		str	r2, [r3, #12]
 387:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     CLEAR_REG(hrtc->Instance->PRLH);
 303              		.loc 1 387 0
 304 004e 7B68     		ldr	r3, [r7, #4]
 305 0050 1B68     		ldr	r3, [r3]
 306 0052 0022     		movs	r2, #0
 307 0054 9A60     		str	r2, [r3, #8]
 388:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 389:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     /* Reset All CRH/CRL bits */
 390:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     CLEAR_REG(hrtc->Instance->CRH);
 308              		.loc 1 390 0
 309 0056 7B68     		ldr	r3, [r7, #4]
 310 0058 1B68     		ldr	r3, [r3]
 311 005a 0022     		movs	r2, #0
 312 005c 1A60     		str	r2, [r3]
 391:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     CLEAR_REG(hrtc->Instance->CRL);
 313              		.loc 1 391 0
 314 005e 7B68     		ldr	r3, [r7, #4]
 315 0060 1B68     		ldr	r3, [r3]
 316 0062 0022     		movs	r2, #0
 317 0064 5A60     		str	r2, [r3, #4]
 392:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     
 393:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     if(RTC_ExitInitMode(hrtc) != HAL_OK)
 318              		.loc 1 393 0
 319 0066 7868     		ldr	r0, [r7, #4]
 320 0068 FFF7FEFF 		bl	RTC_ExitInitMode
 321 006c 0346     		mov	r3, r0
 322 006e 002B     		cmp	r3, #0
 323 0070 07D0     		beq	.L18
 394:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     {       
 395:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       hrtc->State = HAL_RTC_STATE_ERROR;
 324              		.loc 1 395 0
 325 0072 7B68     		ldr	r3, [r7, #4]
 326 0074 0422     		movs	r2, #4
 327 0076 5A74     		strb	r2, [r3, #17]
 396:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       
 397:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       /* Process Unlocked */ 
 398:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       __HAL_UNLOCK(hrtc);
 328              		.loc 1 398 0
 329 0078 7B68     		ldr	r3, [r7, #4]
 330 007a 0022     		movs	r2, #0
 331 007c 1A74     		strb	r2, [r3, #16]
 399:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       
 400:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       return HAL_ERROR;
 332              		.loc 1 400 0
 333 007e 0123     		movs	r3, #1
 334 0080 14E0     		b	.L16
 335              	.L18:
 401:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     }
 402:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   }
 403:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 404:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   /* Wait for synchro*/
 405:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   HAL_RTC_WaitForSynchro(hrtc);
 336              		.loc 1 405 0
 337 0082 7868     		ldr	r0, [r7, #4]
 338 0084 FFF7FEFF 		bl	HAL_RTC_WaitForSynchro
 406:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
ARM GAS  /tmp/cccafUze.s 			page 14


 407:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   /* Clear RSF flag */
 408:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   CLEAR_BIT(hrtc->Instance->CRL, RTC_FLAG_RSF);
 339              		.loc 1 408 0
 340 0088 7B68     		ldr	r3, [r7, #4]
 341 008a 1B68     		ldr	r3, [r3]
 342 008c 7A68     		ldr	r2, [r7, #4]
 343 008e 1268     		ldr	r2, [r2]
 344 0090 5268     		ldr	r2, [r2, #4]
 345 0092 22F00802 		bic	r2, r2, #8
 346 0096 5A60     		str	r2, [r3, #4]
 409:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     
 410:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   /* De-Initialize RTC MSP */
 411:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   HAL_RTC_MspDeInit(hrtc);
 347              		.loc 1 411 0
 348 0098 7868     		ldr	r0, [r7, #4]
 349 009a FFF7FEFF 		bl	HAL_RTC_MspDeInit
 412:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 413:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   hrtc->State = HAL_RTC_STATE_RESET; 
 350              		.loc 1 413 0
 351 009e 7B68     		ldr	r3, [r7, #4]
 352 00a0 0022     		movs	r2, #0
 353 00a2 5A74     		strb	r2, [r3, #17]
 414:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   
 415:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   /* Release Lock */
 416:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   __HAL_UNLOCK(hrtc);
 354              		.loc 1 416 0
 355 00a4 7B68     		ldr	r3, [r7, #4]
 356 00a6 0022     		movs	r2, #0
 357 00a8 1A74     		strb	r2, [r3, #16]
 417:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 418:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   return HAL_OK;
 358              		.loc 1 418 0
 359 00aa 0023     		movs	r3, #0
 360              	.L16:
 419:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** }
 361              		.loc 1 419 0
 362 00ac 1846     		mov	r0, r3
 363 00ae 0837     		adds	r7, r7, #8
 364              	.LCFI8:
 365              		.cfi_def_cfa_offset 8
 366 00b0 BD46     		mov	sp, r7
 367              	.LCFI9:
 368              		.cfi_def_cfa_register 13
 369              		@ sp needed
 370 00b2 80BD     		pop	{r7, pc}
 371              		.cfi_endproc
 372              	.LFE64:
 374              		.section	.text.HAL_RTC_MspInit,"ax",%progbits
 375              		.align	2
 376              		.weak	HAL_RTC_MspInit
 377              		.thumb
 378              		.thumb_func
 380              	HAL_RTC_MspInit:
 381              	.LFB65:
 420:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 421:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** /**
 422:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @brief  Initializes the RTC MSP.
ARM GAS  /tmp/cccafUze.s 			page 15


 423:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @param  hrtc   pointer to a RTC_HandleTypeDef structure that contains
 424:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   *                the configuration information for RTC.  
 425:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @retval None
 426:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   */
 427:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** __weak void HAL_RTC_MspInit(RTC_HandleTypeDef* hrtc)
 428:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** {
 382              		.loc 1 428 0
 383              		.cfi_startproc
 384              		@ args = 0, pretend = 0, frame = 8
 385              		@ frame_needed = 1, uses_anonymous_args = 0
 386              		@ link register save eliminated.
 387 0000 80B4     		push	{r7}
 388              	.LCFI10:
 389              		.cfi_def_cfa_offset 4
 390              		.cfi_offset 7, -4
 391 0002 83B0     		sub	sp, sp, #12
 392              	.LCFI11:
 393              		.cfi_def_cfa_offset 16
 394 0004 00AF     		add	r7, sp, #0
 395              	.LCFI12:
 396              		.cfi_def_cfa_register 7
 397 0006 7860     		str	r0, [r7, #4]
 429:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   /* Prevent unused argument(s) compilation warning */
 430:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   UNUSED(hrtc);
 431:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
 432:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****             the HAL_RTC_MspInit could be implemented in the user file
 433:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****    */ 
 434:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** }
 398              		.loc 1 434 0
 399 0008 0C37     		adds	r7, r7, #12
 400              	.LCFI13:
 401              		.cfi_def_cfa_offset 4
 402 000a BD46     		mov	sp, r7
 403              	.LCFI14:
 404              		.cfi_def_cfa_register 13
 405              		@ sp needed
 406 000c 5DF8047B 		ldr	r7, [sp], #4
 407              	.LCFI15:
 408              		.cfi_restore 7
 409              		.cfi_def_cfa_offset 0
 410 0010 7047     		bx	lr
 411              		.cfi_endproc
 412              	.LFE65:
 414 0012 00BF     		.section	.text.HAL_RTC_MspDeInit,"ax",%progbits
 415              		.align	2
 416              		.weak	HAL_RTC_MspDeInit
 417              		.thumb
 418              		.thumb_func
 420              	HAL_RTC_MspDeInit:
 421              	.LFB66:
 435:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 436:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** /**
 437:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @brief  DeInitializes the RTC MSP.
 438:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @param  hrtc   pointer to a RTC_HandleTypeDef structure that contains
 439:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   *                the configuration information for RTC. 
 440:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @retval None
 441:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   */
ARM GAS  /tmp/cccafUze.s 			page 16


 442:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** __weak void HAL_RTC_MspDeInit(RTC_HandleTypeDef* hrtc)
 443:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** {
 422              		.loc 1 443 0
 423              		.cfi_startproc
 424              		@ args = 0, pretend = 0, frame = 8
 425              		@ frame_needed = 1, uses_anonymous_args = 0
 426              		@ link register save eliminated.
 427 0000 80B4     		push	{r7}
 428              	.LCFI16:
 429              		.cfi_def_cfa_offset 4
 430              		.cfi_offset 7, -4
 431 0002 83B0     		sub	sp, sp, #12
 432              	.LCFI17:
 433              		.cfi_def_cfa_offset 16
 434 0004 00AF     		add	r7, sp, #0
 435              	.LCFI18:
 436              		.cfi_def_cfa_register 7
 437 0006 7860     		str	r0, [r7, #4]
 444:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   /* Prevent unused argument(s) compilation warning */
 445:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   UNUSED(hrtc);
 446:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
 447:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****             the HAL_RTC_MspDeInit could be implemented in the user file
 448:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****    */ 
 449:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** }
 438              		.loc 1 449 0
 439 0008 0C37     		adds	r7, r7, #12
 440              	.LCFI19:
 441              		.cfi_def_cfa_offset 4
 442 000a BD46     		mov	sp, r7
 443              	.LCFI20:
 444              		.cfi_def_cfa_register 13
 445              		@ sp needed
 446 000c 5DF8047B 		ldr	r7, [sp], #4
 447              	.LCFI21:
 448              		.cfi_restore 7
 449              		.cfi_def_cfa_offset 0
 450 0010 7047     		bx	lr
 451              		.cfi_endproc
 452              	.LFE66:
 454 0012 00BF     		.section	.text.HAL_RTC_SetTime,"ax",%progbits
 455              		.align	2
 456              		.global	HAL_RTC_SetTime
 457              		.thumb
 458              		.thumb_func
 460              	HAL_RTC_SetTime:
 461              	.LFB67:
 450:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 451:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** /**
 452:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @}
 453:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   */
 454:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 455:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** /** @defgroup RTC_Exported_Functions_Group2 Time and Date functions
 456:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****  *  @brief   RTC Time and Date functions
 457:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****  *
 458:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** @verbatim   
 459:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****  ===============================================================================
 460:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****                  ##### RTC Time and Date functions #####
ARM GAS  /tmp/cccafUze.s 			page 17


 461:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****  ===============================================================================  
 462:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****  
 463:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****  [..] This section provides functions allowing to configure Time and Date features
 464:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 465:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** @endverbatim
 466:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @{
 467:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   */
 468:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 469:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** /**
 470:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @brief  Sets RTC current time.
 471:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @param  hrtc   pointer to a RTC_HandleTypeDef structure that contains
 472:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   *                the configuration information for RTC.
 473:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @param  sTime: Pointer to Time structure
 474:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @param  Format: Specifies the format of the entered parameters.
 475:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   *          This parameter can be one of the following values:
 476:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   *            @arg RTC_FORMAT_BIN: Binary data format 
 477:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   *            @arg RTC_FORMAT_BCD: BCD data format
 478:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @retval HAL status
 479:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   */
 480:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** HAL_StatusTypeDef HAL_RTC_SetTime(RTC_HandleTypeDef *hrtc, RTC_TimeTypeDef *sTime, uint32_t Format)
 481:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** {
 462              		.loc 1 481 0
 463              		.cfi_startproc
 464              		@ args = 0, pretend = 0, frame = 24
 465              		@ frame_needed = 1, uses_anonymous_args = 0
 466 0000 90B5     		push	{r4, r7, lr}
 467              	.LCFI22:
 468              		.cfi_def_cfa_offset 12
 469              		.cfi_offset 4, -12
 470              		.cfi_offset 7, -8
 471              		.cfi_offset 14, -4
 472 0002 87B0     		sub	sp, sp, #28
 473              	.LCFI23:
 474              		.cfi_def_cfa_offset 40
 475 0004 00AF     		add	r7, sp, #0
 476              	.LCFI24:
 477              		.cfi_def_cfa_register 7
 478 0006 F860     		str	r0, [r7, #12]
 479 0008 B960     		str	r1, [r7, #8]
 480 000a 7A60     		str	r2, [r7, #4]
 482:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   uint32_t counter_time = 0, counter_alarm = 0;
 481              		.loc 1 482 0
 482 000c 0023     		movs	r3, #0
 483 000e 7B61     		str	r3, [r7, #20]
 484 0010 0023     		movs	r3, #0
 485 0012 3B61     		str	r3, [r7, #16]
 483:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   
 484:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   /* Check input parameters */
 485:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   if((hrtc == NULL) || (sTime == NULL))
 486              		.loc 1 485 0
 487 0014 FB68     		ldr	r3, [r7, #12]
 488 0016 002B     		cmp	r3, #0
 489 0018 02D0     		beq	.L22
 490              		.loc 1 485 0 is_stmt 0 discriminator 1
 491 001a BB68     		ldr	r3, [r7, #8]
 492 001c 002B     		cmp	r3, #0
 493 001e 01D1     		bne	.L23
ARM GAS  /tmp/cccafUze.s 			page 18


 494              	.L22:
 486:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {
 487:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****      return HAL_ERROR;
 495              		.loc 1 487 0 is_stmt 1
 496 0020 0123     		movs	r3, #1
 497 0022 80E0     		b	.L24
 498              	.L23:
 488:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   }
 489:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   
 490:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****  /* Check the parameters */
 491:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   assert_param(IS_RTC_FORMAT(Format));
 492:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   
 493:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   /* Process Locked */ 
 494:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   __HAL_LOCK(hrtc);
 499              		.loc 1 494 0
 500 0024 FB68     		ldr	r3, [r7, #12]
 501 0026 1B7C     		ldrb	r3, [r3, #16]	@ zero_extendqisi2
 502 0028 012B     		cmp	r3, #1
 503 002a 01D1     		bne	.L25
 504              		.loc 1 494 0 is_stmt 0 discriminator 1
 505 002c 0223     		movs	r3, #2
 506 002e 7AE0     		b	.L24
 507              	.L25:
 508              		.loc 1 494 0 discriminator 2
 509 0030 FB68     		ldr	r3, [r7, #12]
 510 0032 0122     		movs	r2, #1
 511 0034 1A74     		strb	r2, [r3, #16]
 495:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   
 496:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   hrtc->State = HAL_RTC_STATE_BUSY;
 512              		.loc 1 496 0 is_stmt 1 discriminator 2
 513 0036 FB68     		ldr	r3, [r7, #12]
 514 0038 0222     		movs	r2, #2
 515 003a 5A74     		strb	r2, [r3, #17]
 497:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   
 498:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   if(Format == RTC_FORMAT_BIN)
 516              		.loc 1 498 0 discriminator 2
 517 003c 7B68     		ldr	r3, [r7, #4]
 518 003e 002B     		cmp	r3, #0
 519 0040 13D1     		bne	.L26
 499:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {
 500:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     assert_param(IS_RTC_HOUR24(sTime->Hours));
 501:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     assert_param(IS_RTC_MINUTES(sTime->Minutes));
 502:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     assert_param(IS_RTC_SECONDS(sTime->Seconds));
 503:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 504:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     counter_time = (uint32_t)(((uint32_t)sTime->Hours * 3600) + \
 520              		.loc 1 504 0
 521 0042 BB68     		ldr	r3, [r7, #8]
 522 0044 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 523 0046 1A46     		mov	r2, r3
 524 0048 4FF46163 		mov	r3, #3600
 525 004c 03FB02F2 		mul	r2, r3, r2
 505:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****                         ((uint32_t)sTime->Minutes * 60) + \
 526              		.loc 1 505 0
 527 0050 BB68     		ldr	r3, [r7, #8]
 528 0052 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 529 0054 1946     		mov	r1, r3
 530 0056 0B46     		mov	r3, r1
ARM GAS  /tmp/cccafUze.s 			page 19


 531 0058 1B01     		lsls	r3, r3, #4
 532 005a 5B1A     		subs	r3, r3, r1
 533 005c 9B00     		lsls	r3, r3, #2
 504:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****                         ((uint32_t)sTime->Minutes * 60) + \
 534              		.loc 1 504 0
 535 005e 1344     		add	r3, r3, r2
 506:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****                         ((uint32_t)sTime->Seconds));  
 536              		.loc 1 506 0
 537 0060 BA68     		ldr	r2, [r7, #8]
 538 0062 9278     		ldrb	r2, [r2, #2]	@ zero_extendqisi2
 504:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****                         ((uint32_t)sTime->Minutes * 60) + \
 539              		.loc 1 504 0
 540 0064 1344     		add	r3, r3, r2
 541 0066 7B61     		str	r3, [r7, #20]
 542 0068 1EE0     		b	.L27
 543              	.L26:
 507:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   }
 508:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   else
 509:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {
 510:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     assert_param(IS_RTC_HOUR24(RTC_Bcd2ToByte(sTime->Hours)));
 511:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     assert_param(IS_RTC_MINUTES(RTC_Bcd2ToByte(sTime->Minutes)));
 512:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     assert_param(IS_RTC_SECONDS(RTC_Bcd2ToByte(sTime->Seconds)));
 513:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 514:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     counter_time = (((uint32_t)(RTC_Bcd2ToByte(sTime->Hours)) * 3600) + \
 544              		.loc 1 514 0
 545 006a BB68     		ldr	r3, [r7, #8]
 546 006c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 547 006e 1846     		mov	r0, r3
 548 0070 FFF7FEFF 		bl	RTC_Bcd2ToByte
 549 0074 0346     		mov	r3, r0
 550 0076 1A46     		mov	r2, r3
 551 0078 4FF46163 		mov	r3, #3600
 552 007c 03FB02F4 		mul	r4, r3, r2
 515:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****               ((uint32_t)(RTC_Bcd2ToByte(sTime->Minutes)) * 60) + \
 553              		.loc 1 515 0
 554 0080 BB68     		ldr	r3, [r7, #8]
 555 0082 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 556 0084 1846     		mov	r0, r3
 557 0086 FFF7FEFF 		bl	RTC_Bcd2ToByte
 558 008a 0346     		mov	r3, r0
 559 008c 1A46     		mov	r2, r3
 560 008e 1346     		mov	r3, r2
 561 0090 1B01     		lsls	r3, r3, #4
 562 0092 9B1A     		subs	r3, r3, r2
 563 0094 9B00     		lsls	r3, r3, #2
 514:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****               ((uint32_t)(RTC_Bcd2ToByte(sTime->Minutes)) * 60) + \
 564              		.loc 1 514 0
 565 0096 1C44     		add	r4, r4, r3
 516:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****               ((uint32_t)(RTC_Bcd2ToByte(sTime->Seconds))));   
 566              		.loc 1 516 0
 567 0098 BB68     		ldr	r3, [r7, #8]
 568 009a 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 569 009c 1846     		mov	r0, r3
 570 009e FFF7FEFF 		bl	RTC_Bcd2ToByte
 571 00a2 0346     		mov	r3, r0
 514:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****               ((uint32_t)(RTC_Bcd2ToByte(sTime->Minutes)) * 60) + \
 572              		.loc 1 514 0
ARM GAS  /tmp/cccafUze.s 			page 20


 573 00a4 2344     		add	r3, r3, r4
 574 00a6 7B61     		str	r3, [r7, #20]
 575              	.L27:
 517:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   }
 518:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 519:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   /* Write time counter in RTC registers */
 520:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   if (RTC_WriteTimeCounter(hrtc, counter_time) != HAL_OK)
 576              		.loc 1 520 0
 577 00a8 F868     		ldr	r0, [r7, #12]
 578 00aa 7969     		ldr	r1, [r7, #20]
 579 00ac FFF7FEFF 		bl	RTC_WriteTimeCounter
 580 00b0 0346     		mov	r3, r0
 581 00b2 002B     		cmp	r3, #0
 582 00b4 07D0     		beq	.L28
 521:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {
 522:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     /* Set RTC state */
 523:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     hrtc->State = HAL_RTC_STATE_ERROR;
 583              		.loc 1 523 0
 584 00b6 FB68     		ldr	r3, [r7, #12]
 585 00b8 0422     		movs	r2, #4
 586 00ba 5A74     		strb	r2, [r3, #17]
 524:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     
 525:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     /* Process Unlocked */ 
 526:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     __HAL_UNLOCK(hrtc);
 587              		.loc 1 526 0
 588 00bc FB68     		ldr	r3, [r7, #12]
 589 00be 0022     		movs	r2, #0
 590 00c0 1A74     		strb	r2, [r3, #16]
 527:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     
 528:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     return HAL_ERROR;
 591              		.loc 1 528 0
 592 00c2 0123     		movs	r3, #1
 593 00c4 2FE0     		b	.L24
 594              	.L28:
 529:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   }
 530:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   else
 531:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {
 532:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     /* Clear Second and overflow flags */
 533:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     CLEAR_BIT(hrtc->Instance->CRL, (RTC_FLAG_SEC | RTC_FLAG_OW));
 595              		.loc 1 533 0
 596 00c6 FB68     		ldr	r3, [r7, #12]
 597 00c8 1B68     		ldr	r3, [r3]
 598 00ca FA68     		ldr	r2, [r7, #12]
 599 00cc 1268     		ldr	r2, [r2]
 600 00ce 5268     		ldr	r2, [r2, #4]
 601 00d0 22F00502 		bic	r2, r2, #5
 602 00d4 5A60     		str	r2, [r3, #4]
 534:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     
 535:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     /* Read current Alarm counter in RTC registers */
 536:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     counter_alarm = RTC_ReadAlarmCounter(hrtc);
 603              		.loc 1 536 0
 604 00d6 F868     		ldr	r0, [r7, #12]
 605 00d8 FFF7FEFF 		bl	RTC_ReadAlarmCounter
 606 00dc 3861     		str	r0, [r7, #16]
 537:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 538:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     /* Set again alarm to match with new time if enabled */
 539:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     if (counter_alarm != RTC_ALARM_RESETVALUE)
ARM GAS  /tmp/cccafUze.s 			page 21


 607              		.loc 1 539 0
 608 00de 3B69     		ldr	r3, [r7, #16]
 609 00e0 B3F1FF3F 		cmp	r3, #-1
 610 00e4 18D0     		beq	.L29
 540:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     {
 541:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       if(counter_alarm < counter_time)
 611              		.loc 1 541 0
 612 00e6 3A69     		ldr	r2, [r7, #16]
 613 00e8 7B69     		ldr	r3, [r7, #20]
 614 00ea 9A42     		cmp	r2, r3
 615 00ec 14D2     		bcs	.L29
 542:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       {
 543:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****         /* Add 1 day to alarm counter*/
 544:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****         counter_alarm += (uint32_t)(24 * 3600);
 616              		.loc 1 544 0
 617 00ee 3B69     		ldr	r3, [r7, #16]
 618 00f0 03F5A833 		add	r3, r3, #86016
 619 00f4 03F5C073 		add	r3, r3, #384
 620 00f8 3B61     		str	r3, [r7, #16]
 545:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****         
 546:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****         /* Write new Alarm counter in RTC registers */
 547:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****         if (RTC_WriteAlarmCounter(hrtc, counter_alarm) != HAL_OK)
 621              		.loc 1 547 0
 622 00fa F868     		ldr	r0, [r7, #12]
 623 00fc 3969     		ldr	r1, [r7, #16]
 624 00fe FFF7FEFF 		bl	RTC_WriteAlarmCounter
 625 0102 0346     		mov	r3, r0
 626 0104 002B     		cmp	r3, #0
 627 0106 07D0     		beq	.L29
 548:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****         {
 549:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****           /* Set RTC state */
 550:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****           hrtc->State = HAL_RTC_STATE_ERROR;
 628              		.loc 1 550 0
 629 0108 FB68     		ldr	r3, [r7, #12]
 630 010a 0422     		movs	r2, #4
 631 010c 5A74     		strb	r2, [r3, #17]
 551:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****           
 552:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****           /* Process Unlocked */ 
 553:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****           __HAL_UNLOCK(hrtc);
 632              		.loc 1 553 0
 633 010e FB68     		ldr	r3, [r7, #12]
 634 0110 0022     		movs	r2, #0
 635 0112 1A74     		strb	r2, [r3, #16]
 554:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****           
 555:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****           return HAL_ERROR;
 636              		.loc 1 555 0
 637 0114 0123     		movs	r3, #1
 638 0116 06E0     		b	.L24
 639              	.L29:
 556:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****         }
 557:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       }
 558:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     }
 559:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     
 560:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     hrtc->State = HAL_RTC_STATE_READY;
 640              		.loc 1 560 0
 641 0118 FB68     		ldr	r3, [r7, #12]
 642 011a 0122     		movs	r2, #1
ARM GAS  /tmp/cccafUze.s 			page 22


 643 011c 5A74     		strb	r2, [r3, #17]
 561:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   
 562:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****    __HAL_UNLOCK(hrtc); 
 644              		.loc 1 562 0
 645 011e FB68     		ldr	r3, [r7, #12]
 646 0120 0022     		movs	r2, #0
 647 0122 1A74     		strb	r2, [r3, #16]
 563:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****      
 564:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****    return HAL_OK;
 648              		.loc 1 564 0
 649 0124 0023     		movs	r3, #0
 650              	.L24:
 565:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   }
 566:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** }
 651              		.loc 1 566 0
 652 0126 1846     		mov	r0, r3
 653 0128 1C37     		adds	r7, r7, #28
 654              	.LCFI25:
 655              		.cfi_def_cfa_offset 12
 656 012a BD46     		mov	sp, r7
 657              	.LCFI26:
 658              		.cfi_def_cfa_register 13
 659              		@ sp needed
 660 012c 90BD     		pop	{r4, r7, pc}
 661              		.cfi_endproc
 662              	.LFE67:
 664 012e 00BF     		.section	.text.HAL_RTC_GetTime,"ax",%progbits
 665              		.align	2
 666              		.global	HAL_RTC_GetTime
 667              		.thumb
 668              		.thumb_func
 670              	HAL_RTC_GetTime:
 671              	.LFB68:
 567:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 568:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** /**
 569:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @brief  Gets RTC current time.
 570:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @param  hrtc   pointer to a RTC_HandleTypeDef structure that contains
 571:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   *                the configuration information for RTC.
 572:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @param  sTime: Pointer to Time structure
 573:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @param  Format: Specifies the format of the entered parameters.
 574:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   *          This parameter can be one of the following values:
 575:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   *            @arg RTC_FORMAT_BIN: Binary data format 
 576:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   *            @arg RTC_FORMAT_BCD: BCD data format
 577:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @retval HAL status
 578:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   */
 579:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** HAL_StatusTypeDef HAL_RTC_GetTime(RTC_HandleTypeDef *hrtc, RTC_TimeTypeDef *sTime, uint32_t Format)
 580:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** {
 672              		.loc 1 580 0
 673              		.cfi_startproc
 674              		@ args = 0, pretend = 0, frame = 32
 675              		@ frame_needed = 1, uses_anonymous_args = 0
 676 0000 80B5     		push	{r7, lr}
 677              	.LCFI27:
 678              		.cfi_def_cfa_offset 8
 679              		.cfi_offset 7, -8
 680              		.cfi_offset 14, -4
 681 0002 88B0     		sub	sp, sp, #32
ARM GAS  /tmp/cccafUze.s 			page 23


 682              	.LCFI28:
 683              		.cfi_def_cfa_offset 40
 684 0004 00AF     		add	r7, sp, #0
 685              	.LCFI29:
 686              		.cfi_def_cfa_register 7
 687 0006 F860     		str	r0, [r7, #12]
 688 0008 B960     		str	r1, [r7, #8]
 689 000a 7A60     		str	r2, [r7, #4]
 581:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   uint32_t counter_time = 0, counter_alarm = 0, days_elapsed = 0, hours = 0;
 690              		.loc 1 581 0
 691 000c 0023     		movs	r3, #0
 692 000e BB61     		str	r3, [r7, #24]
 693 0010 0023     		movs	r3, #0
 694 0012 FB61     		str	r3, [r7, #28]
 695 0014 0023     		movs	r3, #0
 696 0016 7B61     		str	r3, [r7, #20]
 697 0018 0023     		movs	r3, #0
 698 001a 3B61     		str	r3, [r7, #16]
 582:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   
 583:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   /* Check input parameters */
 584:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   if((hrtc == NULL) || (sTime == NULL))
 699              		.loc 1 584 0
 700 001c FB68     		ldr	r3, [r7, #12]
 701 001e 002B     		cmp	r3, #0
 702 0020 02D0     		beq	.L31
 703              		.loc 1 584 0 is_stmt 0 discriminator 1
 704 0022 BB68     		ldr	r3, [r7, #8]
 705 0024 002B     		cmp	r3, #0
 706 0026 01D1     		bne	.L32
 707              	.L31:
 585:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {
 586:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****      return HAL_ERROR;
 708              		.loc 1 586 0 is_stmt 1
 709 0028 0123     		movs	r3, #1
 710 002a B5E0     		b	.L33
 711              	.L32:
 587:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   }
 588:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 589:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   /* Check the parameters */
 590:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   assert_param(IS_RTC_FORMAT(Format));
 591:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 592:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   /* Check if counter overflow occurred */
 593:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   if (__HAL_RTC_OVERFLOW_GET_FLAG(hrtc, RTC_FLAG_OW))
 712              		.loc 1 593 0
 713 002c FB68     		ldr	r3, [r7, #12]
 714 002e 1B68     		ldr	r3, [r3]
 715 0030 5B68     		ldr	r3, [r3, #4]
 716 0032 03F00403 		and	r3, r3, #4
 717 0036 002B     		cmp	r3, #0
 718 0038 01D0     		beq	.L34
 594:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {
 595:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       return HAL_ERROR;
 719              		.loc 1 595 0
 720 003a 0123     		movs	r3, #1
 721 003c ACE0     		b	.L33
 722              	.L34:
 596:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   }
ARM GAS  /tmp/cccafUze.s 			page 24


 597:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 598:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   /* Read the time counter*/
 599:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   counter_time = RTC_ReadTimeCounter(hrtc);
 723              		.loc 1 599 0
 724 003e F868     		ldr	r0, [r7, #12]
 725 0040 FFF7FEFF 		bl	RTC_ReadTimeCounter
 726 0044 B861     		str	r0, [r7, #24]
 600:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 601:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   /* Fill the structure fields with the read parameters */
 602:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   hours = counter_time / 3600;
 727              		.loc 1 602 0
 728 0046 BB69     		ldr	r3, [r7, #24]
 729 0048 554A     		ldr	r2, .L43
 730 004a A2FB0323 		umull	r2, r3, r2, r3
 731 004e DB0A     		lsrs	r3, r3, #11
 732 0050 3B61     		str	r3, [r7, #16]
 603:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   sTime->Minutes  = (uint8_t)((counter_time % 3600) / 60);
 733              		.loc 1 603 0
 734 0052 BA69     		ldr	r2, [r7, #24]
 735 0054 524B     		ldr	r3, .L43
 736 0056 A3FB0213 		umull	r1, r3, r3, r2
 737 005a DB0A     		lsrs	r3, r3, #11
 738 005c 4FF46161 		mov	r1, #3600
 739 0060 01FB03F3 		mul	r3, r1, r3
 740 0064 D31A     		subs	r3, r2, r3
 741 0066 4F4A     		ldr	r2, .L43+4
 742 0068 A2FB0323 		umull	r2, r3, r2, r3
 743 006c 5B09     		lsrs	r3, r3, #5
 744 006e DAB2     		uxtb	r2, r3
 745 0070 BB68     		ldr	r3, [r7, #8]
 746 0072 5A70     		strb	r2, [r3, #1]
 604:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   sTime->Seconds  = (uint8_t)((counter_time % 3600) % 60);
 747              		.loc 1 604 0
 748 0074 BB69     		ldr	r3, [r7, #24]
 749 0076 4A4A     		ldr	r2, .L43
 750 0078 A2FB0312 		umull	r1, r2, r2, r3
 751 007c D20A     		lsrs	r2, r2, #11
 752 007e 4FF46161 		mov	r1, #3600
 753 0082 01FB02F2 		mul	r2, r1, r2
 754 0086 9A1A     		subs	r2, r3, r2
 755 0088 464B     		ldr	r3, .L43+4
 756 008a A3FB0213 		umull	r1, r3, r3, r2
 757 008e 5909     		lsrs	r1, r3, #5
 758 0090 0B46     		mov	r3, r1
 759 0092 1B01     		lsls	r3, r3, #4
 760 0094 5B1A     		subs	r3, r3, r1
 761 0096 9B00     		lsls	r3, r3, #2
 762 0098 D11A     		subs	r1, r2, r3
 763 009a CAB2     		uxtb	r2, r1
 764 009c BB68     		ldr	r3, [r7, #8]
 765 009e 9A70     		strb	r2, [r3, #2]
 605:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 606:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   if (hours >= 24)
 766              		.loc 1 606 0
 767 00a0 3B69     		ldr	r3, [r7, #16]
 768 00a2 172B     		cmp	r3, #23
 769 00a4 55D9     		bls	.L35
ARM GAS  /tmp/cccafUze.s 			page 25


 607:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {
 608:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     /* Get number of days elapsed from last calculation */
 609:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     days_elapsed = (hours / 24);
 770              		.loc 1 609 0
 771 00a6 3B69     		ldr	r3, [r7, #16]
 772 00a8 3F4A     		ldr	r2, .L43+8
 773 00aa A2FB0323 		umull	r2, r3, r2, r3
 774 00ae 1B09     		lsrs	r3, r3, #4
 775 00b0 7B61     		str	r3, [r7, #20]
 610:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 611:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     /* Set Hours in RTC_TimeTypeDef structure*/
 612:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     sTime->Hours = (hours % 24);    
 776              		.loc 1 612 0
 777 00b2 3969     		ldr	r1, [r7, #16]
 778 00b4 3C4B     		ldr	r3, .L43+8
 779 00b6 A3FB0123 		umull	r2, r3, r3, r1
 780 00ba 1A09     		lsrs	r2, r3, #4
 781 00bc 1346     		mov	r3, r2
 782 00be 5B00     		lsls	r3, r3, #1
 783 00c0 1344     		add	r3, r3, r2
 784 00c2 DB00     		lsls	r3, r3, #3
 785 00c4 CA1A     		subs	r2, r1, r3
 786 00c6 D2B2     		uxtb	r2, r2
 787 00c8 BB68     		ldr	r3, [r7, #8]
 788 00ca 1A70     		strb	r2, [r3]
 613:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 614:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     /* Read Alarm counter in RTC registers */
 615:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     counter_alarm = RTC_ReadAlarmCounter(hrtc);
 789              		.loc 1 615 0
 790 00cc F868     		ldr	r0, [r7, #12]
 791 00ce FFF7FEFF 		bl	RTC_ReadAlarmCounter
 792 00d2 F861     		str	r0, [r7, #28]
 616:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 617:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     /* Calculate remaining time to reach alarm (only if set and not yet expired)*/
 618:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     if ((counter_alarm != RTC_ALARM_RESETVALUE) && (counter_alarm > counter_time))
 793              		.loc 1 618 0
 794 00d4 FB69     		ldr	r3, [r7, #28]
 795 00d6 B3F1FF3F 		cmp	r3, #-1
 796 00da 08D0     		beq	.L36
 797              		.loc 1 618 0 is_stmt 0 discriminator 1
 798 00dc FA69     		ldr	r2, [r7, #28]
 799 00de BB69     		ldr	r3, [r7, #24]
 800 00e0 9A42     		cmp	r2, r3
 801 00e2 04D9     		bls	.L36
 619:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     {
 620:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       counter_alarm -= counter_time;
 802              		.loc 1 620 0 is_stmt 1
 803 00e4 FA69     		ldr	r2, [r7, #28]
 804 00e6 BB69     		ldr	r3, [r7, #24]
 805 00e8 D31A     		subs	r3, r2, r3
 806 00ea FB61     		str	r3, [r7, #28]
 807 00ec 02E0     		b	.L37
 808              	.L36:
 621:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     }
 622:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     else 
 623:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     {
 624:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       /* In case of counter_alarm < counter_time */
ARM GAS  /tmp/cccafUze.s 			page 26


 625:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       /* Alarm expiration already occurred but alarm not deactivated */
 626:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       counter_alarm = RTC_ALARM_RESETVALUE;
 809              		.loc 1 626 0
 810 00ee 4FF0FF33 		mov	r3, #-1
 811 00f2 FB61     		str	r3, [r7, #28]
 812              	.L37:
 627:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     }
 628:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 629:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     /* Set updated time in decreasing counter by number of days elapsed */
 630:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     counter_time -= (days_elapsed * 24 * 3600);
 813              		.loc 1 630 0
 814 00f4 7B69     		ldr	r3, [r7, #20]
 815 00f6 2D4A     		ldr	r2, .L43+12
 816 00f8 02FB03F3 		mul	r3, r2, r3
 817 00fc BA69     		ldr	r2, [r7, #24]
 818 00fe D31A     		subs	r3, r2, r3
 819 0100 BB61     		str	r3, [r7, #24]
 631:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     
 632:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     /* Write time counter in RTC registers */
 633:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     if (RTC_WriteTimeCounter(hrtc, counter_time) != HAL_OK)
 820              		.loc 1 633 0
 821 0102 F868     		ldr	r0, [r7, #12]
 822 0104 B969     		ldr	r1, [r7, #24]
 823 0106 FFF7FEFF 		bl	RTC_WriteTimeCounter
 824 010a 0346     		mov	r3, r0
 825 010c 002B     		cmp	r3, #0
 826 010e 01D0     		beq	.L38
 634:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     {
 635:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       return HAL_ERROR;
 827              		.loc 1 635 0
 828 0110 0123     		movs	r3, #1
 829 0112 41E0     		b	.L33
 830              	.L38:
 636:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     }
 637:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 638:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     /* Set updated alarm to be set */
 639:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     if (counter_alarm != RTC_ALARM_RESETVALUE)
 831              		.loc 1 639 0
 832 0114 FB69     		ldr	r3, [r7, #28]
 833 0116 B3F1FF3F 		cmp	r3, #-1
 834 011a 0CD0     		beq	.L39
 640:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     {
 641:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       counter_alarm += counter_time;
 835              		.loc 1 641 0
 836 011c FA69     		ldr	r2, [r7, #28]
 837 011e BB69     		ldr	r3, [r7, #24]
 838 0120 1344     		add	r3, r3, r2
 839 0122 FB61     		str	r3, [r7, #28]
 642:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       
 643:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       /* Write time counter in RTC registers */
 644:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       if (RTC_WriteAlarmCounter(hrtc, counter_alarm) != HAL_OK)
 840              		.loc 1 644 0
 841 0124 F868     		ldr	r0, [r7, #12]
 842 0126 F969     		ldr	r1, [r7, #28]
 843 0128 FFF7FEFF 		bl	RTC_WriteAlarmCounter
 844 012c 0346     		mov	r3, r0
 845 012e 002B     		cmp	r3, #0
ARM GAS  /tmp/cccafUze.s 			page 27


 846 0130 0AD0     		beq	.L40
 645:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       {
 646:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****         return HAL_ERROR;
 847              		.loc 1 646 0
 848 0132 0123     		movs	r3, #1
 849 0134 30E0     		b	.L33
 850              	.L39:
 647:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       }
 648:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     }
 649:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     else
 650:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     {
 651:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       /* Alarm already occurred. Set it to reset values to avoid unexpected expiration */
 652:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       if (RTC_WriteAlarmCounter(hrtc, counter_alarm) != HAL_OK)
 851              		.loc 1 652 0
 852 0136 F868     		ldr	r0, [r7, #12]
 853 0138 F969     		ldr	r1, [r7, #28]
 854 013a FFF7FEFF 		bl	RTC_WriteAlarmCounter
 855 013e 0346     		mov	r3, r0
 856 0140 002B     		cmp	r3, #0
 857 0142 01D0     		beq	.L40
 653:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       {
 654:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****         return HAL_ERROR;
 858              		.loc 1 654 0
 859 0144 0123     		movs	r3, #1
 860 0146 27E0     		b	.L33
 861              	.L40:
 655:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       }
 656:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     }
 657:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     
 658:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     /* Update date */
 659:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     RTC_DateUpdate(hrtc, days_elapsed);
 862              		.loc 1 659 0
 863 0148 F868     		ldr	r0, [r7, #12]
 864 014a 7969     		ldr	r1, [r7, #20]
 865 014c FFF7FEFF 		bl	RTC_DateUpdate
 866 0150 03E0     		b	.L41
 867              	.L35:
 660:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   }
 661:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   else 
 662:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {
 663:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     sTime->Hours = hours;    
 868              		.loc 1 663 0
 869 0152 3B69     		ldr	r3, [r7, #16]
 870 0154 DAB2     		uxtb	r2, r3
 871 0156 BB68     		ldr	r3, [r7, #8]
 872 0158 1A70     		strb	r2, [r3]
 873              	.L41:
 664:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   }
 665:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 666:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   /* Check the input parameters format */
 667:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   if(Format != RTC_FORMAT_BIN)
 874              		.loc 1 667 0
 875 015a 7B68     		ldr	r3, [r7, #4]
 876 015c 002B     		cmp	r3, #0
 877 015e 1AD0     		beq	.L42
 668:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {
 669:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     /* Convert the time structure parameters to BCD format */
ARM GAS  /tmp/cccafUze.s 			page 28


 670:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     sTime->Hours    = (uint8_t)RTC_ByteToBcd2(sTime->Hours);
 878              		.loc 1 670 0
 879 0160 BB68     		ldr	r3, [r7, #8]
 880 0162 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 881 0164 1846     		mov	r0, r3
 882 0166 FFF7FEFF 		bl	RTC_ByteToBcd2
 883 016a 0346     		mov	r3, r0
 884 016c 1A46     		mov	r2, r3
 885 016e BB68     		ldr	r3, [r7, #8]
 886 0170 1A70     		strb	r2, [r3]
 671:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     sTime->Minutes  = (uint8_t)RTC_ByteToBcd2(sTime->Minutes);
 887              		.loc 1 671 0
 888 0172 BB68     		ldr	r3, [r7, #8]
 889 0174 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 890 0176 1846     		mov	r0, r3
 891 0178 FFF7FEFF 		bl	RTC_ByteToBcd2
 892 017c 0346     		mov	r3, r0
 893 017e 1A46     		mov	r2, r3
 894 0180 BB68     		ldr	r3, [r7, #8]
 895 0182 5A70     		strb	r2, [r3, #1]
 672:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     sTime->Seconds  = (uint8_t)RTC_ByteToBcd2(sTime->Seconds);  
 896              		.loc 1 672 0
 897 0184 BB68     		ldr	r3, [r7, #8]
 898 0186 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 899 0188 1846     		mov	r0, r3
 900 018a FFF7FEFF 		bl	RTC_ByteToBcd2
 901 018e 0346     		mov	r3, r0
 902 0190 1A46     		mov	r2, r3
 903 0192 BB68     		ldr	r3, [r7, #8]
 904 0194 9A70     		strb	r2, [r3, #2]
 905              	.L42:
 673:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   }
 674:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   
 675:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   return HAL_OK;
 906              		.loc 1 675 0
 907 0196 0023     		movs	r3, #0
 908              	.L33:
 676:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** }
 909              		.loc 1 676 0
 910 0198 1846     		mov	r0, r3
 911 019a 2037     		adds	r7, r7, #32
 912              	.LCFI30:
 913              		.cfi_def_cfa_offset 8
 914 019c BD46     		mov	sp, r7
 915              	.LCFI31:
 916              		.cfi_def_cfa_register 13
 917              		@ sp needed
 918 019e 80BD     		pop	{r7, pc}
 919              	.L44:
 920              		.align	2
 921              	.L43:
 922 01a0 C5B3A291 		.word	-1851608123
 923 01a4 89888888 		.word	-2004318071
 924 01a8 ABAAAAAA 		.word	-1431655765
 925 01ac 80510100 		.word	86400
 926              		.cfi_endproc
 927              	.LFE68:
ARM GAS  /tmp/cccafUze.s 			page 29


 929              		.section	.text.HAL_RTC_SetDate,"ax",%progbits
 930              		.align	2
 931              		.global	HAL_RTC_SetDate
 932              		.thumb
 933              		.thumb_func
 935              	HAL_RTC_SetDate:
 936              	.LFB69:
 677:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 678:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 679:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** /**
 680:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @brief  Sets RTC current date.
 681:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @param  hrtc   pointer to a RTC_HandleTypeDef structure that contains
 682:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   *                the configuration information for RTC.
 683:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @param  sDate: Pointer to date structure
 684:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @param  Format: specifies the format of the entered parameters.
 685:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   *          This parameter can be one of the following values:
 686:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   *            @arg RTC_FORMAT_BIN: Binary data format 
 687:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   *            @arg RTC_FORMAT_BCD: BCD data format
 688:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @retval HAL status
 689:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   */
 690:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** HAL_StatusTypeDef HAL_RTC_SetDate(RTC_HandleTypeDef *hrtc, RTC_DateTypeDef *sDate, uint32_t Format)
 691:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** {
 937              		.loc 1 691 0
 938              		.cfi_startproc
 939              		@ args = 0, pretend = 0, frame = 32
 940              		@ frame_needed = 1, uses_anonymous_args = 0
 941 0000 80B5     		push	{r7, lr}
 942              	.LCFI32:
 943              		.cfi_def_cfa_offset 8
 944              		.cfi_offset 7, -8
 945              		.cfi_offset 14, -4
 946 0002 88B0     		sub	sp, sp, #32
 947              	.LCFI33:
 948              		.cfi_def_cfa_offset 40
 949 0004 00AF     		add	r7, sp, #0
 950              	.LCFI34:
 951              		.cfi_def_cfa_register 7
 952 0006 F860     		str	r0, [r7, #12]
 953 0008 B960     		str	r1, [r7, #8]
 954 000a 7A60     		str	r2, [r7, #4]
 692:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   uint32_t counter_time = 0, counter_alarm = 0, hours = 0;
 955              		.loc 1 692 0
 956 000c 0023     		movs	r3, #0
 957 000e FB61     		str	r3, [r7, #28]
 958 0010 0023     		movs	r3, #0
 959 0012 BB61     		str	r3, [r7, #24]
 960 0014 0023     		movs	r3, #0
 961 0016 7B61     		str	r3, [r7, #20]
 693:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   
 694:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   /* Check input parameters */
 695:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   if((hrtc == NULL) || (sDate == NULL))
 962              		.loc 1 695 0
 963 0018 FB68     		ldr	r3, [r7, #12]
 964 001a 002B     		cmp	r3, #0
 965 001c 02D0     		beq	.L46
 966              		.loc 1 695 0 is_stmt 0 discriminator 1
 967 001e BB68     		ldr	r3, [r7, #8]
ARM GAS  /tmp/cccafUze.s 			page 30


 968 0020 002B     		cmp	r3, #0
 969 0022 01D1     		bne	.L47
 970              	.L46:
 696:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {
 697:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****      return HAL_ERROR;
 971              		.loc 1 697 0 is_stmt 1
 972 0024 0123     		movs	r3, #1
 973 0026 99E0     		b	.L48
 974              	.L47:
 698:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   }
 699:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   
 700:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   /* Check the parameters */
 701:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   assert_param(IS_RTC_FORMAT(Format));
 702:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   
 703:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****  /* Process Locked */ 
 704:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****  __HAL_LOCK(hrtc);
 975              		.loc 1 704 0
 976 0028 FB68     		ldr	r3, [r7, #12]
 977 002a 1B7C     		ldrb	r3, [r3, #16]	@ zero_extendqisi2
 978 002c 012B     		cmp	r3, #1
 979 002e 01D1     		bne	.L49
 980              		.loc 1 704 0 is_stmt 0 discriminator 1
 981 0030 0223     		movs	r3, #2
 982 0032 93E0     		b	.L48
 983              	.L49:
 984              		.loc 1 704 0 discriminator 2
 985 0034 FB68     		ldr	r3, [r7, #12]
 986 0036 0122     		movs	r2, #1
 987 0038 1A74     		strb	r2, [r3, #16]
 705:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   
 706:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   hrtc->State = HAL_RTC_STATE_BUSY; 
 988              		.loc 1 706 0 is_stmt 1 discriminator 2
 989 003a FB68     		ldr	r3, [r7, #12]
 990 003c 0222     		movs	r2, #2
 991 003e 5A74     		strb	r2, [r3, #17]
 707:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   
 708:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   if(Format == RTC_FORMAT_BIN)
 992              		.loc 1 708 0 discriminator 2
 993 0040 7B68     		ldr	r3, [r7, #4]
 994 0042 002B     		cmp	r3, #0
 995 0044 0CD1     		bne	.L50
 709:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {   
 710:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     assert_param(IS_RTC_YEAR(sDate->Year));
 711:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     assert_param(IS_RTC_MONTH(sDate->Month));
 712:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     assert_param(IS_RTC_DATE(sDate->Date)); 
 713:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 714:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     /* Change the current date */
 715:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     hrtc->DateToUpdate.Year  = sDate->Year;
 996              		.loc 1 715 0
 997 0046 BB68     		ldr	r3, [r7, #8]
 998 0048 DA78     		ldrb	r2, [r3, #3]	@ zero_extendqisi2
 999 004a FB68     		ldr	r3, [r7, #12]
 1000 004c DA73     		strb	r2, [r3, #15]
 716:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     hrtc->DateToUpdate.Month = sDate->Month;
 1001              		.loc 1 716 0
 1002 004e BB68     		ldr	r3, [r7, #8]
 1003 0050 5A78     		ldrb	r2, [r3, #1]	@ zero_extendqisi2
ARM GAS  /tmp/cccafUze.s 			page 31


 1004 0052 FB68     		ldr	r3, [r7, #12]
 1005 0054 5A73     		strb	r2, [r3, #13]
 717:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     hrtc->DateToUpdate.Date  = sDate->Date;
 1006              		.loc 1 717 0
 1007 0056 BB68     		ldr	r3, [r7, #8]
 1008 0058 9A78     		ldrb	r2, [r3, #2]	@ zero_extendqisi2
 1009 005a FB68     		ldr	r3, [r7, #12]
 1010 005c 9A73     		strb	r2, [r3, #14]
 1011 005e 1AE0     		b	.L51
 1012              	.L50:
 718:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   }
 719:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   else
 720:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {   
 721:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     assert_param(IS_RTC_YEAR(RTC_Bcd2ToByte(sDate->Year)));
 722:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     assert_param(IS_RTC_MONTH(RTC_Bcd2ToByte(sDate->Month)));
 723:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     assert_param(IS_RTC_DATE(RTC_Bcd2ToByte(sDate->Date)));
 724:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     
 725:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     /* Change the current date */
 726:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     hrtc->DateToUpdate.Year  = RTC_Bcd2ToByte(sDate->Year);
 1013              		.loc 1 726 0
 1014 0060 BB68     		ldr	r3, [r7, #8]
 1015 0062 DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 1016 0064 1846     		mov	r0, r3
 1017 0066 FFF7FEFF 		bl	RTC_Bcd2ToByte
 1018 006a 0346     		mov	r3, r0
 1019 006c 1A46     		mov	r2, r3
 1020 006e FB68     		ldr	r3, [r7, #12]
 1021 0070 DA73     		strb	r2, [r3, #15]
 727:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     hrtc->DateToUpdate.Month = RTC_Bcd2ToByte(sDate->Month);
 1022              		.loc 1 727 0
 1023 0072 BB68     		ldr	r3, [r7, #8]
 1024 0074 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 1025 0076 1846     		mov	r0, r3
 1026 0078 FFF7FEFF 		bl	RTC_Bcd2ToByte
 1027 007c 0346     		mov	r3, r0
 1028 007e 1A46     		mov	r2, r3
 1029 0080 FB68     		ldr	r3, [r7, #12]
 1030 0082 5A73     		strb	r2, [r3, #13]
 728:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     hrtc->DateToUpdate.Date  = RTC_Bcd2ToByte(sDate->Date);
 1031              		.loc 1 728 0
 1032 0084 BB68     		ldr	r3, [r7, #8]
 1033 0086 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 1034 0088 1846     		mov	r0, r3
 1035 008a FFF7FEFF 		bl	RTC_Bcd2ToByte
 1036 008e 0346     		mov	r3, r0
 1037 0090 1A46     		mov	r2, r3
 1038 0092 FB68     		ldr	r3, [r7, #12]
 1039 0094 9A73     		strb	r2, [r3, #14]
 1040              	.L51:
 729:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   }
 730:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 731:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   /* WeekDay set by user can be ignored because automatically calculated */
 732:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   hrtc->DateToUpdate.WeekDay = RTC_WeekDayNum(hrtc->DateToUpdate.Year, hrtc->DateToUpdate.Month, hr
 1041              		.loc 1 732 0
 1042 0096 FB68     		ldr	r3, [r7, #12]
 1043 0098 DB7B     		ldrb	r3, [r3, #15]	@ zero_extendqisi2
 1044 009a 1946     		mov	r1, r3
ARM GAS  /tmp/cccafUze.s 			page 32


 1045 009c FB68     		ldr	r3, [r7, #12]
 1046 009e 5A7B     		ldrb	r2, [r3, #13]	@ zero_extendqisi2
 1047 00a0 FB68     		ldr	r3, [r7, #12]
 1048 00a2 9B7B     		ldrb	r3, [r3, #14]	@ zero_extendqisi2
 1049 00a4 0846     		mov	r0, r1
 1050 00a6 1146     		mov	r1, r2
 1051 00a8 1A46     		mov	r2, r3
 1052 00aa FFF7FEFF 		bl	RTC_WeekDayNum
 1053 00ae 0346     		mov	r3, r0
 1054 00b0 1A46     		mov	r2, r3
 1055 00b2 FB68     		ldr	r3, [r7, #12]
 1056 00b4 1A73     		strb	r2, [r3, #12]
 733:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   sDate->WeekDay = hrtc->DateToUpdate.WeekDay;
 1057              		.loc 1 733 0
 1058 00b6 FB68     		ldr	r3, [r7, #12]
 1059 00b8 1A7B     		ldrb	r2, [r3, #12]	@ zero_extendqisi2
 1060 00ba BB68     		ldr	r3, [r7, #8]
 1061 00bc 1A70     		strb	r2, [r3]
 734:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 735:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   /* Reset time to be aligned on the same day */
 736:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   /* Read the time counter*/
 737:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   counter_time = RTC_ReadTimeCounter(hrtc);
 1062              		.loc 1 737 0
 1063 00be F868     		ldr	r0, [r7, #12]
 1064 00c0 FFF7FEFF 		bl	RTC_ReadTimeCounter
 1065 00c4 F861     		str	r0, [r7, #28]
 738:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 739:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   /* Fill the structure fields with the read parameters */
 740:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   hours = counter_time / 3600;
 1066              		.loc 1 740 0
 1067 00c6 FB69     		ldr	r3, [r7, #28]
 1068 00c8 264A     		ldr	r2, .L54
 1069 00ca A2FB0323 		umull	r2, r3, r2, r3
 1070 00ce DB0A     		lsrs	r3, r3, #11
 1071 00d0 7B61     		str	r3, [r7, #20]
 741:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   if (hours > 24)
 1072              		.loc 1 741 0
 1073 00d2 7B69     		ldr	r3, [r7, #20]
 1074 00d4 182B     		cmp	r3, #24
 1075 00d6 3AD9     		bls	.L52
 742:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {
 743:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     /* Set updated time in decreasing counter by number of days elapsed */
 744:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     counter_time -= ((hours / 24) * 24 * 3600);
 1076              		.loc 1 744 0
 1077 00d8 7B69     		ldr	r3, [r7, #20]
 1078 00da 234A     		ldr	r2, .L54+4
 1079 00dc A2FB0323 		umull	r2, r3, r2, r3
 1080 00e0 1B09     		lsrs	r3, r3, #4
 1081 00e2 224A     		ldr	r2, .L54+8
 1082 00e4 02FB03F3 		mul	r3, r2, r3
 1083 00e8 FA69     		ldr	r2, [r7, #28]
 1084 00ea D31A     		subs	r3, r2, r3
 1085 00ec FB61     		str	r3, [r7, #28]
 745:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     /* Write time counter in RTC registers */
 746:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     if (RTC_WriteTimeCounter(hrtc, counter_time) != HAL_OK)
 1086              		.loc 1 746 0
 1087 00ee F868     		ldr	r0, [r7, #12]
ARM GAS  /tmp/cccafUze.s 			page 33


 1088 00f0 F969     		ldr	r1, [r7, #28]
 1089 00f2 FFF7FEFF 		bl	RTC_WriteTimeCounter
 1090 00f6 0346     		mov	r3, r0
 1091 00f8 002B     		cmp	r3, #0
 1092 00fa 07D0     		beq	.L53
 747:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     {
 748:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       /* Set RTC state */
 749:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       hrtc->State = HAL_RTC_STATE_ERROR;
 1093              		.loc 1 749 0
 1094 00fc FB68     		ldr	r3, [r7, #12]
 1095 00fe 0422     		movs	r2, #4
 1096 0100 5A74     		strb	r2, [r3, #17]
 750:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       
 751:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       /* Process Unlocked */ 
 752:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       __HAL_UNLOCK(hrtc);
 1097              		.loc 1 752 0
 1098 0102 FB68     		ldr	r3, [r7, #12]
 1099 0104 0022     		movs	r2, #0
 1100 0106 1A74     		strb	r2, [r3, #16]
 753:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       
 754:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       return HAL_ERROR;
 1101              		.loc 1 754 0
 1102 0108 0123     		movs	r3, #1
 1103 010a 27E0     		b	.L48
 1104              	.L53:
 755:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     }
 756:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 757:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     /* Read current Alarm counter in RTC registers */
 758:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     counter_alarm = RTC_ReadAlarmCounter(hrtc);
 1105              		.loc 1 758 0
 1106 010c F868     		ldr	r0, [r7, #12]
 1107 010e FFF7FEFF 		bl	RTC_ReadAlarmCounter
 1108 0112 B861     		str	r0, [r7, #24]
 759:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 760:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     /* Set again alarm to match with new time if enabled */
 761:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     if (counter_alarm != RTC_ALARM_RESETVALUE)
 1109              		.loc 1 761 0
 1110 0114 BB69     		ldr	r3, [r7, #24]
 1111 0116 B3F1FF3F 		cmp	r3, #-1
 1112 011a 18D0     		beq	.L52
 762:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     {
 763:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       if(counter_alarm < counter_time)
 1113              		.loc 1 763 0
 1114 011c BA69     		ldr	r2, [r7, #24]
 1115 011e FB69     		ldr	r3, [r7, #28]
 1116 0120 9A42     		cmp	r2, r3
 1117 0122 14D2     		bcs	.L52
 764:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       {
 765:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****         /* Add 1 day to alarm counter*/
 766:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****         counter_alarm += (uint32_t)(24 * 3600);
 1118              		.loc 1 766 0
 1119 0124 BB69     		ldr	r3, [r7, #24]
 1120 0126 03F5A833 		add	r3, r3, #86016
 1121 012a 03F5C073 		add	r3, r3, #384
 1122 012e BB61     		str	r3, [r7, #24]
 767:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****         
 768:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****         /* Write new Alarm counter in RTC registers */
ARM GAS  /tmp/cccafUze.s 			page 34


 769:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****         if (RTC_WriteAlarmCounter(hrtc, counter_alarm) != HAL_OK)
 1123              		.loc 1 769 0
 1124 0130 F868     		ldr	r0, [r7, #12]
 1125 0132 B969     		ldr	r1, [r7, #24]
 1126 0134 FFF7FEFF 		bl	RTC_WriteAlarmCounter
 1127 0138 0346     		mov	r3, r0
 1128 013a 002B     		cmp	r3, #0
 1129 013c 07D0     		beq	.L52
 770:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****         {
 771:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****           /* Set RTC state */
 772:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****           hrtc->State = HAL_RTC_STATE_ERROR;
 1130              		.loc 1 772 0
 1131 013e FB68     		ldr	r3, [r7, #12]
 1132 0140 0422     		movs	r2, #4
 1133 0142 5A74     		strb	r2, [r3, #17]
 773:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****           
 774:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****           /* Process Unlocked */ 
 775:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****           __HAL_UNLOCK(hrtc);
 1134              		.loc 1 775 0
 1135 0144 FB68     		ldr	r3, [r7, #12]
 1136 0146 0022     		movs	r2, #0
 1137 0148 1A74     		strb	r2, [r3, #16]
 776:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****           
 777:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****           return HAL_ERROR;
 1138              		.loc 1 777 0
 1139 014a 0123     		movs	r3, #1
 1140 014c 06E0     		b	.L48
 1141              	.L52:
 778:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****         }
 779:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       }
 780:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     }
 781:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     
 782:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 783:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   }
 784:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 785:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   hrtc->State = HAL_RTC_STATE_READY ;
 1142              		.loc 1 785 0
 1143 014e FB68     		ldr	r3, [r7, #12]
 1144 0150 0122     		movs	r2, #1
 1145 0152 5A74     		strb	r2, [r3, #17]
 786:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   
 787:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   /* Process Unlocked */ 
 788:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   __HAL_UNLOCK(hrtc);
 1146              		.loc 1 788 0
 1147 0154 FB68     		ldr	r3, [r7, #12]
 1148 0156 0022     		movs	r2, #0
 1149 0158 1A74     		strb	r2, [r3, #16]
 789:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   
 790:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   return HAL_OK;    
 1150              		.loc 1 790 0
 1151 015a 0023     		movs	r3, #0
 1152              	.L48:
 791:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** }
 1153              		.loc 1 791 0
 1154 015c 1846     		mov	r0, r3
 1155 015e 2037     		adds	r7, r7, #32
 1156              	.LCFI35:
ARM GAS  /tmp/cccafUze.s 			page 35


 1157              		.cfi_def_cfa_offset 8
 1158 0160 BD46     		mov	sp, r7
 1159              	.LCFI36:
 1160              		.cfi_def_cfa_register 13
 1161              		@ sp needed
 1162 0162 80BD     		pop	{r7, pc}
 1163              	.L55:
 1164              		.align	2
 1165              	.L54:
 1166 0164 C5B3A291 		.word	-1851608123
 1167 0168 ABAAAAAA 		.word	-1431655765
 1168 016c 80510100 		.word	86400
 1169              		.cfi_endproc
 1170              	.LFE69:
 1172              		.section	.text.HAL_RTC_GetDate,"ax",%progbits
 1173              		.align	2
 1174              		.global	HAL_RTC_GetDate
 1175              		.thumb
 1176              		.thumb_func
 1178              	HAL_RTC_GetDate:
 1179              	.LFB70:
 792:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 793:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** /**
 794:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @brief  Gets RTC current date.
 795:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @param  hrtc   pointer to a RTC_HandleTypeDef structure that contains
 796:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   *                the configuration information for RTC.
 797:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @param  sDate: Pointer to Date structure
 798:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @param  Format: Specifies the format of the entered parameters.
 799:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   *          This parameter can be one of the following values:
 800:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   *            @arg RTC_FORMAT_BIN:  Binary data format 
 801:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   *            @arg RTC_FORMAT_BCD:  BCD data format
 802:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @retval HAL status
 803:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   */
 804:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** HAL_StatusTypeDef HAL_RTC_GetDate(RTC_HandleTypeDef *hrtc, RTC_DateTypeDef *sDate, uint32_t Format)
 805:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** {
 1180              		.loc 1 805 0
 1181              		.cfi_startproc
 1182              		@ args = 0, pretend = 0, frame = 24
 1183              		@ frame_needed = 1, uses_anonymous_args = 0
 1184 0000 80B5     		push	{r7, lr}
 1185              	.LCFI37:
 1186              		.cfi_def_cfa_offset 8
 1187              		.cfi_offset 7, -8
 1188              		.cfi_offset 14, -4
 1189 0002 86B0     		sub	sp, sp, #24
 1190              	.LCFI38:
 1191              		.cfi_def_cfa_offset 32
 1192 0004 00AF     		add	r7, sp, #0
 1193              	.LCFI39:
 1194              		.cfi_def_cfa_register 7
 1195 0006 F860     		str	r0, [r7, #12]
 1196 0008 B960     		str	r1, [r7, #8]
 1197 000a 7A60     		str	r2, [r7, #4]
 806:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   RTC_TimeTypeDef stime = {0};
 1198              		.loc 1 806 0
 1199 000c 0023     		movs	r3, #0
 1200 000e BB82     		strh	r3, [r7, #20]	@ movhi
ARM GAS  /tmp/cccafUze.s 			page 36


 1201 0010 0023     		movs	r3, #0
 1202 0012 BB75     		strb	r3, [r7, #22]
 807:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   
 808:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   /* Check input parameters */
 809:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   if((hrtc == NULL) || (sDate == NULL))
 1203              		.loc 1 809 0
 1204 0014 FB68     		ldr	r3, [r7, #12]
 1205 0016 002B     		cmp	r3, #0
 1206 0018 02D0     		beq	.L57
 1207              		.loc 1 809 0 is_stmt 0 discriminator 1
 1208 001a BB68     		ldr	r3, [r7, #8]
 1209 001c 002B     		cmp	r3, #0
 1210 001e 01D1     		bne	.L58
 1211              	.L57:
 810:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {
 811:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****      return HAL_ERROR;
 1212              		.loc 1 811 0 is_stmt 1
 1213 0020 0123     		movs	r3, #1
 1214 0022 3AE0     		b	.L62
 1215              	.L58:
 812:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   }
 813:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   
 814:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   /* Check the parameters */
 815:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   assert_param(IS_RTC_FORMAT(Format));
 816:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   
 817:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   /* Call HAL_RTC_GetTime function to update date if counter higher than 24 hours */
 818:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   if (HAL_RTC_GetTime(hrtc, &stime, RTC_FORMAT_BIN) != HAL_OK)
 1216              		.loc 1 818 0
 1217 0024 07F11403 		add	r3, r7, #20
 1218 0028 F868     		ldr	r0, [r7, #12]
 1219 002a 1946     		mov	r1, r3
 1220 002c 0022     		movs	r2, #0
 1221 002e FFF7FEFF 		bl	HAL_RTC_GetTime
 1222 0032 0346     		mov	r3, r0
 1223 0034 002B     		cmp	r3, #0
 1224 0036 01D0     		beq	.L60
 819:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {
 820:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     return HAL_ERROR;
 1225              		.loc 1 820 0
 1226 0038 0123     		movs	r3, #1
 1227 003a 2EE0     		b	.L62
 1228              	.L60:
 821:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   }
 822:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 823:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   /* Fill the structure fields with the read parameters */
 824:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   sDate->WeekDay  = hrtc->DateToUpdate.WeekDay;
 1229              		.loc 1 824 0
 1230 003c FB68     		ldr	r3, [r7, #12]
 1231 003e 1A7B     		ldrb	r2, [r3, #12]	@ zero_extendqisi2
 1232 0040 BB68     		ldr	r3, [r7, #8]
 1233 0042 1A70     		strb	r2, [r3]
 825:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   sDate->Year     = hrtc->DateToUpdate.Year;
 1234              		.loc 1 825 0
 1235 0044 FB68     		ldr	r3, [r7, #12]
 1236 0046 DA7B     		ldrb	r2, [r3, #15]	@ zero_extendqisi2
 1237 0048 BB68     		ldr	r3, [r7, #8]
 1238 004a DA70     		strb	r2, [r3, #3]
ARM GAS  /tmp/cccafUze.s 			page 37


 826:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   sDate->Month    = hrtc->DateToUpdate.Month;
 1239              		.loc 1 826 0
 1240 004c FB68     		ldr	r3, [r7, #12]
 1241 004e 5A7B     		ldrb	r2, [r3, #13]	@ zero_extendqisi2
 1242 0050 BB68     		ldr	r3, [r7, #8]
 1243 0052 5A70     		strb	r2, [r3, #1]
 827:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   sDate->Date     = hrtc->DateToUpdate.Date;
 1244              		.loc 1 827 0
 1245 0054 FB68     		ldr	r3, [r7, #12]
 1246 0056 9A7B     		ldrb	r2, [r3, #14]	@ zero_extendqisi2
 1247 0058 BB68     		ldr	r3, [r7, #8]
 1248 005a 9A70     		strb	r2, [r3, #2]
 828:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 829:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   /* Check the input parameters format */
 830:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   if(Format != RTC_FORMAT_BIN)
 1249              		.loc 1 830 0
 1250 005c 7B68     		ldr	r3, [r7, #4]
 1251 005e 002B     		cmp	r3, #0
 1252 0060 1AD0     		beq	.L61
 831:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {    
 832:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     /* Convert the date structure parameters to BCD format */
 833:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     sDate->Year   = (uint8_t)RTC_ByteToBcd2(sDate->Year);
 1253              		.loc 1 833 0
 1254 0062 BB68     		ldr	r3, [r7, #8]
 1255 0064 DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 1256 0066 1846     		mov	r0, r3
 1257 0068 FFF7FEFF 		bl	RTC_ByteToBcd2
 1258 006c 0346     		mov	r3, r0
 1259 006e 1A46     		mov	r2, r3
 1260 0070 BB68     		ldr	r3, [r7, #8]
 1261 0072 DA70     		strb	r2, [r3, #3]
 834:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     sDate->Month  = (uint8_t)RTC_ByteToBcd2(sDate->Month);
 1262              		.loc 1 834 0
 1263 0074 BB68     		ldr	r3, [r7, #8]
 1264 0076 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 1265 0078 1846     		mov	r0, r3
 1266 007a FFF7FEFF 		bl	RTC_ByteToBcd2
 1267 007e 0346     		mov	r3, r0
 1268 0080 1A46     		mov	r2, r3
 1269 0082 BB68     		ldr	r3, [r7, #8]
 1270 0084 5A70     		strb	r2, [r3, #1]
 835:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     sDate->Date   = (uint8_t)RTC_ByteToBcd2(sDate->Date);  
 1271              		.loc 1 835 0
 1272 0086 BB68     		ldr	r3, [r7, #8]
 1273 0088 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 1274 008a 1846     		mov	r0, r3
 1275 008c FFF7FEFF 		bl	RTC_ByteToBcd2
 1276 0090 0346     		mov	r3, r0
 1277 0092 1A46     		mov	r2, r3
 1278 0094 BB68     		ldr	r3, [r7, #8]
 1279 0096 9A70     		strb	r2, [r3, #2]
 1280              	.L61:
 836:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   }
 837:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   return HAL_OK;
 1281              		.loc 1 837 0
 1282 0098 0023     		movs	r3, #0
 1283              	.L62:
ARM GAS  /tmp/cccafUze.s 			page 38


 838:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** }
 1284              		.loc 1 838 0 discriminator 1
 1285 009a 1846     		mov	r0, r3
 1286 009c 1837     		adds	r7, r7, #24
 1287              	.LCFI40:
 1288              		.cfi_def_cfa_offset 8
 1289 009e BD46     		mov	sp, r7
 1290              	.LCFI41:
 1291              		.cfi_def_cfa_register 13
 1292              		@ sp needed
 1293 00a0 80BD     		pop	{r7, pc}
 1294              		.cfi_endproc
 1295              	.LFE70:
 1297 00a2 00BF     		.section	.text.HAL_RTC_SetAlarm,"ax",%progbits
 1298              		.align	2
 1299              		.global	HAL_RTC_SetAlarm
 1300              		.thumb
 1301              		.thumb_func
 1303              	HAL_RTC_SetAlarm:
 1304              	.LFB71:
 839:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 840:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** /**
 841:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @}
 842:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   */
 843:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 844:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** /** @defgroup RTC_Exported_Functions_Group3 Alarm functions
 845:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****  *  @brief   RTC Alarm functions
 846:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****  *
 847:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** @verbatim   
 848:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****  ===============================================================================
 849:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****                  ##### RTC Alarm functions #####
 850:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****  ===============================================================================  
 851:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****  
 852:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****  [..] This section provides functions allowing to configure Alarm feature
 853:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 854:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** @endverbatim
 855:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @{
 856:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   */
 857:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 858:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** /**
 859:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @brief  Sets the specified RTC Alarm.
 860:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @param  hrtc   pointer to a RTC_HandleTypeDef structure that contains
 861:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   *                the configuration information for RTC.
 862:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @param  sAlarm: Pointer to Alarm structure
 863:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @param  Format: Specifies the format of the entered parameters.
 864:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   *          This parameter can be one of the following values:
 865:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   *             @arg RTC_FORMAT_BIN: Binary data format 
 866:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   *             @arg RTC_FORMAT_BCD: BCD data format
 867:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @retval HAL status
 868:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   */
 869:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** HAL_StatusTypeDef HAL_RTC_SetAlarm(RTC_HandleTypeDef *hrtc, RTC_AlarmTypeDef *sAlarm, uint32_t Form
 870:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** {
 1305              		.loc 1 870 0
 1306              		.cfi_startproc
 1307              		@ args = 0, pretend = 0, frame = 32
 1308              		@ frame_needed = 1, uses_anonymous_args = 0
 1309 0000 90B5     		push	{r4, r7, lr}
ARM GAS  /tmp/cccafUze.s 			page 39


 1310              	.LCFI42:
 1311              		.cfi_def_cfa_offset 12
 1312              		.cfi_offset 4, -12
 1313              		.cfi_offset 7, -8
 1314              		.cfi_offset 14, -4
 1315 0002 89B0     		sub	sp, sp, #36
 1316              	.LCFI43:
 1317              		.cfi_def_cfa_offset 48
 1318 0004 00AF     		add	r7, sp, #0
 1319              	.LCFI44:
 1320              		.cfi_def_cfa_register 7
 1321 0006 F860     		str	r0, [r7, #12]
 1322 0008 B960     		str	r1, [r7, #8]
 1323 000a 7A60     		str	r2, [r7, #4]
 871:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   uint32_t counter_alarm = 0, counter_time;
 1324              		.loc 1 871 0
 1325 000c 0023     		movs	r3, #0
 1326 000e FB61     		str	r3, [r7, #28]
 872:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   RTC_TimeTypeDef stime = {0};
 1327              		.loc 1 872 0
 1328 0010 0023     		movs	r3, #0
 1329 0012 BB82     		strh	r3, [r7, #20]	@ movhi
 1330 0014 0023     		movs	r3, #0
 1331 0016 BB75     		strb	r3, [r7, #22]
 873:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   
 874:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   /* Check input parameters */
 875:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   if((hrtc == NULL) || (sAlarm == NULL))
 1332              		.loc 1 875 0
 1333 0018 FB68     		ldr	r3, [r7, #12]
 1334 001a 002B     		cmp	r3, #0
 1335 001c 02D0     		beq	.L64
 1336              		.loc 1 875 0 is_stmt 0 discriminator 1
 1337 001e BB68     		ldr	r3, [r7, #8]
 1338 0020 002B     		cmp	r3, #0
 1339 0022 01D1     		bne	.L65
 1340              	.L64:
 876:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {
 877:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****      return HAL_ERROR;
 1341              		.loc 1 877 0 is_stmt 1
 1342 0024 0123     		movs	r3, #1
 1343 0026 7DE0     		b	.L73
 1344              	.L65:
 878:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   }
 879:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   
 880:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   /* Check the parameters */
 881:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   assert_param(IS_RTC_FORMAT(Format));
 882:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   assert_param(IS_RTC_ALARM(sAlarm->Alarm));
 883:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 884:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   /* Process Locked */ 
 885:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   __HAL_LOCK(hrtc);
 1345              		.loc 1 885 0
 1346 0028 FB68     		ldr	r3, [r7, #12]
 1347 002a 1B7C     		ldrb	r3, [r3, #16]	@ zero_extendqisi2
 1348 002c 012B     		cmp	r3, #1
 1349 002e 01D1     		bne	.L67
 1350              		.loc 1 885 0 is_stmt 0 discriminator 1
 1351 0030 0223     		movs	r3, #2
ARM GAS  /tmp/cccafUze.s 			page 40


 1352 0032 77E0     		b	.L73
 1353              	.L67:
 1354              		.loc 1 885 0 discriminator 2
 1355 0034 FB68     		ldr	r3, [r7, #12]
 1356 0036 0122     		movs	r2, #1
 1357 0038 1A74     		strb	r2, [r3, #16]
 886:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   
 887:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   hrtc->State = HAL_RTC_STATE_BUSY;
 1358              		.loc 1 887 0 is_stmt 1 discriminator 2
 1359 003a FB68     		ldr	r3, [r7, #12]
 1360 003c 0222     		movs	r2, #2
 1361 003e 5A74     		strb	r2, [r3, #17]
 888:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   
 889:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   /* Call HAL_RTC_GetTime function to update date if counter higher than 24 hours */
 890:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   if (HAL_RTC_GetTime(hrtc, &stime, RTC_FORMAT_BIN) != HAL_OK)
 1362              		.loc 1 890 0 discriminator 2
 1363 0040 07F11403 		add	r3, r7, #20
 1364 0044 F868     		ldr	r0, [r7, #12]
 1365 0046 1946     		mov	r1, r3
 1366 0048 0022     		movs	r2, #0
 1367 004a FFF7FEFF 		bl	HAL_RTC_GetTime
 1368 004e 0346     		mov	r3, r0
 1369 0050 002B     		cmp	r3, #0
 1370 0052 01D0     		beq	.L68
 891:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {
 892:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     return HAL_ERROR;
 1371              		.loc 1 892 0
 1372 0054 0123     		movs	r3, #1
 1373 0056 65E0     		b	.L73
 1374              	.L68:
 893:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   }
 894:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 895:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   /* Convert time in seconds */
 896:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   counter_time = (uint32_t)(((uint32_t)stime.Hours * 3600) + \
 1375              		.loc 1 896 0
 1376 0058 3B7D     		ldrb	r3, [r7, #20]	@ zero_extendqisi2
 1377 005a 1A46     		mov	r2, r3
 1378 005c 4FF46163 		mov	r3, #3600
 1379 0060 03FB02F2 		mul	r2, r3, r2
 897:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****                       ((uint32_t)stime.Minutes * 60) + \
 1380              		.loc 1 897 0
 1381 0064 7B7D     		ldrb	r3, [r7, #21]	@ zero_extendqisi2
 1382 0066 1946     		mov	r1, r3
 1383 0068 0B46     		mov	r3, r1
 1384 006a 1B01     		lsls	r3, r3, #4
 1385 006c 5B1A     		subs	r3, r3, r1
 1386 006e 9B00     		lsls	r3, r3, #2
 896:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****                       ((uint32_t)stime.Minutes * 60) + \
 1387              		.loc 1 896 0
 1388 0070 1344     		add	r3, r3, r2
 898:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****                       ((uint32_t)stime.Seconds));  
 1389              		.loc 1 898 0
 1390 0072 BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 896:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****                       ((uint32_t)stime.Minutes * 60) + \
 1391              		.loc 1 896 0
 1392 0074 1344     		add	r3, r3, r2
 1393 0076 BB61     		str	r3, [r7, #24]
ARM GAS  /tmp/cccafUze.s 			page 41


 899:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 900:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   if(Format == RTC_FORMAT_BIN)
 1394              		.loc 1 900 0
 1395 0078 7B68     		ldr	r3, [r7, #4]
 1396 007a 002B     		cmp	r3, #0
 1397 007c 13D1     		bne	.L69
 901:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {
 902:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     assert_param(IS_RTC_HOUR24(sAlarm->AlarmTime.Hours));
 903:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     assert_param(IS_RTC_MINUTES(sAlarm->AlarmTime.Minutes));
 904:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     assert_param(IS_RTC_SECONDS(sAlarm->AlarmTime.Seconds));
 905:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     
 906:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     counter_alarm = (uint32_t)(((uint32_t)sAlarm->AlarmTime.Hours * 3600) + \
 1398              		.loc 1 906 0
 1399 007e BB68     		ldr	r3, [r7, #8]
 1400 0080 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1401 0082 1A46     		mov	r2, r3
 1402 0084 4FF46163 		mov	r3, #3600
 1403 0088 03FB02F2 		mul	r2, r3, r2
 907:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****                         ((uint32_t)sAlarm->AlarmTime.Minutes * 60) + \
 1404              		.loc 1 907 0
 1405 008c BB68     		ldr	r3, [r7, #8]
 1406 008e 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 1407 0090 1946     		mov	r1, r3
 1408 0092 0B46     		mov	r3, r1
 1409 0094 1B01     		lsls	r3, r3, #4
 1410 0096 5B1A     		subs	r3, r3, r1
 1411 0098 9B00     		lsls	r3, r3, #2
 906:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****                         ((uint32_t)sAlarm->AlarmTime.Minutes * 60) + \
 1412              		.loc 1 906 0
 1413 009a 1344     		add	r3, r3, r2
 908:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****                         ((uint32_t)sAlarm->AlarmTime.Seconds));  
 1414              		.loc 1 908 0
 1415 009c BA68     		ldr	r2, [r7, #8]
 1416 009e 9278     		ldrb	r2, [r2, #2]	@ zero_extendqisi2
 906:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****                         ((uint32_t)sAlarm->AlarmTime.Minutes * 60) + \
 1417              		.loc 1 906 0
 1418 00a0 1344     		add	r3, r3, r2
 1419 00a2 FB61     		str	r3, [r7, #28]
 1420 00a4 1EE0     		b	.L70
 1421              	.L69:
 909:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   }
 910:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   else
 911:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {
 912:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     assert_param(IS_RTC_HOUR24(RTC_Bcd2ToByte(sAlarm->AlarmTime.Hours)));
 913:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     assert_param(IS_RTC_MINUTES(RTC_Bcd2ToByte(sAlarm->AlarmTime.Minutes)));
 914:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     assert_param(IS_RTC_SECONDS(RTC_Bcd2ToByte(sAlarm->AlarmTime.Seconds)));
 915:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     
 916:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     counter_alarm = (((uint32_t)(RTC_Bcd2ToByte(sAlarm->AlarmTime.Hours)) * 3600) + \
 1422              		.loc 1 916 0
 1423 00a6 BB68     		ldr	r3, [r7, #8]
 1424 00a8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1425 00aa 1846     		mov	r0, r3
 1426 00ac FFF7FEFF 		bl	RTC_Bcd2ToByte
 1427 00b0 0346     		mov	r3, r0
 1428 00b2 1A46     		mov	r2, r3
 1429 00b4 4FF46163 		mov	r3, #3600
 1430 00b8 03FB02F4 		mul	r4, r3, r2
ARM GAS  /tmp/cccafUze.s 			page 42


 917:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****               ((uint32_t)(RTC_Bcd2ToByte(sAlarm->AlarmTime.Minutes)) * 60) + \
 1431              		.loc 1 917 0
 1432 00bc BB68     		ldr	r3, [r7, #8]
 1433 00be 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 1434 00c0 1846     		mov	r0, r3
 1435 00c2 FFF7FEFF 		bl	RTC_Bcd2ToByte
 1436 00c6 0346     		mov	r3, r0
 1437 00c8 1A46     		mov	r2, r3
 1438 00ca 1346     		mov	r3, r2
 1439 00cc 1B01     		lsls	r3, r3, #4
 1440 00ce 9B1A     		subs	r3, r3, r2
 1441 00d0 9B00     		lsls	r3, r3, #2
 916:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****               ((uint32_t)(RTC_Bcd2ToByte(sAlarm->AlarmTime.Minutes)) * 60) + \
 1442              		.loc 1 916 0
 1443 00d2 1C44     		add	r4, r4, r3
 918:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****               ((uint32_t)RTC_Bcd2ToByte(sAlarm->AlarmTime.Seconds)));   
 1444              		.loc 1 918 0
 1445 00d4 BB68     		ldr	r3, [r7, #8]
 1446 00d6 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 1447 00d8 1846     		mov	r0, r3
 1448 00da FFF7FEFF 		bl	RTC_Bcd2ToByte
 1449 00de 0346     		mov	r3, r0
 916:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****               ((uint32_t)(RTC_Bcd2ToByte(sAlarm->AlarmTime.Minutes)) * 60) + \
 1450              		.loc 1 916 0
 1451 00e0 2344     		add	r3, r3, r4
 1452 00e2 FB61     		str	r3, [r7, #28]
 1453              	.L70:
 919:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   }
 920:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 921:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   /* Check that requested alarm should expire in the same day (otherwise add 1 day) */
 922:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   if (counter_alarm < counter_time)
 1454              		.loc 1 922 0
 1455 00e4 FA69     		ldr	r2, [r7, #28]
 1456 00e6 BB69     		ldr	r3, [r7, #24]
 1457 00e8 9A42     		cmp	r2, r3
 1458 00ea 05D2     		bcs	.L71
 923:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {
 924:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     /* Add 1 day to alarm counter*/
 925:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     counter_alarm += (uint32_t)(24 * 3600);
 1459              		.loc 1 925 0
 1460 00ec FB69     		ldr	r3, [r7, #28]
 1461 00ee 03F5A833 		add	r3, r3, #86016
 1462 00f2 03F5C073 		add	r3, r3, #384
 1463 00f6 FB61     		str	r3, [r7, #28]
 1464              	.L71:
 926:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   }
 927:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 928:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   /* Write Alarm counter in RTC registers */
 929:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   if (RTC_WriteAlarmCounter(hrtc, counter_alarm) != HAL_OK)
 1465              		.loc 1 929 0
 1466 00f8 F868     		ldr	r0, [r7, #12]
 1467 00fa F969     		ldr	r1, [r7, #28]
 1468 00fc FFF7FEFF 		bl	RTC_WriteAlarmCounter
 1469 0100 0346     		mov	r3, r0
 1470 0102 002B     		cmp	r3, #0
 1471 0104 07D0     		beq	.L72
 930:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {
ARM GAS  /tmp/cccafUze.s 			page 43


 931:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     /* Set RTC state */
 932:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     hrtc->State = HAL_RTC_STATE_ERROR;
 1472              		.loc 1 932 0
 1473 0106 FB68     		ldr	r3, [r7, #12]
 1474 0108 0422     		movs	r2, #4
 1475 010a 5A74     		strb	r2, [r3, #17]
 933:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     
 934:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     /* Process Unlocked */ 
 935:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     __HAL_UNLOCK(hrtc);
 1476              		.loc 1 935 0
 1477 010c FB68     		ldr	r3, [r7, #12]
 1478 010e 0022     		movs	r2, #0
 1479 0110 1A74     		strb	r2, [r3, #16]
 936:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     
 937:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     return HAL_ERROR;
 1480              		.loc 1 937 0
 1481 0112 0123     		movs	r3, #1
 1482 0114 06E0     		b	.L73
 1483              	.L72:
 938:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   }
 939:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   else
 940:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {
 941:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     hrtc->State = HAL_RTC_STATE_READY;
 1484              		.loc 1 941 0
 1485 0116 FB68     		ldr	r3, [r7, #12]
 1486 0118 0122     		movs	r2, #1
 1487 011a 5A74     		strb	r2, [r3, #17]
 942:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   
 943:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****    __HAL_UNLOCK(hrtc); 
 1488              		.loc 1 943 0
 1489 011c FB68     		ldr	r3, [r7, #12]
 1490 011e 0022     		movs	r2, #0
 1491 0120 1A74     		strb	r2, [r3, #16]
 944:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****      
 945:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****    return HAL_OK;
 1492              		.loc 1 945 0
 1493 0122 0023     		movs	r3, #0
 1494              	.L73:
 946:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   }
 947:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** }
 1495              		.loc 1 947 0 discriminator 1
 1496 0124 1846     		mov	r0, r3
 1497 0126 2437     		adds	r7, r7, #36
 1498              	.LCFI45:
 1499              		.cfi_def_cfa_offset 12
 1500 0128 BD46     		mov	sp, r7
 1501              	.LCFI46:
 1502              		.cfi_def_cfa_register 13
 1503              		@ sp needed
 1504 012a 90BD     		pop	{r4, r7, pc}
 1505              		.cfi_endproc
 1506              	.LFE71:
 1508              		.section	.text.HAL_RTC_SetAlarm_IT,"ax",%progbits
 1509              		.align	2
 1510              		.global	HAL_RTC_SetAlarm_IT
 1511              		.thumb
 1512              		.thumb_func
ARM GAS  /tmp/cccafUze.s 			page 44


 1514              	HAL_RTC_SetAlarm_IT:
 1515              	.LFB72:
 948:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 949:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** /**
 950:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @brief  Sets the specified RTC Alarm with Interrupt 
 951:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @param  hrtc   pointer to a RTC_HandleTypeDef structure that contains
 952:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   *                the configuration information for RTC.
 953:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @param  sAlarm: Pointer to Alarm structure
 954:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @param  Format: Specifies the format of the entered parameters.
 955:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   *          This parameter can be one of the following values:
 956:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   *             @arg RTC_FORMAT_BIN: Binary data format 
 957:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   *             @arg RTC_FORMAT_BCD: BCD data format
 958:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @note   The HAL_RTC_SetTime() must be called before enabling the Alarm feature.   
 959:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @retval HAL status
 960:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   */
 961:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** HAL_StatusTypeDef HAL_RTC_SetAlarm_IT(RTC_HandleTypeDef *hrtc, RTC_AlarmTypeDef *sAlarm, uint32_t F
 962:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** {
 1516              		.loc 1 962 0
 1517              		.cfi_startproc
 1518              		@ args = 0, pretend = 0, frame = 32
 1519              		@ frame_needed = 1, uses_anonymous_args = 0
 1520 0000 90B5     		push	{r4, r7, lr}
 1521              	.LCFI47:
 1522              		.cfi_def_cfa_offset 12
 1523              		.cfi_offset 4, -12
 1524              		.cfi_offset 7, -8
 1525              		.cfi_offset 14, -4
 1526 0002 89B0     		sub	sp, sp, #36
 1527              	.LCFI48:
 1528              		.cfi_def_cfa_offset 48
 1529 0004 00AF     		add	r7, sp, #0
 1530              	.LCFI49:
 1531              		.cfi_def_cfa_register 7
 1532 0006 F860     		str	r0, [r7, #12]
 1533 0008 B960     		str	r1, [r7, #8]
 1534 000a 7A60     		str	r2, [r7, #4]
 963:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   uint32_t counter_alarm = 0, counter_time;
 1535              		.loc 1 963 0
 1536 000c 0023     		movs	r3, #0
 1537 000e FB61     		str	r3, [r7, #28]
 964:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   RTC_TimeTypeDef stime = {0};
 1538              		.loc 1 964 0
 1539 0010 0023     		movs	r3, #0
 1540 0012 BB82     		strh	r3, [r7, #20]	@ movhi
 1541 0014 0023     		movs	r3, #0
 1542 0016 BB75     		strb	r3, [r7, #22]
 965:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   
 966:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   /* Check input parameters */
 967:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   if((hrtc == NULL) || (sAlarm == NULL))
 1543              		.loc 1 967 0
 1544 0018 FB68     		ldr	r3, [r7, #12]
 1545 001a 002B     		cmp	r3, #0
 1546 001c 02D0     		beq	.L75
 1547              		.loc 1 967 0 is_stmt 0 discriminator 1
 1548 001e BB68     		ldr	r3, [r7, #8]
 1549 0020 002B     		cmp	r3, #0
 1550 0022 01D1     		bne	.L76
ARM GAS  /tmp/cccafUze.s 			page 45


 1551              	.L75:
 968:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {
 969:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****      return HAL_ERROR;
 1552              		.loc 1 969 0 is_stmt 1
 1553 0024 0123     		movs	r3, #1
 1554 0026 96E0     		b	.L84
 1555              	.L76:
 970:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   }
 971:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   
 972:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   /* Check the parameters */
 973:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   assert_param(IS_RTC_FORMAT(Format));
 974:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   assert_param(IS_RTC_ALARM(sAlarm->Alarm));
 975:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 976:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   /* Process Locked */ 
 977:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   __HAL_LOCK(hrtc);
 1556              		.loc 1 977 0
 1557 0028 FB68     		ldr	r3, [r7, #12]
 1558 002a 1B7C     		ldrb	r3, [r3, #16]	@ zero_extendqisi2
 1559 002c 012B     		cmp	r3, #1
 1560 002e 01D1     		bne	.L78
 1561              		.loc 1 977 0 is_stmt 0 discriminator 1
 1562 0030 0223     		movs	r3, #2
 1563 0032 90E0     		b	.L84
 1564              	.L78:
 1565              		.loc 1 977 0 discriminator 2
 1566 0034 FB68     		ldr	r3, [r7, #12]
 1567 0036 0122     		movs	r2, #1
 1568 0038 1A74     		strb	r2, [r3, #16]
 978:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   
 979:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   hrtc->State = HAL_RTC_STATE_BUSY;
 1569              		.loc 1 979 0 is_stmt 1 discriminator 2
 1570 003a FB68     		ldr	r3, [r7, #12]
 1571 003c 0222     		movs	r2, #2
 1572 003e 5A74     		strb	r2, [r3, #17]
 980:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   
 981:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   /* Call HAL_RTC_GetTime function to update date if counter higher than 24 hours */
 982:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   if (HAL_RTC_GetTime(hrtc, &stime, RTC_FORMAT_BIN) != HAL_OK)
 1573              		.loc 1 982 0 discriminator 2
 1574 0040 07F11403 		add	r3, r7, #20
 1575 0044 F868     		ldr	r0, [r7, #12]
 1576 0046 1946     		mov	r1, r3
 1577 0048 0022     		movs	r2, #0
 1578 004a FFF7FEFF 		bl	HAL_RTC_GetTime
 1579 004e 0346     		mov	r3, r0
 1580 0050 002B     		cmp	r3, #0
 1581 0052 01D0     		beq	.L79
 983:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {
 984:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     return HAL_ERROR;
 1582              		.loc 1 984 0
 1583 0054 0123     		movs	r3, #1
 1584 0056 7EE0     		b	.L84
 1585              	.L79:
 985:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   }
 986:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 987:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   /* Convert time in seconds */
 988:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   counter_time = (uint32_t)(((uint32_t)stime.Hours * 3600) + \
 1586              		.loc 1 988 0
ARM GAS  /tmp/cccafUze.s 			page 46


 1587 0058 3B7D     		ldrb	r3, [r7, #20]	@ zero_extendqisi2
 1588 005a 1A46     		mov	r2, r3
 1589 005c 4FF46163 		mov	r3, #3600
 1590 0060 03FB02F2 		mul	r2, r3, r2
 989:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****                       ((uint32_t)stime.Minutes * 60) + \
 1591              		.loc 1 989 0
 1592 0064 7B7D     		ldrb	r3, [r7, #21]	@ zero_extendqisi2
 1593 0066 1946     		mov	r1, r3
 1594 0068 0B46     		mov	r3, r1
 1595 006a 1B01     		lsls	r3, r3, #4
 1596 006c 5B1A     		subs	r3, r3, r1
 1597 006e 9B00     		lsls	r3, r3, #2
 988:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****                       ((uint32_t)stime.Minutes * 60) + \
 1598              		.loc 1 988 0
 1599 0070 1344     		add	r3, r3, r2
 990:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****                       ((uint32_t)stime.Seconds));  
 1600              		.loc 1 990 0
 1601 0072 BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 988:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****                       ((uint32_t)stime.Minutes * 60) + \
 1602              		.loc 1 988 0
 1603 0074 1344     		add	r3, r3, r2
 1604 0076 BB61     		str	r3, [r7, #24]
 991:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 992:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   if(Format == RTC_FORMAT_BIN)
 1605              		.loc 1 992 0
 1606 0078 7B68     		ldr	r3, [r7, #4]
 1607 007a 002B     		cmp	r3, #0
 1608 007c 13D1     		bne	.L80
 993:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {
 994:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     assert_param(IS_RTC_HOUR24(sAlarm->AlarmTime.Hours));
 995:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     assert_param(IS_RTC_MINUTES(sAlarm->AlarmTime.Minutes));
 996:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     assert_param(IS_RTC_SECONDS(sAlarm->AlarmTime.Seconds));
 997:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     
 998:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     counter_alarm = (uint32_t)(((uint32_t)sAlarm->AlarmTime.Hours * 3600) + \
 1609              		.loc 1 998 0
 1610 007e BB68     		ldr	r3, [r7, #8]
 1611 0080 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1612 0082 1A46     		mov	r2, r3
 1613 0084 4FF46163 		mov	r3, #3600
 1614 0088 03FB02F2 		mul	r2, r3, r2
 999:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       ((uint32_t)sAlarm->AlarmTime.Minutes * 60) + \
 1615              		.loc 1 999 0
 1616 008c BB68     		ldr	r3, [r7, #8]
 1617 008e 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 1618 0090 1946     		mov	r1, r3
 1619 0092 0B46     		mov	r3, r1
 1620 0094 1B01     		lsls	r3, r3, #4
 1621 0096 5B1A     		subs	r3, r3, r1
 1622 0098 9B00     		lsls	r3, r3, #2
 998:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       ((uint32_t)sAlarm->AlarmTime.Minutes * 60) + \
 1623              		.loc 1 998 0
 1624 009a 1344     		add	r3, r3, r2
1000:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****         ((uint32_t)sAlarm->AlarmTime.Seconds));  
 1625              		.loc 1 1000 0
 1626 009c BA68     		ldr	r2, [r7, #8]
 1627 009e 9278     		ldrb	r2, [r2, #2]	@ zero_extendqisi2
 998:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       ((uint32_t)sAlarm->AlarmTime.Minutes * 60) + \
ARM GAS  /tmp/cccafUze.s 			page 47


 1628              		.loc 1 998 0
 1629 00a0 1344     		add	r3, r3, r2
 1630 00a2 FB61     		str	r3, [r7, #28]
 1631 00a4 1EE0     		b	.L81
 1632              	.L80:
1001:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   }
1002:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   else
1003:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {
1004:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     assert_param(IS_RTC_HOUR24(RTC_Bcd2ToByte(sAlarm->AlarmTime.Hours)));
1005:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     assert_param(IS_RTC_MINUTES(RTC_Bcd2ToByte(sAlarm->AlarmTime.Minutes)));
1006:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     assert_param(IS_RTC_SECONDS(RTC_Bcd2ToByte(sAlarm->AlarmTime.Seconds)));
1007:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     
1008:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     counter_alarm = (((uint32_t)(RTC_Bcd2ToByte(sAlarm->AlarmTime.Hours)) * 3600) + \
 1633              		.loc 1 1008 0
 1634 00a6 BB68     		ldr	r3, [r7, #8]
 1635 00a8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1636 00aa 1846     		mov	r0, r3
 1637 00ac FFF7FEFF 		bl	RTC_Bcd2ToByte
 1638 00b0 0346     		mov	r3, r0
 1639 00b2 1A46     		mov	r2, r3
 1640 00b4 4FF46163 		mov	r3, #3600
 1641 00b8 03FB02F4 		mul	r4, r3, r2
1009:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       ((uint32_t)(RTC_Bcd2ToByte(sAlarm->AlarmTime.Minutes)) * 60) + \
 1642              		.loc 1 1009 0
 1643 00bc BB68     		ldr	r3, [r7, #8]
 1644 00be 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 1645 00c0 1846     		mov	r0, r3
 1646 00c2 FFF7FEFF 		bl	RTC_Bcd2ToByte
 1647 00c6 0346     		mov	r3, r0
 1648 00c8 1A46     		mov	r2, r3
 1649 00ca 1346     		mov	r3, r2
 1650 00cc 1B01     		lsls	r3, r3, #4
 1651 00ce 9B1A     		subs	r3, r3, r2
 1652 00d0 9B00     		lsls	r3, r3, #2
1008:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       ((uint32_t)(RTC_Bcd2ToByte(sAlarm->AlarmTime.Minutes)) * 60) + \
 1653              		.loc 1 1008 0
 1654 00d2 1C44     		add	r4, r4, r3
1010:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****         ((uint32_t)RTC_Bcd2ToByte(sAlarm->AlarmTime.Seconds)));   
 1655              		.loc 1 1010 0
 1656 00d4 BB68     		ldr	r3, [r7, #8]
 1657 00d6 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 1658 00d8 1846     		mov	r0, r3
 1659 00da FFF7FEFF 		bl	RTC_Bcd2ToByte
 1660 00de 0346     		mov	r3, r0
1008:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       ((uint32_t)(RTC_Bcd2ToByte(sAlarm->AlarmTime.Minutes)) * 60) + \
 1661              		.loc 1 1008 0
 1662 00e0 2344     		add	r3, r3, r4
 1663 00e2 FB61     		str	r3, [r7, #28]
 1664              	.L81:
1011:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   }
1012:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   
1013:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   /* Check that requested alarm should expire in the same day (otherwise add 1 day) */
1014:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   if (counter_alarm < counter_time)
 1665              		.loc 1 1014 0
 1666 00e4 FA69     		ldr	r2, [r7, #28]
 1667 00e6 BB69     		ldr	r3, [r7, #24]
 1668 00e8 9A42     		cmp	r2, r3
ARM GAS  /tmp/cccafUze.s 			page 48


 1669 00ea 05D2     		bcs	.L82
1015:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {
1016:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     /* Add 1 day to alarm counter*/
1017:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     counter_alarm += (uint32_t)(24 * 3600);
 1670              		.loc 1 1017 0
 1671 00ec FB69     		ldr	r3, [r7, #28]
 1672 00ee 03F5A833 		add	r3, r3, #86016
 1673 00f2 03F5C073 		add	r3, r3, #384
 1674 00f6 FB61     		str	r3, [r7, #28]
 1675              	.L82:
1018:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   }
1019:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
1020:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   /* Write alarm counter in RTC registers */
1021:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   if (RTC_WriteAlarmCounter(hrtc, counter_alarm) != HAL_OK)
 1676              		.loc 1 1021 0
 1677 00f8 F868     		ldr	r0, [r7, #12]
 1678 00fa F969     		ldr	r1, [r7, #28]
 1679 00fc FFF7FEFF 		bl	RTC_WriteAlarmCounter
 1680 0100 0346     		mov	r3, r0
 1681 0102 002B     		cmp	r3, #0
 1682 0104 07D0     		beq	.L83
1022:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {
1023:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     /* Set RTC state */
1024:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     hrtc->State = HAL_RTC_STATE_ERROR;
 1683              		.loc 1 1024 0
 1684 0106 FB68     		ldr	r3, [r7, #12]
 1685 0108 0422     		movs	r2, #4
 1686 010a 5A74     		strb	r2, [r3, #17]
1025:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     
1026:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     /* Process Unlocked */ 
1027:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     __HAL_UNLOCK(hrtc);
 1687              		.loc 1 1027 0
 1688 010c FB68     		ldr	r3, [r7, #12]
 1689 010e 0022     		movs	r2, #0
 1690 0110 1A74     		strb	r2, [r3, #16]
1028:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     
1029:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     return HAL_ERROR;
 1691              		.loc 1 1029 0
 1692 0112 0123     		movs	r3, #1
 1693 0114 1FE0     		b	.L84
 1694              	.L83:
1030:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   }
1031:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   else
1032:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {
1033:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     /* Clear flag alarm A */
1034:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     __HAL_RTC_ALARM_CLEAR_FLAG(hrtc, RTC_FLAG_ALRAF);
 1695              		.loc 1 1034 0
 1696 0116 FB68     		ldr	r3, [r7, #12]
 1697 0118 1B68     		ldr	r3, [r3]
 1698 011a 6FF00202 		mvn	r2, #2
 1699 011e 5A60     		str	r2, [r3, #4]
1035:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     
1036:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     /* Configure the Alarm interrupt */
1037:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     __HAL_RTC_ALARM_ENABLE_IT(hrtc,RTC_IT_ALRA);
 1700              		.loc 1 1037 0
 1701 0120 FB68     		ldr	r3, [r7, #12]
 1702 0122 1B68     		ldr	r3, [r3]
ARM GAS  /tmp/cccafUze.s 			page 49


 1703 0124 FA68     		ldr	r2, [r7, #12]
 1704 0126 1268     		ldr	r2, [r2]
 1705 0128 1268     		ldr	r2, [r2]
 1706 012a 42F00202 		orr	r2, r2, #2
 1707 012e 1A60     		str	r2, [r3]
1038:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     
1039:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     /* RTC Alarm Interrupt Configuration: EXTI configuration */
1040:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     __HAL_RTC_ALARM_EXTI_ENABLE_IT();
 1708              		.loc 1 1040 0
 1709 0130 0B4A     		ldr	r2, .L85
 1710 0132 0B4B     		ldr	r3, .L85
 1711 0134 1B68     		ldr	r3, [r3]
 1712 0136 43F40033 		orr	r3, r3, #131072
 1713 013a 1360     		str	r3, [r2]
1041:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     
1042:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     __HAL_RTC_ALARM_EXTI_ENABLE_RISING_EDGE();
 1714              		.loc 1 1042 0
 1715 013c 084A     		ldr	r2, .L85
 1716 013e 084B     		ldr	r3, .L85
 1717 0140 9B68     		ldr	r3, [r3, #8]
 1718 0142 43F40033 		orr	r3, r3, #131072
 1719 0146 9360     		str	r3, [r2, #8]
1043:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
1044:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     hrtc->State = HAL_RTC_STATE_READY;
 1720              		.loc 1 1044 0
 1721 0148 FB68     		ldr	r3, [r7, #12]
 1722 014a 0122     		movs	r2, #1
 1723 014c 5A74     		strb	r2, [r3, #17]
1045:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   
1046:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****    __HAL_UNLOCK(hrtc); 
 1724              		.loc 1 1046 0
 1725 014e FB68     		ldr	r3, [r7, #12]
 1726 0150 0022     		movs	r2, #0
 1727 0152 1A74     		strb	r2, [r3, #16]
1047:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****      
1048:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****    return HAL_OK;
 1728              		.loc 1 1048 0
 1729 0154 0023     		movs	r3, #0
 1730              	.L84:
1049:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   }
1050:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** }
 1731              		.loc 1 1050 0 discriminator 1
 1732 0156 1846     		mov	r0, r3
 1733 0158 2437     		adds	r7, r7, #36
 1734              	.LCFI50:
 1735              		.cfi_def_cfa_offset 12
 1736 015a BD46     		mov	sp, r7
 1737              	.LCFI51:
 1738              		.cfi_def_cfa_register 13
 1739              		@ sp needed
 1740 015c 90BD     		pop	{r4, r7, pc}
 1741              	.L86:
 1742 015e 00BF     		.align	2
 1743              	.L85:
 1744 0160 00040140 		.word	1073808384
 1745              		.cfi_endproc
 1746              	.LFE72:
ARM GAS  /tmp/cccafUze.s 			page 50


 1748              		.section	.text.HAL_RTC_GetAlarm,"ax",%progbits
 1749              		.align	2
 1750              		.global	HAL_RTC_GetAlarm
 1751              		.thumb
 1752              		.thumb_func
 1754              	HAL_RTC_GetAlarm:
 1755              	.LFB73:
1051:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
1052:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** /**
1053:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @brief  Gets the RTC Alarm value and masks.
1054:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @param  hrtc   pointer to a RTC_HandleTypeDef structure that contains
1055:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   *                the configuration information for RTC.
1056:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @param  sAlarm: Pointer to Date structure
1057:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @param  Alarm: Specifies the Alarm.
1058:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   *          This parameter can be one of the following values:
1059:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   *             @arg RTC_ALARM_A: Alarm
1060:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @param  Format: Specifies the format of the entered parameters.
1061:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   *          This parameter can be one of the following values:
1062:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   *             @arg RTC_FORMAT_BIN: Binary data format 
1063:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   *             @arg RTC_FORMAT_BCD: BCD data format
1064:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @retval HAL status
1065:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   */
1066:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** HAL_StatusTypeDef HAL_RTC_GetAlarm(RTC_HandleTypeDef *hrtc, RTC_AlarmTypeDef *sAlarm, uint32_t Alar
1067:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** {
 1756              		.loc 1 1067 0
 1757              		.cfi_startproc
 1758              		@ args = 0, pretend = 0, frame = 24
 1759              		@ frame_needed = 1, uses_anonymous_args = 0
 1760 0000 80B5     		push	{r7, lr}
 1761              	.LCFI52:
 1762              		.cfi_def_cfa_offset 8
 1763              		.cfi_offset 7, -8
 1764              		.cfi_offset 14, -4
 1765 0002 86B0     		sub	sp, sp, #24
 1766              	.LCFI53:
 1767              		.cfi_def_cfa_offset 32
 1768 0004 00AF     		add	r7, sp, #0
 1769              	.LCFI54:
 1770              		.cfi_def_cfa_register 7
 1771 0006 F860     		str	r0, [r7, #12]
 1772 0008 B960     		str	r1, [r7, #8]
 1773 000a 7A60     		str	r2, [r7, #4]
 1774 000c 3B60     		str	r3, [r7]
1068:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   uint32_t counter_alarm = 0;
 1775              		.loc 1 1068 0
 1776 000e 0023     		movs	r3, #0
 1777 0010 7B61     		str	r3, [r7, #20]
1069:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
1070:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   /* Check input parameters */
1071:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   if((hrtc == NULL) || (sAlarm == NULL))
 1778              		.loc 1 1071 0
 1779 0012 FB68     		ldr	r3, [r7, #12]
 1780 0014 002B     		cmp	r3, #0
 1781 0016 02D0     		beq	.L88
 1782              		.loc 1 1071 0 is_stmt 0 discriminator 1
 1783 0018 BB68     		ldr	r3, [r7, #8]
 1784 001a 002B     		cmp	r3, #0
ARM GAS  /tmp/cccafUze.s 			page 51


 1785 001c 01D1     		bne	.L89
 1786              	.L88:
1072:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {
1073:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****      return HAL_ERROR;
 1787              		.loc 1 1073 0 is_stmt 1
 1788 001e 0123     		movs	r3, #1
 1789 0020 5AE0     		b	.L90
 1790              	.L89:
1074:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   }
1075:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   
1076:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   /* Check the parameters */
1077:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   assert_param(IS_RTC_FORMAT(Format));
1078:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   assert_param(IS_RTC_ALARM(Alarm));
1079:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   
1080:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   /* Read Alarm counter in RTC registers */
1081:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   counter_alarm = RTC_ReadAlarmCounter(hrtc);
 1791              		.loc 1 1081 0
 1792 0022 F868     		ldr	r0, [r7, #12]
 1793 0024 FFF7FEFF 		bl	RTC_ReadAlarmCounter
 1794 0028 7861     		str	r0, [r7, #20]
1082:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
1083:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   /* Fill the structure with the read parameters */
1084:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   /* Set hours in a day range (between 0 to 24)*/
1085:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   sAlarm->AlarmTime.Hours   = (uint32_t)((counter_alarm / 3600) % 24);
 1795              		.loc 1 1085 0
 1796 002a 7B69     		ldr	r3, [r7, #20]
 1797 002c 2C4A     		ldr	r2, .L92
 1798 002e A2FB0323 		umull	r2, r3, r2, r3
 1799 0032 D90A     		lsrs	r1, r3, #11
 1800 0034 2B4B     		ldr	r3, .L92+4
 1801 0036 A3FB0123 		umull	r2, r3, r3, r1
 1802 003a 1A09     		lsrs	r2, r3, #4
 1803 003c 1346     		mov	r3, r2
 1804 003e 5B00     		lsls	r3, r3, #1
 1805 0040 1344     		add	r3, r3, r2
 1806 0042 DB00     		lsls	r3, r3, #3
 1807 0044 CA1A     		subs	r2, r1, r3
 1808 0046 D2B2     		uxtb	r2, r2
 1809 0048 BB68     		ldr	r3, [r7, #8]
 1810 004a 1A70     		strb	r2, [r3]
1086:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   sAlarm->AlarmTime.Minutes = (uint32_t)((counter_alarm % 3600) / 60);
 1811              		.loc 1 1086 0
 1812 004c 7A69     		ldr	r2, [r7, #20]
 1813 004e 244B     		ldr	r3, .L92
 1814 0050 A3FB0213 		umull	r1, r3, r3, r2
 1815 0054 DB0A     		lsrs	r3, r3, #11
 1816 0056 4FF46161 		mov	r1, #3600
 1817 005a 01FB03F3 		mul	r3, r1, r3
 1818 005e D31A     		subs	r3, r2, r3
 1819 0060 214A     		ldr	r2, .L92+8
 1820 0062 A2FB0323 		umull	r2, r3, r2, r3
 1821 0066 5B09     		lsrs	r3, r3, #5
 1822 0068 DAB2     		uxtb	r2, r3
 1823 006a BB68     		ldr	r3, [r7, #8]
 1824 006c 5A70     		strb	r2, [r3, #1]
1087:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   sAlarm->AlarmTime.Seconds = (uint32_t)((counter_alarm % 3600) % 60);
 1825              		.loc 1 1087 0
ARM GAS  /tmp/cccafUze.s 			page 52


 1826 006e 7B69     		ldr	r3, [r7, #20]
 1827 0070 1B4A     		ldr	r2, .L92
 1828 0072 A2FB0312 		umull	r1, r2, r2, r3
 1829 0076 D20A     		lsrs	r2, r2, #11
 1830 0078 4FF46161 		mov	r1, #3600
 1831 007c 01FB02F2 		mul	r2, r1, r2
 1832 0080 9A1A     		subs	r2, r3, r2
 1833 0082 194B     		ldr	r3, .L92+8
 1834 0084 A3FB0213 		umull	r1, r3, r3, r2
 1835 0088 5909     		lsrs	r1, r3, #5
 1836 008a 0B46     		mov	r3, r1
 1837 008c 1B01     		lsls	r3, r3, #4
 1838 008e 5B1A     		subs	r3, r3, r1
 1839 0090 9B00     		lsls	r3, r3, #2
 1840 0092 D11A     		subs	r1, r2, r3
 1841 0094 CAB2     		uxtb	r2, r1
 1842 0096 BB68     		ldr	r3, [r7, #8]
 1843 0098 9A70     		strb	r2, [r3, #2]
1088:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   
1089:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   if(Format != RTC_FORMAT_BIN)
 1844              		.loc 1 1089 0
 1845 009a 3B68     		ldr	r3, [r7]
 1846 009c 002B     		cmp	r3, #0
 1847 009e 1AD0     		beq	.L91
1090:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {
1091:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     sAlarm->AlarmTime.Hours   = RTC_ByteToBcd2(sAlarm->AlarmTime.Hours);
 1848              		.loc 1 1091 0
 1849 00a0 BB68     		ldr	r3, [r7, #8]
 1850 00a2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1851 00a4 1846     		mov	r0, r3
 1852 00a6 FFF7FEFF 		bl	RTC_ByteToBcd2
 1853 00aa 0346     		mov	r3, r0
 1854 00ac 1A46     		mov	r2, r3
 1855 00ae BB68     		ldr	r3, [r7, #8]
 1856 00b0 1A70     		strb	r2, [r3]
1092:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     sAlarm->AlarmTime.Minutes = RTC_ByteToBcd2(sAlarm->AlarmTime.Minutes);
 1857              		.loc 1 1092 0
 1858 00b2 BB68     		ldr	r3, [r7, #8]
 1859 00b4 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 1860 00b6 1846     		mov	r0, r3
 1861 00b8 FFF7FEFF 		bl	RTC_ByteToBcd2
 1862 00bc 0346     		mov	r3, r0
 1863 00be 1A46     		mov	r2, r3
 1864 00c0 BB68     		ldr	r3, [r7, #8]
 1865 00c2 5A70     		strb	r2, [r3, #1]
1093:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     sAlarm->AlarmTime.Seconds = RTC_ByteToBcd2(sAlarm->AlarmTime.Seconds);
 1866              		.loc 1 1093 0
 1867 00c4 BB68     		ldr	r3, [r7, #8]
 1868 00c6 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 1869 00c8 1846     		mov	r0, r3
 1870 00ca FFF7FEFF 		bl	RTC_ByteToBcd2
 1871 00ce 0346     		mov	r3, r0
 1872 00d0 1A46     		mov	r2, r3
 1873 00d2 BB68     		ldr	r3, [r7, #8]
 1874 00d4 9A70     		strb	r2, [r3, #2]
 1875              	.L91:
1094:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   }  
ARM GAS  /tmp/cccafUze.s 			page 53


1095:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   
1096:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   return HAL_OK;
 1876              		.loc 1 1096 0
 1877 00d6 0023     		movs	r3, #0
 1878              	.L90:
1097:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** }
 1879              		.loc 1 1097 0
 1880 00d8 1846     		mov	r0, r3
 1881 00da 1837     		adds	r7, r7, #24
 1882              	.LCFI55:
 1883              		.cfi_def_cfa_offset 8
 1884 00dc BD46     		mov	sp, r7
 1885              	.LCFI56:
 1886              		.cfi_def_cfa_register 13
 1887              		@ sp needed
 1888 00de 80BD     		pop	{r7, pc}
 1889              	.L93:
 1890              		.align	2
 1891              	.L92:
 1892 00e0 C5B3A291 		.word	-1851608123
 1893 00e4 ABAAAAAA 		.word	-1431655765
 1894 00e8 89888888 		.word	-2004318071
 1895              		.cfi_endproc
 1896              	.LFE73:
 1898              		.section	.text.HAL_RTC_DeactivateAlarm,"ax",%progbits
 1899              		.align	2
 1900              		.global	HAL_RTC_DeactivateAlarm
 1901              		.thumb
 1902              		.thumb_func
 1904              	HAL_RTC_DeactivateAlarm:
 1905              	.LFB74:
1098:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
1099:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** /**
1100:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @brief  Deactive the specified RTC Alarm 
1101:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @param  hrtc   pointer to a RTC_HandleTypeDef structure that contains
1102:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   *                the configuration information for RTC.
1103:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @param  Alarm: Specifies the Alarm.
1104:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   *          This parameter can be one of the following values:
1105:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   *            @arg RTC_ALARM_A:  AlarmA
1106:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @retval HAL status
1107:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   */
1108:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** HAL_StatusTypeDef HAL_RTC_DeactivateAlarm(RTC_HandleTypeDef *hrtc, uint32_t Alarm)
1109:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** {
 1906              		.loc 1 1109 0
 1907              		.cfi_startproc
 1908              		@ args = 0, pretend = 0, frame = 8
 1909              		@ frame_needed = 1, uses_anonymous_args = 0
 1910 0000 80B5     		push	{r7, lr}
 1911              	.LCFI57:
 1912              		.cfi_def_cfa_offset 8
 1913              		.cfi_offset 7, -8
 1914              		.cfi_offset 14, -4
 1915 0002 82B0     		sub	sp, sp, #8
 1916              	.LCFI58:
 1917              		.cfi_def_cfa_offset 16
 1918 0004 00AF     		add	r7, sp, #0
 1919              	.LCFI59:
ARM GAS  /tmp/cccafUze.s 			page 54


 1920              		.cfi_def_cfa_register 7
 1921 0006 7860     		str	r0, [r7, #4]
 1922 0008 3960     		str	r1, [r7]
1110:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   /* Check the parameters */
1111:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   assert_param(IS_RTC_ALARM(Alarm));
1112:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   
1113:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   /* Check input parameters */
1114:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   if(hrtc == NULL)
 1923              		.loc 1 1114 0
 1924 000a 7B68     		ldr	r3, [r7, #4]
 1925 000c 002B     		cmp	r3, #0
 1926 000e 01D1     		bne	.L95
1115:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {
1116:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****      return HAL_ERROR;
 1927              		.loc 1 1116 0
 1928 0010 0123     		movs	r3, #1
 1929 0012 4BE0     		b	.L96
 1930              	.L95:
1117:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   }
1118:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   
1119:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   /* Process Locked */ 
1120:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   __HAL_LOCK(hrtc);
 1931              		.loc 1 1120 0
 1932 0014 7B68     		ldr	r3, [r7, #4]
 1933 0016 1B7C     		ldrb	r3, [r3, #16]	@ zero_extendqisi2
 1934 0018 012B     		cmp	r3, #1
 1935 001a 01D1     		bne	.L97
 1936              		.loc 1 1120 0 is_stmt 0 discriminator 1
 1937 001c 0223     		movs	r3, #2
 1938 001e 45E0     		b	.L96
 1939              	.L97:
 1940              		.loc 1 1120 0 discriminator 2
 1941 0020 7B68     		ldr	r3, [r7, #4]
 1942 0022 0122     		movs	r2, #1
 1943 0024 1A74     		strb	r2, [r3, #16]
1121:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   
1122:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   hrtc->State = HAL_RTC_STATE_BUSY;
 1944              		.loc 1 1122 0 is_stmt 1 discriminator 2
 1945 0026 7B68     		ldr	r3, [r7, #4]
 1946 0028 0222     		movs	r2, #2
 1947 002a 5A74     		strb	r2, [r3, #17]
1123:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   
1124:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   /* In case of interrupt mode is used, the interrupt source must disabled */ 
1125:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   __HAL_RTC_ALARM_DISABLE_IT(hrtc, RTC_IT_ALRA);
 1948              		.loc 1 1125 0 discriminator 2
 1949 002c 7B68     		ldr	r3, [r7, #4]
 1950 002e 1B68     		ldr	r3, [r3]
 1951 0030 7A68     		ldr	r2, [r7, #4]
 1952 0032 1268     		ldr	r2, [r2]
 1953 0034 1268     		ldr	r2, [r2]
 1954 0036 22F00202 		bic	r2, r2, #2
 1955 003a 1A60     		str	r2, [r3]
1126:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   
1127:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   /* Set Initialization mode */
1128:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   if(RTC_EnterInitMode(hrtc) != HAL_OK)
 1956              		.loc 1 1128 0 discriminator 2
 1957 003c 7868     		ldr	r0, [r7, #4]
ARM GAS  /tmp/cccafUze.s 			page 55


 1958 003e FFF7FEFF 		bl	RTC_EnterInitMode
 1959 0042 0346     		mov	r3, r0
 1960 0044 002B     		cmp	r3, #0
 1961 0046 07D0     		beq	.L98
1129:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {
1130:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     /* Set RTC state */
1131:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     hrtc->State = HAL_RTC_STATE_ERROR;
 1962              		.loc 1 1131 0
 1963 0048 7B68     		ldr	r3, [r7, #4]
 1964 004a 0422     		movs	r2, #4
 1965 004c 5A74     		strb	r2, [r3, #17]
1132:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     
1133:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     /* Process Unlocked */ 
1134:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     __HAL_UNLOCK(hrtc);
 1966              		.loc 1 1134 0
 1967 004e 7B68     		ldr	r3, [r7, #4]
 1968 0050 0022     		movs	r2, #0
 1969 0052 1A74     		strb	r2, [r3, #16]
1135:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     
1136:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     return HAL_ERROR;
 1970              		.loc 1 1136 0
 1971 0054 0123     		movs	r3, #1
 1972 0056 29E0     		b	.L96
 1973              	.L98:
1137:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   } 
1138:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   else
1139:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {
1140:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     /* Clear flag alarm A */
1141:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     __HAL_RTC_ALARM_CLEAR_FLAG(hrtc, RTC_FLAG_ALRAF);
 1974              		.loc 1 1141 0
 1975 0058 7B68     		ldr	r3, [r7, #4]
 1976 005a 1B68     		ldr	r3, [r3]
 1977 005c 6FF00202 		mvn	r2, #2
 1978 0060 5A60     		str	r2, [r3, #4]
1142:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     
1143:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     /* Set to default values ALRH & ALRL registers */
1144:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     WRITE_REG(hrtc->Instance->ALRH, RTC_ALARM_RESETVALUE_REGISTER);
 1979              		.loc 1 1144 0
 1980 0062 7B68     		ldr	r3, [r7, #4]
 1981 0064 1B68     		ldr	r3, [r3]
 1982 0066 4FF6FF72 		movw	r2, #65535
 1983 006a 1A62     		str	r2, [r3, #32]
1145:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     WRITE_REG(hrtc->Instance->ALRL, RTC_ALARM_RESETVALUE_REGISTER);
 1984              		.loc 1 1145 0
 1985 006c 7B68     		ldr	r3, [r7, #4]
 1986 006e 1B68     		ldr	r3, [r3]
 1987 0070 4FF6FF72 		movw	r2, #65535
 1988 0074 5A62     		str	r2, [r3, #36]
1146:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
1147:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     /* RTC Alarm Interrupt Configuration: Disable EXTI configuration */
1148:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     __HAL_RTC_ALARM_EXTI_DISABLE_IT();
 1989              		.loc 1 1148 0
 1990 0076 0F4A     		ldr	r2, .L100
 1991 0078 0E4B     		ldr	r3, .L100
 1992 007a 1B68     		ldr	r3, [r3]
 1993 007c 23F40033 		bic	r3, r3, #131072
 1994 0080 1360     		str	r3, [r2]
ARM GAS  /tmp/cccafUze.s 			page 56


1149:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     
1150:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     /* Wait for synchro */
1151:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     if(RTC_ExitInitMode(hrtc) != HAL_OK)
 1995              		.loc 1 1151 0
 1996 0082 7868     		ldr	r0, [r7, #4]
 1997 0084 FFF7FEFF 		bl	RTC_ExitInitMode
 1998 0088 0346     		mov	r3, r0
 1999 008a 002B     		cmp	r3, #0
 2000 008c 07D0     		beq	.L99
1152:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     {       
1153:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       hrtc->State = HAL_RTC_STATE_ERROR;
 2001              		.loc 1 1153 0
 2002 008e 7B68     		ldr	r3, [r7, #4]
 2003 0090 0422     		movs	r2, #4
 2004 0092 5A74     		strb	r2, [r3, #17]
1154:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       
1155:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       /* Process Unlocked */ 
1156:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       __HAL_UNLOCK(hrtc);
 2005              		.loc 1 1156 0
 2006 0094 7B68     		ldr	r3, [r7, #4]
 2007 0096 0022     		movs	r2, #0
 2008 0098 1A74     		strb	r2, [r3, #16]
1157:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       
1158:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       return HAL_ERROR;
 2009              		.loc 1 1158 0
 2010 009a 0123     		movs	r3, #1
 2011 009c 06E0     		b	.L96
 2012              	.L99:
1159:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     }
1160:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   }
1161:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   hrtc->State = HAL_RTC_STATE_READY; 
 2013              		.loc 1 1161 0
 2014 009e 7B68     		ldr	r3, [r7, #4]
 2015 00a0 0122     		movs	r2, #1
 2016 00a2 5A74     		strb	r2, [r3, #17]
1162:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   
1163:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   /* Process Unlocked */ 
1164:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   __HAL_UNLOCK(hrtc);  
 2017              		.loc 1 1164 0
 2018 00a4 7B68     		ldr	r3, [r7, #4]
 2019 00a6 0022     		movs	r2, #0
 2020 00a8 1A74     		strb	r2, [r3, #16]
1165:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   
1166:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   return HAL_OK; 
 2021              		.loc 1 1166 0
 2022 00aa 0023     		movs	r3, #0
 2023              	.L96:
1167:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** }
 2024              		.loc 1 1167 0
 2025 00ac 1846     		mov	r0, r3
 2026 00ae 0837     		adds	r7, r7, #8
 2027              	.LCFI60:
 2028              		.cfi_def_cfa_offset 8
 2029 00b0 BD46     		mov	sp, r7
 2030              	.LCFI61:
 2031              		.cfi_def_cfa_register 13
 2032              		@ sp needed
ARM GAS  /tmp/cccafUze.s 			page 57


 2033 00b2 80BD     		pop	{r7, pc}
 2034              	.L101:
 2035              		.align	2
 2036              	.L100:
 2037 00b4 00040140 		.word	1073808384
 2038              		.cfi_endproc
 2039              	.LFE74:
 2041              		.section	.text.HAL_RTC_AlarmIRQHandler,"ax",%progbits
 2042              		.align	2
 2043              		.global	HAL_RTC_AlarmIRQHandler
 2044              		.thumb
 2045              		.thumb_func
 2047              	HAL_RTC_AlarmIRQHandler:
 2048              	.LFB75:
1168:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
1169:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** /**
1170:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @brief  This function handles Alarm interrupt request.
1171:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @param  hrtc   pointer to a RTC_HandleTypeDef structure that contains
1172:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   *                the configuration information for RTC.
1173:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @retval None
1174:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   */
1175:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** void HAL_RTC_AlarmIRQHandler(RTC_HandleTypeDef* hrtc)
1176:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** {  
 2049              		.loc 1 1176 0
 2050              		.cfi_startproc
 2051              		@ args = 0, pretend = 0, frame = 8
 2052              		@ frame_needed = 1, uses_anonymous_args = 0
 2053 0000 80B5     		push	{r7, lr}
 2054              	.LCFI62:
 2055              		.cfi_def_cfa_offset 8
 2056              		.cfi_offset 7, -8
 2057              		.cfi_offset 14, -4
 2058 0002 82B0     		sub	sp, sp, #8
 2059              	.LCFI63:
 2060              		.cfi_def_cfa_offset 16
 2061 0004 00AF     		add	r7, sp, #0
 2062              	.LCFI64:
 2063              		.cfi_def_cfa_register 7
 2064 0006 7860     		str	r0, [r7, #4]
1177:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   if(__HAL_RTC_ALARM_GET_IT_SOURCE(hrtc, RTC_IT_ALRA))
 2065              		.loc 1 1177 0
 2066 0008 7B68     		ldr	r3, [r7, #4]
 2067 000a 1B68     		ldr	r3, [r3]
 2068 000c 1B68     		ldr	r3, [r3]
 2069 000e 03F00203 		and	r3, r3, #2
 2070 0012 002B     		cmp	r3, #0
 2071 0014 0ED0     		beq	.L103
1178:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {
1179:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     /* Get the status of the Interrupt */
1180:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     if(__HAL_RTC_ALARM_GET_FLAG(hrtc, RTC_FLAG_ALRAF) != (uint32_t)RESET)
 2072              		.loc 1 1180 0
 2073 0016 7B68     		ldr	r3, [r7, #4]
 2074 0018 1B68     		ldr	r3, [r3]
 2075 001a 5B68     		ldr	r3, [r3, #4]
 2076 001c 03F00203 		and	r3, r3, #2
 2077 0020 002B     		cmp	r3, #0
 2078 0022 07D0     		beq	.L103
ARM GAS  /tmp/cccafUze.s 			page 58


1181:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     {
1182:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       /* AlarmA callback */ 
1183:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       HAL_RTC_AlarmAEventCallback(hrtc);
 2079              		.loc 1 1183 0
 2080 0024 7868     		ldr	r0, [r7, #4]
 2081 0026 FFF7FEFF 		bl	HAL_RTC_AlarmAEventCallback
1184:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       
1185:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       /* Clear the Alarm interrupt pending bit */
1186:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       __HAL_RTC_ALARM_CLEAR_FLAG(hrtc,RTC_FLAG_ALRAF);
 2082              		.loc 1 1186 0
 2083 002a 7B68     		ldr	r3, [r7, #4]
 2084 002c 1B68     		ldr	r3, [r3]
 2085 002e 6FF00202 		mvn	r2, #2
 2086 0032 5A60     		str	r2, [r3, #4]
 2087              	.L103:
1187:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     }
1188:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   }
1189:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   
1190:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   /* Clear the EXTI's line Flag for RTC Alarm */
1191:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   __HAL_RTC_ALARM_EXTI_CLEAR_FLAG();
 2088              		.loc 1 1191 0
 2089 0034 044B     		ldr	r3, .L104
 2090 0036 4FF40032 		mov	r2, #131072
 2091 003a 5A61     		str	r2, [r3, #20]
1192:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   
1193:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   /* Change RTC state */
1194:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   hrtc->State = HAL_RTC_STATE_READY; 
 2092              		.loc 1 1194 0
 2093 003c 7B68     		ldr	r3, [r7, #4]
 2094 003e 0122     		movs	r2, #1
 2095 0040 5A74     		strb	r2, [r3, #17]
1195:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** }
 2096              		.loc 1 1195 0
 2097 0042 0837     		adds	r7, r7, #8
 2098              	.LCFI65:
 2099              		.cfi_def_cfa_offset 8
 2100 0044 BD46     		mov	sp, r7
 2101              	.LCFI66:
 2102              		.cfi_def_cfa_register 13
 2103              		@ sp needed
 2104 0046 80BD     		pop	{r7, pc}
 2105              	.L105:
 2106              		.align	2
 2107              	.L104:
 2108 0048 00040140 		.word	1073808384
 2109              		.cfi_endproc
 2110              	.LFE75:
 2112              		.section	.text.HAL_RTC_AlarmAEventCallback,"ax",%progbits
 2113              		.align	2
 2114              		.weak	HAL_RTC_AlarmAEventCallback
 2115              		.thumb
 2116              		.thumb_func
 2118              	HAL_RTC_AlarmAEventCallback:
 2119              	.LFB76:
1196:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
1197:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** /**
1198:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @brief  Alarm A callback.
ARM GAS  /tmp/cccafUze.s 			page 59


1199:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @param  hrtc   pointer to a RTC_HandleTypeDef structure that contains
1200:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   *                the configuration information for RTC.
1201:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @retval None
1202:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   */
1203:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** __weak void HAL_RTC_AlarmAEventCallback(RTC_HandleTypeDef *hrtc)
1204:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** {
 2120              		.loc 1 1204 0
 2121              		.cfi_startproc
 2122              		@ args = 0, pretend = 0, frame = 8
 2123              		@ frame_needed = 1, uses_anonymous_args = 0
 2124              		@ link register save eliminated.
 2125 0000 80B4     		push	{r7}
 2126              	.LCFI67:
 2127              		.cfi_def_cfa_offset 4
 2128              		.cfi_offset 7, -4
 2129 0002 83B0     		sub	sp, sp, #12
 2130              	.LCFI68:
 2131              		.cfi_def_cfa_offset 16
 2132 0004 00AF     		add	r7, sp, #0
 2133              	.LCFI69:
 2134              		.cfi_def_cfa_register 7
 2135 0006 7860     		str	r0, [r7, #4]
1205:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   /* Prevent unused argument(s) compilation warning */
1206:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   UNUSED(hrtc);
1207:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
1208:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****             the HAL_RTC_AlarmAEventCallback could be implemented in the user file
1209:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****    */
1210:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** }
 2136              		.loc 1 1210 0
 2137 0008 0C37     		adds	r7, r7, #12
 2138              	.LCFI70:
 2139              		.cfi_def_cfa_offset 4
 2140 000a BD46     		mov	sp, r7
 2141              	.LCFI71:
 2142              		.cfi_def_cfa_register 13
 2143              		@ sp needed
 2144 000c 5DF8047B 		ldr	r7, [sp], #4
 2145              	.LCFI72:
 2146              		.cfi_restore 7
 2147              		.cfi_def_cfa_offset 0
 2148 0010 7047     		bx	lr
 2149              		.cfi_endproc
 2150              	.LFE76:
 2152 0012 00BF     		.section	.text.HAL_RTC_PollForAlarmAEvent,"ax",%progbits
 2153              		.align	2
 2154              		.global	HAL_RTC_PollForAlarmAEvent
 2155              		.thumb
 2156              		.thumb_func
 2158              	HAL_RTC_PollForAlarmAEvent:
 2159              	.LFB77:
1211:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
1212:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** /**
1213:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @brief  This function handles AlarmA Polling request.
1214:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @param  hrtc   pointer to a RTC_HandleTypeDef structure that contains
1215:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   *                the configuration information for RTC.
1216:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @param  Timeout: Timeout duration
1217:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @retval HAL status
ARM GAS  /tmp/cccafUze.s 			page 60


1218:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   */
1219:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** HAL_StatusTypeDef HAL_RTC_PollForAlarmAEvent(RTC_HandleTypeDef *hrtc, uint32_t Timeout)
1220:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** {  
 2160              		.loc 1 1220 0
 2161              		.cfi_startproc
 2162              		@ args = 0, pretend = 0, frame = 16
 2163              		@ frame_needed = 1, uses_anonymous_args = 0
 2164 0000 80B5     		push	{r7, lr}
 2165              	.LCFI73:
 2166              		.cfi_def_cfa_offset 8
 2167              		.cfi_offset 7, -8
 2168              		.cfi_offset 14, -4
 2169 0002 84B0     		sub	sp, sp, #16
 2170              	.LCFI74:
 2171              		.cfi_def_cfa_offset 24
 2172 0004 00AF     		add	r7, sp, #0
 2173              	.LCFI75:
 2174              		.cfi_def_cfa_register 7
 2175 0006 7860     		str	r0, [r7, #4]
 2176 0008 3960     		str	r1, [r7]
1221:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   uint32_t tickstart = HAL_GetTick();   
 2177              		.loc 1 1221 0
 2178 000a FFF7FEFF 		bl	HAL_GetTick
 2179 000e F860     		str	r0, [r7, #12]
1222:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   
1223:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   /* Check input parameters */
1224:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   if(hrtc == NULL)
 2180              		.loc 1 1224 0
 2181 0010 7B68     		ldr	r3, [r7, #4]
 2182 0012 002B     		cmp	r3, #0
 2183 0014 01D1     		bne	.L108
1225:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {
1226:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****      return HAL_ERROR;
 2184              		.loc 1 1226 0
 2185 0016 0123     		movs	r3, #1
 2186 0018 24E0     		b	.L109
 2187              	.L108:
1227:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   }
1228:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   
1229:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   while(__HAL_RTC_ALARM_GET_FLAG(hrtc, RTC_FLAG_ALRAF) == RESET)
 2188              		.loc 1 1229 0
 2189 001a 13E0     		b	.L110
 2190              	.L112:
1230:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {
1231:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     if(Timeout != HAL_MAX_DELAY)
 2191              		.loc 1 1231 0
 2192 001c 3B68     		ldr	r3, [r7]
 2193 001e B3F1FF3F 		cmp	r3, #-1
 2194 0022 0FD0     		beq	.L110
1232:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     {
1233:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       if((Timeout == 0)||((HAL_GetTick() - tickstart ) > Timeout))
 2195              		.loc 1 1233 0
 2196 0024 3B68     		ldr	r3, [r7]
 2197 0026 002B     		cmp	r3, #0
 2198 0028 07D0     		beq	.L111
 2199              		.loc 1 1233 0 is_stmt 0 discriminator 1
 2200 002a FFF7FEFF 		bl	HAL_GetTick
ARM GAS  /tmp/cccafUze.s 			page 61


 2201 002e 0246     		mov	r2, r0
 2202 0030 FB68     		ldr	r3, [r7, #12]
 2203 0032 D21A     		subs	r2, r2, r3
 2204 0034 3B68     		ldr	r3, [r7]
 2205 0036 9A42     		cmp	r2, r3
 2206 0038 04D9     		bls	.L110
 2207              	.L111:
1234:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       {
1235:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****         hrtc->State = HAL_RTC_STATE_TIMEOUT;
 2208              		.loc 1 1235 0 is_stmt 1
 2209 003a 7B68     		ldr	r3, [r7, #4]
 2210 003c 0322     		movs	r2, #3
 2211 003e 5A74     		strb	r2, [r3, #17]
1236:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****         return HAL_TIMEOUT;
 2212              		.loc 1 1236 0
 2213 0040 0323     		movs	r3, #3
 2214 0042 0FE0     		b	.L109
 2215              	.L110:
1229:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {
 2216              		.loc 1 1229 0
 2217 0044 7B68     		ldr	r3, [r7, #4]
 2218 0046 1B68     		ldr	r3, [r3]
 2219 0048 5B68     		ldr	r3, [r3, #4]
 2220 004a 03F00203 		and	r3, r3, #2
 2221 004e 002B     		cmp	r3, #0
 2222 0050 E4D0     		beq	.L112
1237:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       }
1238:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     }
1239:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   }
1240:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   
1241:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   /* Clear the Alarm interrupt pending bit */
1242:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   __HAL_RTC_ALARM_CLEAR_FLAG(hrtc, RTC_FLAG_ALRAF);
 2223              		.loc 1 1242 0
 2224 0052 7B68     		ldr	r3, [r7, #4]
 2225 0054 1B68     		ldr	r3, [r3]
 2226 0056 6FF00202 		mvn	r2, #2
 2227 005a 5A60     		str	r2, [r3, #4]
1243:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   
1244:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   /* Change RTC state */
1245:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   hrtc->State = HAL_RTC_STATE_READY; 
 2228              		.loc 1 1245 0
 2229 005c 7B68     		ldr	r3, [r7, #4]
 2230 005e 0122     		movs	r2, #1
 2231 0060 5A74     		strb	r2, [r3, #17]
1246:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   
1247:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   return HAL_OK;  
 2232              		.loc 1 1247 0
 2233 0062 0023     		movs	r3, #0
 2234              	.L109:
1248:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** }
 2235              		.loc 1 1248 0
 2236 0064 1846     		mov	r0, r3
 2237 0066 1037     		adds	r7, r7, #16
 2238              	.LCFI76:
 2239              		.cfi_def_cfa_offset 8
 2240 0068 BD46     		mov	sp, r7
 2241              	.LCFI77:
ARM GAS  /tmp/cccafUze.s 			page 62


 2242              		.cfi_def_cfa_register 13
 2243              		@ sp needed
 2244 006a 80BD     		pop	{r7, pc}
 2245              		.cfi_endproc
 2246              	.LFE77:
 2248              		.section	.text.HAL_RTC_GetState,"ax",%progbits
 2249              		.align	2
 2250              		.global	HAL_RTC_GetState
 2251              		.thumb
 2252              		.thumb_func
 2254              	HAL_RTC_GetState:
 2255              	.LFB78:
1249:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
1250:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** /**
1251:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @}
1252:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   */
1253:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
1254:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** /** @defgroup RTC_Exported_Functions_Group4 Peripheral State functions 
1255:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****  *  @brief   Peripheral State functions 
1256:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****  *
1257:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** @verbatim   
1258:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****  ===============================================================================
1259:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****                      ##### Peripheral State functions #####
1260:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****  ===============================================================================  
1261:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     [..]
1262:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     This subsection provides functions allowing to
1263:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       (+) Get RTC state
1264:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
1265:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** @endverbatim
1266:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @{
1267:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   */
1268:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** /**
1269:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @brief  Returns the RTC state.
1270:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @param  hrtc   pointer to a RTC_HandleTypeDef structure that contains
1271:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   *                the configuration information for RTC.
1272:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @retval HAL state
1273:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   */
1274:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** HAL_RTCStateTypeDef HAL_RTC_GetState(RTC_HandleTypeDef* hrtc)
1275:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** {
 2256              		.loc 1 1275 0
 2257              		.cfi_startproc
 2258              		@ args = 0, pretend = 0, frame = 8
 2259              		@ frame_needed = 1, uses_anonymous_args = 0
 2260              		@ link register save eliminated.
 2261 0000 80B4     		push	{r7}
 2262              	.LCFI78:
 2263              		.cfi_def_cfa_offset 4
 2264              		.cfi_offset 7, -4
 2265 0002 83B0     		sub	sp, sp, #12
 2266              	.LCFI79:
 2267              		.cfi_def_cfa_offset 16
 2268 0004 00AF     		add	r7, sp, #0
 2269              	.LCFI80:
 2270              		.cfi_def_cfa_register 7
 2271 0006 7860     		str	r0, [r7, #4]
1276:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   return hrtc->State;
 2272              		.loc 1 1276 0
ARM GAS  /tmp/cccafUze.s 			page 63


 2273 0008 7B68     		ldr	r3, [r7, #4]
 2274 000a 5B7C     		ldrb	r3, [r3, #17]
 2275 000c DBB2     		uxtb	r3, r3
1277:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** }
 2276              		.loc 1 1277 0
 2277 000e 1846     		mov	r0, r3
 2278 0010 0C37     		adds	r7, r7, #12
 2279              	.LCFI81:
 2280              		.cfi_def_cfa_offset 4
 2281 0012 BD46     		mov	sp, r7
 2282              	.LCFI82:
 2283              		.cfi_def_cfa_register 13
 2284              		@ sp needed
 2285 0014 5DF8047B 		ldr	r7, [sp], #4
 2286              	.LCFI83:
 2287              		.cfi_restore 7
 2288              		.cfi_def_cfa_offset 0
 2289 0018 7047     		bx	lr
 2290              		.cfi_endproc
 2291              	.LFE78:
 2293 001a 00BF     		.section	.text.HAL_RTC_WaitForSynchro,"ax",%progbits
 2294              		.align	2
 2295              		.global	HAL_RTC_WaitForSynchro
 2296              		.thumb
 2297              		.thumb_func
 2299              	HAL_RTC_WaitForSynchro:
 2300              	.LFB79:
1278:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
1279:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** /**
1280:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @}
1281:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   */
1282:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
1283:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** /** @defgroup RTC_Exported_Functions_Group5 Peripheral Control functions 
1284:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****  *  @brief   Peripheral Control functions 
1285:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****  *
1286:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** @verbatim   
1287:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****  ===============================================================================
1288:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****                      ##### Peripheral Control functions #####
1289:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****  ===============================================================================  
1290:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     [..]
1291:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     This subsection provides functions allowing to
1292:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       (+) Wait for RTC Time and Date Synchronization
1293:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
1294:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** @endverbatim
1295:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @{
1296:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   */
1297:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
1298:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** /**
1299:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @brief  Waits until the RTC registers (RTC_CNT, RTC_ALR and RTC_PRL)
1300:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   *   are synchronized with RTC APB clock.
1301:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @note   This function must be called before any read operation after an APB reset
1302:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   *   or an APB clock stop.
1303:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @param  hrtc   pointer to a RTC_HandleTypeDef structure that contains
1304:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   *                the configuration information for RTC.
1305:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @retval HAL status
1306:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   */
1307:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** HAL_StatusTypeDef HAL_RTC_WaitForSynchro(RTC_HandleTypeDef* hrtc)
ARM GAS  /tmp/cccafUze.s 			page 64


1308:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** {
 2301              		.loc 1 1308 0
 2302              		.cfi_startproc
 2303              		@ args = 0, pretend = 0, frame = 16
 2304              		@ frame_needed = 1, uses_anonymous_args = 0
 2305 0000 80B5     		push	{r7, lr}
 2306              	.LCFI84:
 2307              		.cfi_def_cfa_offset 8
 2308              		.cfi_offset 7, -8
 2309              		.cfi_offset 14, -4
 2310 0002 84B0     		sub	sp, sp, #16
 2311              	.LCFI85:
 2312              		.cfi_def_cfa_offset 24
 2313 0004 00AF     		add	r7, sp, #0
 2314              	.LCFI86:
 2315              		.cfi_def_cfa_register 7
 2316 0006 7860     		str	r0, [r7, #4]
1309:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   uint32_t tickstart = 0;
 2317              		.loc 1 1309 0
 2318 0008 0023     		movs	r3, #0
 2319 000a FB60     		str	r3, [r7, #12]
1310:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   
1311:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   /* Check input parameters */
1312:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   if(hrtc == NULL)
 2320              		.loc 1 1312 0
 2321 000c 7B68     		ldr	r3, [r7, #4]
 2322 000e 002B     		cmp	r3, #0
 2323 0010 01D1     		bne	.L116
1313:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {
1314:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****      return HAL_ERROR;
 2324              		.loc 1 1314 0
 2325 0012 0123     		movs	r3, #1
 2326 0014 1DE0     		b	.L117
 2327              	.L116:
1315:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   }
1316:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   
1317:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   /* Clear RSF flag */
1318:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   CLEAR_BIT(hrtc->Instance->CRL, RTC_FLAG_RSF);
 2328              		.loc 1 1318 0
 2329 0016 7B68     		ldr	r3, [r7, #4]
 2330 0018 1B68     		ldr	r3, [r3]
 2331 001a 7A68     		ldr	r2, [r7, #4]
 2332 001c 1268     		ldr	r2, [r2]
 2333 001e 5268     		ldr	r2, [r2, #4]
 2334 0020 22F00802 		bic	r2, r2, #8
 2335 0024 5A60     		str	r2, [r3, #4]
1319:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   
1320:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   tickstart = HAL_GetTick();
 2336              		.loc 1 1320 0
 2337 0026 FFF7FEFF 		bl	HAL_GetTick
 2338 002a F860     		str	r0, [r7, #12]
1321:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   
1322:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   /* Wait the registers to be synchronised */
1323:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   while((hrtc->Instance->CRL & RTC_FLAG_RSF) == (uint32_t)RESET)
 2339              		.loc 1 1323 0
 2340 002c 09E0     		b	.L118
 2341              	.L119:
ARM GAS  /tmp/cccafUze.s 			page 65


1324:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {
1325:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     if((HAL_GetTick() - tickstart ) >  RTC_TIMEOUT_VALUE)
 2342              		.loc 1 1325 0
 2343 002e FFF7FEFF 		bl	HAL_GetTick
 2344 0032 0246     		mov	r2, r0
 2345 0034 FB68     		ldr	r3, [r7, #12]
 2346 0036 D31A     		subs	r3, r2, r3
 2347 0038 B3F57A7F 		cmp	r3, #1000
 2348 003c 01D9     		bls	.L118
1326:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     {       
1327:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       return HAL_TIMEOUT;
 2349              		.loc 1 1327 0
 2350 003e 0323     		movs	r3, #3
 2351 0040 07E0     		b	.L117
 2352              	.L118:
1323:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {
 2353              		.loc 1 1323 0
 2354 0042 7B68     		ldr	r3, [r7, #4]
 2355 0044 1B68     		ldr	r3, [r3]
 2356 0046 5B68     		ldr	r3, [r3, #4]
 2357 0048 03F00803 		and	r3, r3, #8
 2358 004c 002B     		cmp	r3, #0
 2359 004e EED0     		beq	.L119
1328:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     } 
1329:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   }
1330:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   
1331:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   return HAL_OK;
 2360              		.loc 1 1331 0
 2361 0050 0023     		movs	r3, #0
 2362              	.L117:
1332:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** }
 2363              		.loc 1 1332 0
 2364 0052 1846     		mov	r0, r3
 2365 0054 1037     		adds	r7, r7, #16
 2366              	.LCFI87:
 2367              		.cfi_def_cfa_offset 8
 2368 0056 BD46     		mov	sp, r7
 2369              	.LCFI88:
 2370              		.cfi_def_cfa_register 13
 2371              		@ sp needed
 2372 0058 80BD     		pop	{r7, pc}
 2373              		.cfi_endproc
 2374              	.LFE79:
 2376 005a 00BF     		.section	.text.RTC_ReadTimeCounter,"ax",%progbits
 2377              		.align	2
 2378              		.thumb
 2379              		.thumb_func
 2381              	RTC_ReadTimeCounter:
 2382              	.LFB80:
1333:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
1334:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** /**
1335:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @}
1336:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   */
1337:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
1338:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
1339:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** /**
1340:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @}
ARM GAS  /tmp/cccafUze.s 			page 66


1341:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   */
1342:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
1343:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** /** @addtogroup RTC_Private_Functions
1344:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @{
1345:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   */
1346:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   
1347:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
1348:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** /**
1349:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @brief  Read the time counter available in RTC_CNT registers.
1350:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @param  hrtc   pointer to a RTC_HandleTypeDef structure that contains
1351:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   *                the configuration information for RTC.
1352:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @retval Time counter
1353:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   */
1354:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** static uint32_t RTC_ReadTimeCounter(RTC_HandleTypeDef* hrtc)
1355:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** {
 2383              		.loc 1 1355 0
 2384              		.cfi_startproc
 2385              		@ args = 0, pretend = 0, frame = 24
 2386              		@ frame_needed = 1, uses_anonymous_args = 0
 2387              		@ link register save eliminated.
 2388 0000 80B4     		push	{r7}
 2389              	.LCFI89:
 2390              		.cfi_def_cfa_offset 4
 2391              		.cfi_offset 7, -4
 2392 0002 87B0     		sub	sp, sp, #28
 2393              	.LCFI90:
 2394              		.cfi_def_cfa_offset 32
 2395 0004 00AF     		add	r7, sp, #0
 2396              	.LCFI91:
 2397              		.cfi_def_cfa_register 7
 2398 0006 7860     		str	r0, [r7, #4]
1356:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   uint16_t high1 = 0, high2 = 0, low = 0;
 2399              		.loc 1 1356 0
 2400 0008 0023     		movs	r3, #0
 2401 000a 7B82     		strh	r3, [r7, #18]	@ movhi
 2402 000c 0023     		movs	r3, #0
 2403 000e 3B82     		strh	r3, [r7, #16]	@ movhi
 2404 0010 0023     		movs	r3, #0
 2405 0012 FB81     		strh	r3, [r7, #14]	@ movhi
1357:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   uint32_t timecounter = 0;
 2406              		.loc 1 1357 0
 2407 0014 0023     		movs	r3, #0
 2408 0016 7B61     		str	r3, [r7, #20]
1358:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
1359:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   high1 = READ_REG(hrtc->Instance->CNTH & RTC_CNTH_RTC_CNT);
 2409              		.loc 1 1359 0
 2410 0018 7B68     		ldr	r3, [r7, #4]
 2411 001a 1B68     		ldr	r3, [r3]
 2412 001c 9B69     		ldr	r3, [r3, #24]
 2413 001e 7B82     		strh	r3, [r7, #18]	@ movhi
1360:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   low   = READ_REG(hrtc->Instance->CNTL & RTC_CNTL_RTC_CNT);
 2414              		.loc 1 1360 0
 2415 0020 7B68     		ldr	r3, [r7, #4]
 2416 0022 1B68     		ldr	r3, [r3]
 2417 0024 DB69     		ldr	r3, [r3, #28]
 2418 0026 FB81     		strh	r3, [r7, #14]	@ movhi
1361:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   high2 = READ_REG(hrtc->Instance->CNTH & RTC_CNTH_RTC_CNT);
ARM GAS  /tmp/cccafUze.s 			page 67


 2419              		.loc 1 1361 0
 2420 0028 7B68     		ldr	r3, [r7, #4]
 2421 002a 1B68     		ldr	r3, [r3]
 2422 002c 9B69     		ldr	r3, [r3, #24]
 2423 002e 3B82     		strh	r3, [r7, #16]	@ movhi
1362:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
1363:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   if (high1 != high2)
 2424              		.loc 1 1363 0
 2425 0030 7A8A     		ldrh	r2, [r7, #18]
 2426 0032 3B8A     		ldrh	r3, [r7, #16]
 2427 0034 9A42     		cmp	r2, r3
 2428 0036 08D0     		beq	.L121
1364:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   { /* In this case the counter roll over during reading of CNTL and CNTH registers, 
1365:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****        read again CNTL register then return the counter value */
1366:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     timecounter = (((uint32_t) high2 << 16 ) | READ_REG(hrtc->Instance->CNTL & RTC_CNTL_RTC_CNT));
 2429              		.loc 1 1366 0
 2430 0038 3B8A     		ldrh	r3, [r7, #16]
 2431 003a 1A04     		lsls	r2, r3, #16
 2432 003c 7B68     		ldr	r3, [r7, #4]
 2433 003e 1B68     		ldr	r3, [r3]
 2434 0040 DB69     		ldr	r3, [r3, #28]
 2435 0042 9BB2     		uxth	r3, r3
 2436 0044 1343     		orrs	r3, r3, r2
 2437 0046 7B61     		str	r3, [r7, #20]
 2438 0048 04E0     		b	.L122
 2439              	.L121:
1367:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   }
1368:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   else
1369:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   { /* No counter roll over during reading of CNTL and CNTH registers, counter 
1370:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****        value is equal to first value of CNTL and CNTH */
1371:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     timecounter = (((uint32_t) high1 << 16 ) | low);
 2440              		.loc 1 1371 0
 2441 004a 7B8A     		ldrh	r3, [r7, #18]
 2442 004c 1A04     		lsls	r2, r3, #16
 2443 004e FB89     		ldrh	r3, [r7, #14]
 2444 0050 1343     		orrs	r3, r3, r2
 2445 0052 7B61     		str	r3, [r7, #20]
 2446              	.L122:
1372:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   }
1373:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
1374:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   return timecounter;
 2447              		.loc 1 1374 0
 2448 0054 7B69     		ldr	r3, [r7, #20]
1375:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** }
 2449              		.loc 1 1375 0
 2450 0056 1846     		mov	r0, r3
 2451 0058 1C37     		adds	r7, r7, #28
 2452              	.LCFI92:
 2453              		.cfi_def_cfa_offset 4
 2454 005a BD46     		mov	sp, r7
 2455              	.LCFI93:
 2456              		.cfi_def_cfa_register 13
 2457              		@ sp needed
 2458 005c 5DF8047B 		ldr	r7, [sp], #4
 2459              	.LCFI94:
 2460              		.cfi_restore 7
 2461              		.cfi_def_cfa_offset 0
ARM GAS  /tmp/cccafUze.s 			page 68


 2462 0060 7047     		bx	lr
 2463              		.cfi_endproc
 2464              	.LFE80:
 2466 0062 00BF     		.section	.text.RTC_WriteTimeCounter,"ax",%progbits
 2467              		.align	2
 2468              		.thumb
 2469              		.thumb_func
 2471              	RTC_WriteTimeCounter:
 2472              	.LFB81:
1376:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
1377:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** /**
1378:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @brief  Write the time counter in RTC_CNT registers.
1379:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @param  hrtc   pointer to a RTC_HandleTypeDef structure that contains
1380:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   *                the configuration information for RTC.
1381:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @param  TimeCounter: Counter to write in RTC_CNT registers
1382:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @retval HAL status
1383:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   */
1384:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** static HAL_StatusTypeDef RTC_WriteTimeCounter(RTC_HandleTypeDef* hrtc, uint32_t TimeCounter)
1385:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** {
 2473              		.loc 1 1385 0
 2474              		.cfi_startproc
 2475              		@ args = 0, pretend = 0, frame = 16
 2476              		@ frame_needed = 1, uses_anonymous_args = 0
 2477 0000 80B5     		push	{r7, lr}
 2478              	.LCFI95:
 2479              		.cfi_def_cfa_offset 8
 2480              		.cfi_offset 7, -8
 2481              		.cfi_offset 14, -4
 2482 0002 84B0     		sub	sp, sp, #16
 2483              	.LCFI96:
 2484              		.cfi_def_cfa_offset 24
 2485 0004 00AF     		add	r7, sp, #0
 2486              	.LCFI97:
 2487              		.cfi_def_cfa_register 7
 2488 0006 7860     		str	r0, [r7, #4]
 2489 0008 3960     		str	r1, [r7]
1386:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   HAL_StatusTypeDef status = HAL_OK;
 2490              		.loc 1 1386 0
 2491 000a 0023     		movs	r3, #0
 2492 000c FB73     		strb	r3, [r7, #15]
1387:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   
1388:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   /* Set Initialization mode */
1389:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   if(RTC_EnterInitMode(hrtc) != HAL_OK)
 2493              		.loc 1 1389 0
 2494 000e 7868     		ldr	r0, [r7, #4]
 2495 0010 FFF7FEFF 		bl	RTC_EnterInitMode
 2496 0014 0346     		mov	r3, r0
 2497 0016 002B     		cmp	r3, #0
 2498 0018 02D0     		beq	.L125
1390:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {
1391:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     status = HAL_ERROR;
 2499              		.loc 1 1391 0
 2500 001a 0123     		movs	r3, #1
 2501 001c FB73     		strb	r3, [r7, #15]
 2502 001e 11E0     		b	.L126
 2503              	.L125:
1392:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   } 
ARM GAS  /tmp/cccafUze.s 			page 69


1393:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   else
1394:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {
1395:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     /* Set RTC COUNTER MSB word */
1396:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     WRITE_REG(hrtc->Instance->CNTH, (TimeCounter >> 16));
 2504              		.loc 1 1396 0
 2505 0020 7B68     		ldr	r3, [r7, #4]
 2506 0022 1B68     		ldr	r3, [r3]
 2507 0024 3A68     		ldr	r2, [r7]
 2508 0026 120C     		lsrs	r2, r2, #16
 2509 0028 9A61     		str	r2, [r3, #24]
1397:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     /* Set RTC COUNTER LSB word */
1398:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     WRITE_REG(hrtc->Instance->CNTL, (TimeCounter & RTC_CNTL_RTC_CNT));
 2510              		.loc 1 1398 0
 2511 002a 7B68     		ldr	r3, [r7, #4]
 2512 002c 1B68     		ldr	r3, [r3]
 2513 002e 3A68     		ldr	r2, [r7]
 2514 0030 92B2     		uxth	r2, r2
 2515 0032 DA61     		str	r2, [r3, #28]
1399:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     
1400:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     /* Wait for synchro */
1401:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     if(RTC_ExitInitMode(hrtc) != HAL_OK)
 2516              		.loc 1 1401 0
 2517 0034 7868     		ldr	r0, [r7, #4]
 2518 0036 FFF7FEFF 		bl	RTC_ExitInitMode
 2519 003a 0346     		mov	r3, r0
 2520 003c 002B     		cmp	r3, #0
 2521 003e 01D0     		beq	.L126
1402:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     {       
1403:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       status = HAL_ERROR;
 2522              		.loc 1 1403 0
 2523 0040 0123     		movs	r3, #1
 2524 0042 FB73     		strb	r3, [r7, #15]
 2525              	.L126:
1404:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     }
1405:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   }
1406:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
1407:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   return status;
 2526              		.loc 1 1407 0
 2527 0044 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
1408:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** }
 2528              		.loc 1 1408 0
 2529 0046 1846     		mov	r0, r3
 2530 0048 1037     		adds	r7, r7, #16
 2531              	.LCFI98:
 2532              		.cfi_def_cfa_offset 8
 2533 004a BD46     		mov	sp, r7
 2534              	.LCFI99:
 2535              		.cfi_def_cfa_register 13
 2536              		@ sp needed
 2537 004c 80BD     		pop	{r7, pc}
 2538              		.cfi_endproc
 2539              	.LFE81:
 2541 004e 00BF     		.section	.text.RTC_ReadAlarmCounter,"ax",%progbits
 2542              		.align	2
 2543              		.thumb
 2544              		.thumb_func
 2546              	RTC_ReadAlarmCounter:
ARM GAS  /tmp/cccafUze.s 			page 70


 2547              	.LFB82:
1409:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
1410:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** /**
1411:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @brief  Read the time counter available in RTC_ALR registers.
1412:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @param  hrtc   pointer to a RTC_HandleTypeDef structure that contains
1413:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   *                the configuration information for RTC.
1414:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @retval Time counter
1415:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   */
1416:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** static uint32_t RTC_ReadAlarmCounter(RTC_HandleTypeDef* hrtc)
1417:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** {
 2548              		.loc 1 1417 0
 2549              		.cfi_startproc
 2550              		@ args = 0, pretend = 0, frame = 16
 2551              		@ frame_needed = 1, uses_anonymous_args = 0
 2552              		@ link register save eliminated.
 2553 0000 80B4     		push	{r7}
 2554              	.LCFI100:
 2555              		.cfi_def_cfa_offset 4
 2556              		.cfi_offset 7, -4
 2557 0002 85B0     		sub	sp, sp, #20
 2558              	.LCFI101:
 2559              		.cfi_def_cfa_offset 24
 2560 0004 00AF     		add	r7, sp, #0
 2561              	.LCFI102:
 2562              		.cfi_def_cfa_register 7
 2563 0006 7860     		str	r0, [r7, #4]
1418:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   uint16_t high1 = 0, low = 0;
 2564              		.loc 1 1418 0
 2565 0008 0023     		movs	r3, #0
 2566 000a FB81     		strh	r3, [r7, #14]	@ movhi
 2567 000c 0023     		movs	r3, #0
 2568 000e BB81     		strh	r3, [r7, #12]	@ movhi
1419:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
1420:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   high1 = READ_REG(hrtc->Instance->ALRH & RTC_CNTH_RTC_CNT);
 2569              		.loc 1 1420 0
 2570 0010 7B68     		ldr	r3, [r7, #4]
 2571 0012 1B68     		ldr	r3, [r3]
 2572 0014 1B6A     		ldr	r3, [r3, #32]
 2573 0016 FB81     		strh	r3, [r7, #14]	@ movhi
1421:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   low   = READ_REG(hrtc->Instance->ALRL & RTC_CNTL_RTC_CNT);
 2574              		.loc 1 1421 0
 2575 0018 7B68     		ldr	r3, [r7, #4]
 2576 001a 1B68     		ldr	r3, [r3]
 2577 001c 5B6A     		ldr	r3, [r3, #36]
 2578 001e BB81     		strh	r3, [r7, #12]	@ movhi
1422:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
1423:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   return (((uint32_t) high1 << 16 ) | low);
 2579              		.loc 1 1423 0
 2580 0020 FB89     		ldrh	r3, [r7, #14]
 2581 0022 1A04     		lsls	r2, r3, #16
 2582 0024 BB89     		ldrh	r3, [r7, #12]
 2583 0026 1343     		orrs	r3, r3, r2
1424:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** }
 2584              		.loc 1 1424 0
 2585 0028 1846     		mov	r0, r3
 2586 002a 1437     		adds	r7, r7, #20
 2587              	.LCFI103:
ARM GAS  /tmp/cccafUze.s 			page 71


 2588              		.cfi_def_cfa_offset 4
 2589 002c BD46     		mov	sp, r7
 2590              	.LCFI104:
 2591              		.cfi_def_cfa_register 13
 2592              		@ sp needed
 2593 002e 5DF8047B 		ldr	r7, [sp], #4
 2594              	.LCFI105:
 2595              		.cfi_restore 7
 2596              		.cfi_def_cfa_offset 0
 2597 0032 7047     		bx	lr
 2598              		.cfi_endproc
 2599              	.LFE82:
 2601              		.section	.text.RTC_WriteAlarmCounter,"ax",%progbits
 2602              		.align	2
 2603              		.thumb
 2604              		.thumb_func
 2606              	RTC_WriteAlarmCounter:
 2607              	.LFB83:
1425:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
1426:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** /**
1427:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @brief  Write the time counter in RTC_ALR registers.
1428:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @param  hrtc   pointer to a RTC_HandleTypeDef structure that contains
1429:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   *                the configuration information for RTC.
1430:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @param  AlarmCounter: Counter to write in RTC_ALR registers
1431:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @retval HAL status
1432:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   */
1433:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** static HAL_StatusTypeDef RTC_WriteAlarmCounter(RTC_HandleTypeDef* hrtc, uint32_t AlarmCounter)
1434:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** {
 2608              		.loc 1 1434 0
 2609              		.cfi_startproc
 2610              		@ args = 0, pretend = 0, frame = 16
 2611              		@ frame_needed = 1, uses_anonymous_args = 0
 2612 0000 80B5     		push	{r7, lr}
 2613              	.LCFI106:
 2614              		.cfi_def_cfa_offset 8
 2615              		.cfi_offset 7, -8
 2616              		.cfi_offset 14, -4
 2617 0002 84B0     		sub	sp, sp, #16
 2618              	.LCFI107:
 2619              		.cfi_def_cfa_offset 24
 2620 0004 00AF     		add	r7, sp, #0
 2621              	.LCFI108:
 2622              		.cfi_def_cfa_register 7
 2623 0006 7860     		str	r0, [r7, #4]
 2624 0008 3960     		str	r1, [r7]
1435:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   HAL_StatusTypeDef status = HAL_OK;
 2625              		.loc 1 1435 0
 2626 000a 0023     		movs	r3, #0
 2627 000c FB73     		strb	r3, [r7, #15]
1436:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   
1437:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   /* Set Initialization mode */
1438:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   if(RTC_EnterInitMode(hrtc) != HAL_OK)
 2628              		.loc 1 1438 0
 2629 000e 7868     		ldr	r0, [r7, #4]
 2630 0010 FFF7FEFF 		bl	RTC_EnterInitMode
 2631 0014 0346     		mov	r3, r0
 2632 0016 002B     		cmp	r3, #0
ARM GAS  /tmp/cccafUze.s 			page 72


 2633 0018 02D0     		beq	.L131
1439:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {
1440:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     status = HAL_ERROR;
 2634              		.loc 1 1440 0
 2635 001a 0123     		movs	r3, #1
 2636 001c FB73     		strb	r3, [r7, #15]
 2637 001e 11E0     		b	.L132
 2638              	.L131:
1441:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   } 
1442:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   else
1443:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {
1444:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     /* Set RTC COUNTER MSB word */
1445:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     WRITE_REG(hrtc->Instance->ALRH, (AlarmCounter >> 16));
 2639              		.loc 1 1445 0
 2640 0020 7B68     		ldr	r3, [r7, #4]
 2641 0022 1B68     		ldr	r3, [r3]
 2642 0024 3A68     		ldr	r2, [r7]
 2643 0026 120C     		lsrs	r2, r2, #16
 2644 0028 1A62     		str	r2, [r3, #32]
1446:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     /* Set RTC COUNTER LSB word */
1447:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     WRITE_REG(hrtc->Instance->ALRL, (AlarmCounter & RTC_ALRL_RTC_ALR));
 2645              		.loc 1 1447 0
 2646 002a 7B68     		ldr	r3, [r7, #4]
 2647 002c 1B68     		ldr	r3, [r3]
 2648 002e 3A68     		ldr	r2, [r7]
 2649 0030 92B2     		uxth	r2, r2
 2650 0032 5A62     		str	r2, [r3, #36]
1448:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     
1449:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     /* Wait for synchro */
1450:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     if(RTC_ExitInitMode(hrtc) != HAL_OK)
 2651              		.loc 1 1450 0
 2652 0034 7868     		ldr	r0, [r7, #4]
 2653 0036 FFF7FEFF 		bl	RTC_ExitInitMode
 2654 003a 0346     		mov	r3, r0
 2655 003c 002B     		cmp	r3, #0
 2656 003e 01D0     		beq	.L132
1451:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     {       
1452:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       status = HAL_ERROR;
 2657              		.loc 1 1452 0
 2658 0040 0123     		movs	r3, #1
 2659 0042 FB73     		strb	r3, [r7, #15]
 2660              	.L132:
1453:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     }
1454:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   }
1455:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
1456:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   return status;
 2661              		.loc 1 1456 0
 2662 0044 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
1457:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** }
 2663              		.loc 1 1457 0
 2664 0046 1846     		mov	r0, r3
 2665 0048 1037     		adds	r7, r7, #16
 2666              	.LCFI109:
 2667              		.cfi_def_cfa_offset 8
 2668 004a BD46     		mov	sp, r7
 2669              	.LCFI110:
 2670              		.cfi_def_cfa_register 13
ARM GAS  /tmp/cccafUze.s 			page 73


 2671              		@ sp needed
 2672 004c 80BD     		pop	{r7, pc}
 2673              		.cfi_endproc
 2674              	.LFE83:
 2676 004e 00BF     		.section	.text.RTC_EnterInitMode,"ax",%progbits
 2677              		.align	2
 2678              		.thumb
 2679              		.thumb_func
 2681              	RTC_EnterInitMode:
 2682              	.LFB84:
1458:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
1459:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** /**
1460:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @brief  Enters the RTC Initialization mode.
1461:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @param  hrtc   pointer to a RTC_HandleTypeDef structure that contains
1462:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   *                the configuration information for RTC.
1463:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @retval HAL status
1464:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   */
1465:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** static HAL_StatusTypeDef RTC_EnterInitMode(RTC_HandleTypeDef* hrtc)
1466:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** {
 2683              		.loc 1 1466 0
 2684              		.cfi_startproc
 2685              		@ args = 0, pretend = 0, frame = 16
 2686              		@ frame_needed = 1, uses_anonymous_args = 0
 2687 0000 80B5     		push	{r7, lr}
 2688              	.LCFI111:
 2689              		.cfi_def_cfa_offset 8
 2690              		.cfi_offset 7, -8
 2691              		.cfi_offset 14, -4
 2692 0002 84B0     		sub	sp, sp, #16
 2693              	.LCFI112:
 2694              		.cfi_def_cfa_offset 24
 2695 0004 00AF     		add	r7, sp, #0
 2696              	.LCFI113:
 2697              		.cfi_def_cfa_register 7
 2698 0006 7860     		str	r0, [r7, #4]
1467:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   uint32_t tickstart = 0;
 2699              		.loc 1 1467 0
 2700 0008 0023     		movs	r3, #0
 2701 000a FB60     		str	r3, [r7, #12]
1468:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   
1469:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   tickstart = HAL_GetTick();
 2702              		.loc 1 1469 0
 2703 000c FFF7FEFF 		bl	HAL_GetTick
 2704 0010 F860     		str	r0, [r7, #12]
1470:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   /* Wait till RTC is in INIT state and if Time out is reached exit */
1471:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   while((hrtc->Instance->CRL & RTC_CRL_RTOFF) == (uint32_t)RESET)
 2705              		.loc 1 1471 0
 2706 0012 09E0     		b	.L135
 2707              	.L137:
1472:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {
1473:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     if((HAL_GetTick() - tickstart) >  RTC_TIMEOUT_VALUE)
 2708              		.loc 1 1473 0
 2709 0014 FFF7FEFF 		bl	HAL_GetTick
 2710 0018 0246     		mov	r2, r0
 2711 001a FB68     		ldr	r3, [r7, #12]
 2712 001c D31A     		subs	r3, r2, r3
 2713 001e B3F57A7F 		cmp	r3, #1000
ARM GAS  /tmp/cccafUze.s 			page 74


 2714 0022 01D9     		bls	.L135
1474:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     {       
1475:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       return HAL_TIMEOUT;
 2715              		.loc 1 1475 0
 2716 0024 0323     		movs	r3, #3
 2717 0026 0FE0     		b	.L136
 2718              	.L135:
1471:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {
 2719              		.loc 1 1471 0
 2720 0028 7B68     		ldr	r3, [r7, #4]
 2721 002a 1B68     		ldr	r3, [r3]
 2722 002c 5B68     		ldr	r3, [r3, #4]
 2723 002e 03F02003 		and	r3, r3, #32
 2724 0032 002B     		cmp	r3, #0
 2725 0034 EED0     		beq	.L137
1476:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     } 
1477:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   }
1478:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
1479:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   /* Disable the write protection for RTC registers */
1480:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   __HAL_RTC_WRITEPROTECTION_DISABLE(hrtc);
 2726              		.loc 1 1480 0
 2727 0036 7B68     		ldr	r3, [r7, #4]
 2728 0038 1B68     		ldr	r3, [r3]
 2729 003a 7A68     		ldr	r2, [r7, #4]
 2730 003c 1268     		ldr	r2, [r2]
 2731 003e 5268     		ldr	r2, [r2, #4]
 2732 0040 42F01002 		orr	r2, r2, #16
 2733 0044 5A60     		str	r2, [r3, #4]
1481:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   
1482:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   
1483:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   return HAL_OK;  
 2734              		.loc 1 1483 0
 2735 0046 0023     		movs	r3, #0
 2736              	.L136:
1484:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** }
 2737              		.loc 1 1484 0
 2738 0048 1846     		mov	r0, r3
 2739 004a 1037     		adds	r7, r7, #16
 2740              	.LCFI114:
 2741              		.cfi_def_cfa_offset 8
 2742 004c BD46     		mov	sp, r7
 2743              	.LCFI115:
 2744              		.cfi_def_cfa_register 13
 2745              		@ sp needed
 2746 004e 80BD     		pop	{r7, pc}
 2747              		.cfi_endproc
 2748              	.LFE84:
 2750              		.section	.text.RTC_ExitInitMode,"ax",%progbits
 2751              		.align	2
 2752              		.thumb
 2753              		.thumb_func
 2755              	RTC_ExitInitMode:
 2756              	.LFB85:
1485:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
1486:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** /**
1487:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @brief  Exit the RTC Initialization mode.
1488:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @param  hrtc   pointer to a RTC_HandleTypeDef structure that contains
ARM GAS  /tmp/cccafUze.s 			page 75


1489:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   *                the configuration information for RTC.
1490:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @retval HAL status
1491:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   */
1492:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** static HAL_StatusTypeDef RTC_ExitInitMode(RTC_HandleTypeDef* hrtc)
1493:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** {
 2757              		.loc 1 1493 0
 2758              		.cfi_startproc
 2759              		@ args = 0, pretend = 0, frame = 16
 2760              		@ frame_needed = 1, uses_anonymous_args = 0
 2761 0000 80B5     		push	{r7, lr}
 2762              	.LCFI116:
 2763              		.cfi_def_cfa_offset 8
 2764              		.cfi_offset 7, -8
 2765              		.cfi_offset 14, -4
 2766 0002 84B0     		sub	sp, sp, #16
 2767              	.LCFI117:
 2768              		.cfi_def_cfa_offset 24
 2769 0004 00AF     		add	r7, sp, #0
 2770              	.LCFI118:
 2771              		.cfi_def_cfa_register 7
 2772 0006 7860     		str	r0, [r7, #4]
1494:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   uint32_t tickstart = 0;
 2773              		.loc 1 1494 0
 2774 0008 0023     		movs	r3, #0
 2775 000a FB60     		str	r3, [r7, #12]
1495:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   
1496:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   /* Disable the write protection for RTC registers */
1497:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
 2776              		.loc 1 1497 0
 2777 000c 7B68     		ldr	r3, [r7, #4]
 2778 000e 1B68     		ldr	r3, [r3]
 2779 0010 7A68     		ldr	r2, [r7, #4]
 2780 0012 1268     		ldr	r2, [r2]
 2781 0014 5268     		ldr	r2, [r2, #4]
 2782 0016 22F01002 		bic	r2, r2, #16
 2783 001a 5A60     		str	r2, [r3, #4]
1498:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   
1499:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   tickstart = HAL_GetTick();
 2784              		.loc 1 1499 0
 2785 001c FFF7FEFF 		bl	HAL_GetTick
 2786 0020 F860     		str	r0, [r7, #12]
1500:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   /* Wait till RTC is in INIT state and if Time out is reached exit */
1501:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   while((hrtc->Instance->CRL & RTC_CRL_RTOFF) == (uint32_t)RESET)
 2787              		.loc 1 1501 0
 2788 0022 09E0     		b	.L139
 2789              	.L141:
1502:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {
1503:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     if((HAL_GetTick() - tickstart) >  RTC_TIMEOUT_VALUE)
 2790              		.loc 1 1503 0
 2791 0024 FFF7FEFF 		bl	HAL_GetTick
 2792 0028 0246     		mov	r2, r0
 2793 002a FB68     		ldr	r3, [r7, #12]
 2794 002c D31A     		subs	r3, r2, r3
 2795 002e B3F57A7F 		cmp	r3, #1000
 2796 0032 01D9     		bls	.L139
1504:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     {       
1505:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       return HAL_TIMEOUT;
ARM GAS  /tmp/cccafUze.s 			page 76


 2797              		.loc 1 1505 0
 2798 0034 0323     		movs	r3, #3
 2799 0036 07E0     		b	.L140
 2800              	.L139:
1501:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {
 2801              		.loc 1 1501 0
 2802 0038 7B68     		ldr	r3, [r7, #4]
 2803 003a 1B68     		ldr	r3, [r3]
 2804 003c 5B68     		ldr	r3, [r3, #4]
 2805 003e 03F02003 		and	r3, r3, #32
 2806 0042 002B     		cmp	r3, #0
 2807 0044 EED0     		beq	.L141
1506:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     } 
1507:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   }
1508:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   
1509:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   return HAL_OK;  
 2808              		.loc 1 1509 0
 2809 0046 0023     		movs	r3, #0
 2810              	.L140:
1510:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** }
 2811              		.loc 1 1510 0
 2812 0048 1846     		mov	r0, r3
 2813 004a 1037     		adds	r7, r7, #16
 2814              	.LCFI119:
 2815              		.cfi_def_cfa_offset 8
 2816 004c BD46     		mov	sp, r7
 2817              	.LCFI120:
 2818              		.cfi_def_cfa_register 13
 2819              		@ sp needed
 2820 004e 80BD     		pop	{r7, pc}
 2821              		.cfi_endproc
 2822              	.LFE85:
 2824              		.section	.text.RTC_ByteToBcd2,"ax",%progbits
 2825              		.align	2
 2826              		.thumb
 2827              		.thumb_func
 2829              	RTC_ByteToBcd2:
 2830              	.LFB86:
1511:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
1512:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** /**
1513:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @brief  Converts a 2 digit decimal to BCD format.
1514:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @param  Value: Byte to be converted
1515:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @retval Converted byte
1516:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   */
1517:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** static uint8_t RTC_ByteToBcd2(uint8_t Value)
1518:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** {
 2831              		.loc 1 1518 0
 2832              		.cfi_startproc
 2833              		@ args = 0, pretend = 0, frame = 16
 2834              		@ frame_needed = 1, uses_anonymous_args = 0
 2835              		@ link register save eliminated.
 2836 0000 80B4     		push	{r7}
 2837              	.LCFI121:
 2838              		.cfi_def_cfa_offset 4
 2839              		.cfi_offset 7, -4
 2840 0002 85B0     		sub	sp, sp, #20
 2841              	.LCFI122:
ARM GAS  /tmp/cccafUze.s 			page 77


 2842              		.cfi_def_cfa_offset 24
 2843 0004 00AF     		add	r7, sp, #0
 2844              	.LCFI123:
 2845              		.cfi_def_cfa_register 7
 2846 0006 0346     		mov	r3, r0
 2847 0008 FB71     		strb	r3, [r7, #7]
1519:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   uint32_t bcdhigh = 0;
 2848              		.loc 1 1519 0
 2849 000a 0023     		movs	r3, #0
 2850 000c FB60     		str	r3, [r7, #12]
1520:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   
1521:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   while(Value >= 10)
 2851              		.loc 1 1521 0
 2852 000e 05E0     		b	.L143
 2853              	.L144:
1522:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {
1523:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     bcdhigh++;
 2854              		.loc 1 1523 0
 2855 0010 FB68     		ldr	r3, [r7, #12]
 2856 0012 0133     		adds	r3, r3, #1
 2857 0014 FB60     		str	r3, [r7, #12]
1524:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     Value -= 10;
 2858              		.loc 1 1524 0
 2859 0016 FB79     		ldrb	r3, [r7, #7]
 2860 0018 0A3B     		subs	r3, r3, #10
 2861 001a FB71     		strb	r3, [r7, #7]
 2862              	.L143:
1521:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {
 2863              		.loc 1 1521 0
 2864 001c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2865 001e 092B     		cmp	r3, #9
 2866 0020 F6D8     		bhi	.L144
1525:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   }
1526:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   
1527:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   return  ((uint8_t)(bcdhigh << 4) | Value);
 2867              		.loc 1 1527 0
 2868 0022 FB68     		ldr	r3, [r7, #12]
 2869 0024 DBB2     		uxtb	r3, r3
 2870 0026 1B01     		lsls	r3, r3, #4
 2871 0028 DAB2     		uxtb	r2, r3
 2872 002a FB79     		ldrb	r3, [r7, #7]
 2873 002c 1343     		orrs	r3, r3, r2
 2874 002e DBB2     		uxtb	r3, r3
1528:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** }
 2875              		.loc 1 1528 0
 2876 0030 1846     		mov	r0, r3
 2877 0032 1437     		adds	r7, r7, #20
 2878              	.LCFI124:
 2879              		.cfi_def_cfa_offset 4
 2880 0034 BD46     		mov	sp, r7
 2881              	.LCFI125:
 2882              		.cfi_def_cfa_register 13
 2883              		@ sp needed
 2884 0036 5DF8047B 		ldr	r7, [sp], #4
 2885              	.LCFI126:
 2886              		.cfi_restore 7
 2887              		.cfi_def_cfa_offset 0
ARM GAS  /tmp/cccafUze.s 			page 78


 2888 003a 7047     		bx	lr
 2889              		.cfi_endproc
 2890              	.LFE86:
 2892              		.section	.text.RTC_Bcd2ToByte,"ax",%progbits
 2893              		.align	2
 2894              		.thumb
 2895              		.thumb_func
 2897              	RTC_Bcd2ToByte:
 2898              	.LFB87:
1529:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
1530:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** /**
1531:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @brief  Converts from 2 digit BCD to Binary.
1532:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @param  Value: BCD value to be converted
1533:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @retval Converted word
1534:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   */
1535:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** static uint8_t RTC_Bcd2ToByte(uint8_t Value)
1536:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** {
 2899              		.loc 1 1536 0
 2900              		.cfi_startproc
 2901              		@ args = 0, pretend = 0, frame = 16
 2902              		@ frame_needed = 1, uses_anonymous_args = 0
 2903              		@ link register save eliminated.
 2904 0000 80B4     		push	{r7}
 2905              	.LCFI127:
 2906              		.cfi_def_cfa_offset 4
 2907              		.cfi_offset 7, -4
 2908 0002 85B0     		sub	sp, sp, #20
 2909              	.LCFI128:
 2910              		.cfi_def_cfa_offset 24
 2911 0004 00AF     		add	r7, sp, #0
 2912              	.LCFI129:
 2913              		.cfi_def_cfa_register 7
 2914 0006 0346     		mov	r3, r0
 2915 0008 FB71     		strb	r3, [r7, #7]
1537:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   uint32_t tmp = 0;
 2916              		.loc 1 1537 0
 2917 000a 0023     		movs	r3, #0
 2918 000c FB60     		str	r3, [r7, #12]
1538:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   tmp = ((uint8_t)(Value & (uint8_t)0xF0) >> (uint8_t)0x4) * 10;
 2919              		.loc 1 1538 0
 2920 000e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2921 0010 1B09     		lsrs	r3, r3, #4
 2922 0012 DBB2     		uxtb	r3, r3
 2923 0014 1A46     		mov	r2, r3
 2924 0016 1346     		mov	r3, r2
 2925 0018 9B00     		lsls	r3, r3, #2
 2926 001a 1344     		add	r3, r3, r2
 2927 001c 5B00     		lsls	r3, r3, #1
 2928 001e FB60     		str	r3, [r7, #12]
1539:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   return (tmp + (Value & (uint8_t)0x0F));
 2929              		.loc 1 1539 0
 2930 0020 FB79     		ldrb	r3, [r7, #7]
 2931 0022 03F00F03 		and	r3, r3, #15
 2932 0026 DAB2     		uxtb	r2, r3
 2933 0028 FB68     		ldr	r3, [r7, #12]
 2934 002a DBB2     		uxtb	r3, r3
 2935 002c 1344     		add	r3, r3, r2
ARM GAS  /tmp/cccafUze.s 			page 79


 2936 002e DBB2     		uxtb	r3, r3
1540:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** }
 2937              		.loc 1 1540 0
 2938 0030 1846     		mov	r0, r3
 2939 0032 1437     		adds	r7, r7, #20
 2940              	.LCFI130:
 2941              		.cfi_def_cfa_offset 4
 2942 0034 BD46     		mov	sp, r7
 2943              	.LCFI131:
 2944              		.cfi_def_cfa_register 13
 2945              		@ sp needed
 2946 0036 5DF8047B 		ldr	r7, [sp], #4
 2947              	.LCFI132:
 2948              		.cfi_restore 7
 2949              		.cfi_def_cfa_offset 0
 2950 003a 7047     		bx	lr
 2951              		.cfi_endproc
 2952              	.LFE87:
 2954              		.section	.text.RTC_DateUpdate,"ax",%progbits
 2955              		.align	2
 2956              		.thumb
 2957              		.thumb_func
 2959              	RTC_DateUpdate:
 2960              	.LFB88:
1541:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
1542:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** /**
1543:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @brief  Updates date when time is 23:59:59.
1544:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @param  hrtc   pointer to a RTC_HandleTypeDef structure that contains
1545:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   *                the configuration information for RTC.
1546:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @param  DayElapsed: Number of days elapsed from last date update
1547:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @retval None
1548:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   */
1549:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** static void RTC_DateUpdate(RTC_HandleTypeDef* hrtc, uint32_t DayElapsed)
1550:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** {
 2961              		.loc 1 1550 0
 2962              		.cfi_startproc
 2963              		@ args = 0, pretend = 0, frame = 24
 2964              		@ frame_needed = 1, uses_anonymous_args = 0
 2965 0000 80B5     		push	{r7, lr}
 2966              	.LCFI133:
 2967              		.cfi_def_cfa_offset 8
 2968              		.cfi_offset 7, -8
 2969              		.cfi_offset 14, -4
 2970 0002 86B0     		sub	sp, sp, #24
 2971              	.LCFI134:
 2972              		.cfi_def_cfa_offset 32
 2973 0004 00AF     		add	r7, sp, #0
 2974              	.LCFI135:
 2975              		.cfi_def_cfa_register 7
 2976 0006 7860     		str	r0, [r7, #4]
 2977 0008 3960     		str	r1, [r7]
1551:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   uint32_t year = 0, month = 0, day = 0;
 2978              		.loc 1 1551 0
 2979 000a 0023     		movs	r3, #0
 2980 000c 7B61     		str	r3, [r7, #20]
 2981 000e 0023     		movs	r3, #0
 2982 0010 3B61     		str	r3, [r7, #16]
ARM GAS  /tmp/cccafUze.s 			page 80


 2983 0012 0023     		movs	r3, #0
 2984 0014 FB60     		str	r3, [r7, #12]
1552:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   uint32_t loop = 0;
 2985              		.loc 1 1552 0
 2986 0016 0023     		movs	r3, #0
 2987 0018 BB60     		str	r3, [r7, #8]
1553:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
1554:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   /* Get the current year*/
1555:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   year = hrtc->DateToUpdate.Year;
 2988              		.loc 1 1555 0
 2989 001a 7B68     		ldr	r3, [r7, #4]
 2990 001c DB7B     		ldrb	r3, [r3, #15]	@ zero_extendqisi2
 2991 001e 7B61     		str	r3, [r7, #20]
1556:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
1557:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   /* Get the current month and day */
1558:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   month = hrtc->DateToUpdate.Month;
 2992              		.loc 1 1558 0
 2993 0020 7B68     		ldr	r3, [r7, #4]
 2994 0022 5B7B     		ldrb	r3, [r3, #13]	@ zero_extendqisi2
 2995 0024 3B61     		str	r3, [r7, #16]
1559:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   day = hrtc->DateToUpdate.Date;
 2996              		.loc 1 1559 0
 2997 0026 7B68     		ldr	r3, [r7, #4]
 2998 0028 9B7B     		ldrb	r3, [r3, #14]	@ zero_extendqisi2
 2999 002a FB60     		str	r3, [r7, #12]
1560:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
1561:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   for (loop = 0; loop < DayElapsed; loop++)
 3000              		.loc 1 1561 0
 3001 002c 0023     		movs	r3, #0
 3002 002e BB60     		str	r3, [r7, #8]
 3003 0030 70E0     		b	.L149
 3004              	.L164:
1562:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {
1563:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     if((month == 1) || (month == 3) || (month == 5) || (month == 7) || \
 3005              		.loc 1 1563 0
 3006 0032 3B69     		ldr	r3, [r7, #16]
 3007 0034 012B     		cmp	r3, #1
 3008 0036 11D0     		beq	.L150
 3009              		.loc 1 1563 0 is_stmt 0 discriminator 1
 3010 0038 3B69     		ldr	r3, [r7, #16]
 3011 003a 032B     		cmp	r3, #3
 3012 003c 0ED0     		beq	.L150
 3013              		.loc 1 1563 0 discriminator 2
 3014 003e 3B69     		ldr	r3, [r7, #16]
 3015 0040 052B     		cmp	r3, #5
 3016 0042 0BD0     		beq	.L150
 3017              		.loc 1 1563 0 discriminator 3
 3018 0044 3B69     		ldr	r3, [r7, #16]
 3019 0046 072B     		cmp	r3, #7
 3020 0048 08D0     		beq	.L150
 3021              		.loc 1 1563 0 discriminator 4
 3022 004a 3B69     		ldr	r3, [r7, #16]
 3023 004c 082B     		cmp	r3, #8
 3024 004e 05D0     		beq	.L150
1564:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****        (month == 8) || (month == 10) || (month == 12))
 3025              		.loc 1 1564 0 is_stmt 1
 3026 0050 3B69     		ldr	r3, [r7, #16]
ARM GAS  /tmp/cccafUze.s 			page 81


 3027 0052 0A2B     		cmp	r3, #10
 3028 0054 02D0     		beq	.L150
 3029              		.loc 1 1564 0 is_stmt 0 discriminator 1
 3030 0056 3B69     		ldr	r3, [r7, #16]
 3031 0058 0C2B     		cmp	r3, #12
 3032 005a 18D1     		bne	.L151
 3033              	.L150:
1565:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     {
1566:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       if(day < 31)
 3034              		.loc 1 1566 0 is_stmt 1
 3035 005c FB68     		ldr	r3, [r7, #12]
 3036 005e 1E2B     		cmp	r3, #30
 3037 0060 03D8     		bhi	.L152
1567:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       {
1568:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****         day++;
 3038              		.loc 1 1568 0
 3039 0062 FB68     		ldr	r3, [r7, #12]
 3040 0064 0133     		adds	r3, r3, #1
 3041 0066 FB60     		str	r3, [r7, #12]
 3042 0068 10E0     		b	.L153
 3043              	.L152:
1569:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       }
1570:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       /* Date structure member: day = 31 */
1571:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       else
1572:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       {
1573:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****         if(month != 12)
 3044              		.loc 1 1573 0
 3045 006a 3B69     		ldr	r3, [r7, #16]
 3046 006c 0C2B     		cmp	r3, #12
 3047 006e 05D0     		beq	.L154
1574:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****         {
1575:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****           month++;
 3048              		.loc 1 1575 0
 3049 0070 3B69     		ldr	r3, [r7, #16]
 3050 0072 0133     		adds	r3, r3, #1
 3051 0074 3B61     		str	r3, [r7, #16]
1576:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****           day = 1;
 3052              		.loc 1 1576 0
 3053 0076 0123     		movs	r3, #1
 3054 0078 FB60     		str	r3, [r7, #12]
 3055 007a 07E0     		b	.L153
 3056              	.L154:
1577:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****         }
1578:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****         /* Date structure member: day = 31 & month =12 */
1579:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****         else
1580:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****         {
1581:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****           month = 1;
 3057              		.loc 1 1581 0
 3058 007c 0123     		movs	r3, #1
 3059 007e 3B61     		str	r3, [r7, #16]
1582:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****           day = 1;
 3060              		.loc 1 1582 0
 3061 0080 0123     		movs	r3, #1
 3062 0082 FB60     		str	r3, [r7, #12]
1583:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****           year++;
 3063              		.loc 1 1583 0
 3064 0084 7B69     		ldr	r3, [r7, #20]
ARM GAS  /tmp/cccafUze.s 			page 82


 3065 0086 0133     		adds	r3, r3, #1
 3066 0088 7B61     		str	r3, [r7, #20]
1566:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       {
 3067              		.loc 1 1566 0
 3068 008a 40E0     		b	.L155
 3069              	.L153:
 3070 008c 3FE0     		b	.L155
 3071              	.L151:
1584:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****         }
1585:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       }
1586:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     }
1587:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     else if((month == 4) || (month == 6) || (month == 9) || (month == 11))
 3072              		.loc 1 1587 0
 3073 008e 3B69     		ldr	r3, [r7, #16]
 3074 0090 042B     		cmp	r3, #4
 3075 0092 08D0     		beq	.L156
 3076              		.loc 1 1587 0 is_stmt 0 discriminator 1
 3077 0094 3B69     		ldr	r3, [r7, #16]
 3078 0096 062B     		cmp	r3, #6
 3079 0098 05D0     		beq	.L156
 3080              		.loc 1 1587 0 discriminator 2
 3081 009a 3B69     		ldr	r3, [r7, #16]
 3082 009c 092B     		cmp	r3, #9
 3083 009e 02D0     		beq	.L156
 3084              		.loc 1 1587 0 discriminator 3
 3085 00a0 3B69     		ldr	r3, [r7, #16]
 3086 00a2 0B2B     		cmp	r3, #11
 3087 00a4 0CD1     		bne	.L157
 3088              	.L156:
1588:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     {
1589:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       if(day < 30)
 3089              		.loc 1 1589 0 is_stmt 1
 3090 00a6 FB68     		ldr	r3, [r7, #12]
 3091 00a8 1D2B     		cmp	r3, #29
 3092 00aa 03D8     		bhi	.L158
1590:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       {
1591:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****         day++;
 3093              		.loc 1 1591 0
 3094 00ac FB68     		ldr	r3, [r7, #12]
 3095 00ae 0133     		adds	r3, r3, #1
 3096 00b0 FB60     		str	r3, [r7, #12]
1589:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       {
 3097              		.loc 1 1589 0
 3098 00b2 2CE0     		b	.L155
 3099              	.L158:
1592:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       }
1593:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       /* Date structure member: day = 30 */
1594:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       else
1595:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       {
1596:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****         month++;
 3100              		.loc 1 1596 0
 3101 00b4 3B69     		ldr	r3, [r7, #16]
 3102 00b6 0133     		adds	r3, r3, #1
 3103 00b8 3B61     		str	r3, [r7, #16]
1597:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****         day = 1;
 3104              		.loc 1 1597 0
 3105 00ba 0123     		movs	r3, #1
ARM GAS  /tmp/cccafUze.s 			page 83


 3106 00bc FB60     		str	r3, [r7, #12]
1589:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       {
 3107              		.loc 1 1589 0
 3108 00be 26E0     		b	.L155
 3109              	.L157:
1598:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       }
1599:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     }
1600:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     else if(month == 2)
 3110              		.loc 1 1600 0
 3111 00c0 3B69     		ldr	r3, [r7, #16]
 3112 00c2 022B     		cmp	r3, #2
 3113 00c4 23D1     		bne	.L155
1601:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     {
1602:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       if(day < 28)
 3114              		.loc 1 1602 0
 3115 00c6 FB68     		ldr	r3, [r7, #12]
 3116 00c8 1B2B     		cmp	r3, #27
 3117 00ca 03D8     		bhi	.L160
1603:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       {
1604:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****         day++;
 3118              		.loc 1 1604 0
 3119 00cc FB68     		ldr	r3, [r7, #12]
 3120 00ce 0133     		adds	r3, r3, #1
 3121 00d0 FB60     		str	r3, [r7, #12]
 3122 00d2 1CE0     		b	.L155
 3123              	.L160:
1605:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       }
1606:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       else if(day == 28)
 3124              		.loc 1 1606 0
 3125 00d4 FB68     		ldr	r3, [r7, #12]
 3126 00d6 1C2B     		cmp	r3, #28
 3127 00d8 11D1     		bne	.L161
1607:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       {
1608:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****         /* Leap year */
1609:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****         if(RTC_IsLeapYear(year))
 3128              		.loc 1 1609 0
 3129 00da 7B69     		ldr	r3, [r7, #20]
 3130 00dc 9BB2     		uxth	r3, r3
 3131 00de 1846     		mov	r0, r3
 3132 00e0 FFF7FEFF 		bl	RTC_IsLeapYear
 3133 00e4 0346     		mov	r3, r0
 3134 00e6 002B     		cmp	r3, #0
 3135 00e8 03D0     		beq	.L162
1610:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****         {
1611:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****           day++;
 3136              		.loc 1 1611 0
 3137 00ea FB68     		ldr	r3, [r7, #12]
 3138 00ec 0133     		adds	r3, r3, #1
 3139 00ee FB60     		str	r3, [r7, #12]
 3140 00f0 0DE0     		b	.L155
 3141              	.L162:
1612:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****         }
1613:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****         else
1614:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****         {
1615:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****           month++;
 3142              		.loc 1 1615 0
 3143 00f2 3B69     		ldr	r3, [r7, #16]
ARM GAS  /tmp/cccafUze.s 			page 84


 3144 00f4 0133     		adds	r3, r3, #1
 3145 00f6 3B61     		str	r3, [r7, #16]
1616:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****           day = 1;
 3146              		.loc 1 1616 0
 3147 00f8 0123     		movs	r3, #1
 3148 00fa FB60     		str	r3, [r7, #12]
 3149 00fc 07E0     		b	.L155
 3150              	.L161:
1617:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****         }
1618:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       }
1619:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       else if(day == 29)
 3151              		.loc 1 1619 0
 3152 00fe FB68     		ldr	r3, [r7, #12]
 3153 0100 1D2B     		cmp	r3, #29
 3154 0102 04D1     		bne	.L155
1620:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       {
1621:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****         month++;
 3155              		.loc 1 1621 0
 3156 0104 3B69     		ldr	r3, [r7, #16]
 3157 0106 0133     		adds	r3, r3, #1
 3158 0108 3B61     		str	r3, [r7, #16]
1622:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****         day = 1;
 3159              		.loc 1 1622 0
 3160 010a 0123     		movs	r3, #1
 3161 010c FB60     		str	r3, [r7, #12]
 3162              	.L155:
1561:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {
 3163              		.loc 1 1561 0 discriminator 2
 3164 010e BB68     		ldr	r3, [r7, #8]
 3165 0110 0133     		adds	r3, r3, #1
 3166 0112 BB60     		str	r3, [r7, #8]
 3167              	.L149:
1561:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {
 3168              		.loc 1 1561 0 is_stmt 0 discriminator 1
 3169 0114 BA68     		ldr	r2, [r7, #8]
 3170 0116 3B68     		ldr	r3, [r7]
 3171 0118 9A42     		cmp	r2, r3
 3172 011a 8AD3     		bcc	.L164
1623:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       }
1624:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     }
1625:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   }
1626:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
1627:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   /* Update year */
1628:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   hrtc->DateToUpdate.Year = year;
 3173              		.loc 1 1628 0 is_stmt 1
 3174 011c 7B69     		ldr	r3, [r7, #20]
 3175 011e DAB2     		uxtb	r2, r3
 3176 0120 7B68     		ldr	r3, [r7, #4]
 3177 0122 DA73     		strb	r2, [r3, #15]
1629:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
1630:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   /* Update day and month */
1631:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   hrtc->DateToUpdate.Month = month;
 3178              		.loc 1 1631 0
 3179 0124 3B69     		ldr	r3, [r7, #16]
 3180 0126 DAB2     		uxtb	r2, r3
 3181 0128 7B68     		ldr	r3, [r7, #4]
 3182 012a 5A73     		strb	r2, [r3, #13]
ARM GAS  /tmp/cccafUze.s 			page 85


1632:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   hrtc->DateToUpdate.Date = day;
 3183              		.loc 1 1632 0
 3184 012c FB68     		ldr	r3, [r7, #12]
 3185 012e DAB2     		uxtb	r2, r3
 3186 0130 7B68     		ldr	r3, [r7, #4]
 3187 0132 9A73     		strb	r2, [r3, #14]
1633:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
1634:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   /* Update day of the week */
1635:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   hrtc->DateToUpdate.WeekDay = RTC_WeekDayNum(year, month, day);
 3188              		.loc 1 1635 0
 3189 0134 3B69     		ldr	r3, [r7, #16]
 3190 0136 DAB2     		uxtb	r2, r3
 3191 0138 FB68     		ldr	r3, [r7, #12]
 3192 013a DBB2     		uxtb	r3, r3
 3193 013c 7869     		ldr	r0, [r7, #20]
 3194 013e 1146     		mov	r1, r2
 3195 0140 1A46     		mov	r2, r3
 3196 0142 FFF7FEFF 		bl	RTC_WeekDayNum
 3197 0146 0346     		mov	r3, r0
 3198 0148 1A46     		mov	r2, r3
 3199 014a 7B68     		ldr	r3, [r7, #4]
 3200 014c 1A73     		strb	r2, [r3, #12]
1636:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** }
 3201              		.loc 1 1636 0
 3202 014e 1837     		adds	r7, r7, #24
 3203              	.LCFI136:
 3204              		.cfi_def_cfa_offset 8
 3205 0150 BD46     		mov	sp, r7
 3206              	.LCFI137:
 3207              		.cfi_def_cfa_register 13
 3208              		@ sp needed
 3209 0152 80BD     		pop	{r7, pc}
 3210              		.cfi_endproc
 3211              	.LFE88:
 3213              		.section	.text.RTC_IsLeapYear,"ax",%progbits
 3214              		.align	2
 3215              		.thumb
 3216              		.thumb_func
 3218              	RTC_IsLeapYear:
 3219              	.LFB89:
1637:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
1638:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** /**
1639:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @brief  Check whether the passed year is Leap or not.
1640:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @param  nYear  year to check
1641:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @retval 1: leap year
1642:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   *         0: not leap year
1643:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   */
1644:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** static uint8_t RTC_IsLeapYear(uint16_t nYear)
1645:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** {
 3220              		.loc 1 1645 0
 3221              		.cfi_startproc
 3222              		@ args = 0, pretend = 0, frame = 8
 3223              		@ frame_needed = 1, uses_anonymous_args = 0
 3224              		@ link register save eliminated.
 3225 0000 80B4     		push	{r7}
 3226              	.LCFI138:
 3227              		.cfi_def_cfa_offset 4
ARM GAS  /tmp/cccafUze.s 			page 86


 3228              		.cfi_offset 7, -4
 3229 0002 83B0     		sub	sp, sp, #12
 3230              	.LCFI139:
 3231              		.cfi_def_cfa_offset 16
 3232 0004 00AF     		add	r7, sp, #0
 3233              	.LCFI140:
 3234              		.cfi_def_cfa_register 7
 3235 0006 0346     		mov	r3, r0
 3236 0008 FB80     		strh	r3, [r7, #6]	@ movhi
1646:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   if((nYear % 4) != 0) 
 3237              		.loc 1 1646 0
 3238 000a FB88     		ldrh	r3, [r7, #6]	@ movhi
 3239 000c 03F00303 		and	r3, r3, #3
 3240 0010 9BB2     		uxth	r3, r3
 3241 0012 002B     		cmp	r3, #0
 3242 0014 01D0     		beq	.L166
1647:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {
1648:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     return 0;
 3243              		.loc 1 1648 0
 3244 0016 0023     		movs	r3, #0
 3245 0018 1DE0     		b	.L167
 3246              	.L166:
1649:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   }
1650:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   
1651:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   if((nYear % 100) != 0) 
 3247              		.loc 1 1651 0
 3248 001a FB88     		ldrh	r3, [r7, #6]
 3249 001c 114A     		ldr	r2, .L170
 3250 001e A2FB0312 		umull	r1, r2, r2, r3
 3251 0022 5209     		lsrs	r2, r2, #5
 3252 0024 6421     		movs	r1, #100
 3253 0026 01FB02F2 		mul	r2, r1, r2
 3254 002a 9B1A     		subs	r3, r3, r2
 3255 002c 9BB2     		uxth	r3, r3
 3256 002e 002B     		cmp	r3, #0
 3257 0030 01D0     		beq	.L168
1652:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {
1653:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     return 1;
 3258              		.loc 1 1653 0
 3259 0032 0123     		movs	r3, #1
 3260 0034 0FE0     		b	.L167
 3261              	.L168:
1654:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   }
1655:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   
1656:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   if((nYear % 400) == 0)
 3262              		.loc 1 1656 0
 3263 0036 FB88     		ldrh	r3, [r7, #6]
 3264 0038 0A4A     		ldr	r2, .L170
 3265 003a A2FB0312 		umull	r1, r2, r2, r3
 3266 003e D209     		lsrs	r2, r2, #7
 3267 0040 4FF4C871 		mov	r1, #400
 3268 0044 01FB02F2 		mul	r2, r1, r2
 3269 0048 9B1A     		subs	r3, r3, r2
 3270 004a 9BB2     		uxth	r3, r3
 3271 004c 002B     		cmp	r3, #0
 3272 004e 01D1     		bne	.L169
1657:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {
ARM GAS  /tmp/cccafUze.s 			page 87


1658:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     return 1;
 3273              		.loc 1 1658 0
 3274 0050 0123     		movs	r3, #1
 3275 0052 00E0     		b	.L167
 3276              	.L169:
1659:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   }
1660:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   else
1661:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {
1662:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     return 0;
 3277              		.loc 1 1662 0
 3278 0054 0023     		movs	r3, #0
 3279              	.L167:
1663:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   }
1664:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** }
 3280              		.loc 1 1664 0
 3281 0056 1846     		mov	r0, r3
 3282 0058 0C37     		adds	r7, r7, #12
 3283              	.LCFI141:
 3284              		.cfi_def_cfa_offset 4
 3285 005a BD46     		mov	sp, r7
 3286              	.LCFI142:
 3287              		.cfi_def_cfa_register 13
 3288              		@ sp needed
 3289 005c 5DF8047B 		ldr	r7, [sp], #4
 3290              	.LCFI143:
 3291              		.cfi_restore 7
 3292              		.cfi_def_cfa_offset 0
 3293 0060 7047     		bx	lr
 3294              	.L171:
 3295 0062 00BF     		.align	2
 3296              	.L170:
 3297 0064 1F85EB51 		.word	1374389535
 3298              		.cfi_endproc
 3299              	.LFE89:
 3301              		.section	.text.RTC_WeekDayNum,"ax",%progbits
 3302              		.align	2
 3303              		.thumb
 3304              		.thumb_func
 3306              	RTC_WeekDayNum:
 3307              	.LFB90:
1665:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
1666:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** /**
1667:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @brief  Determines the week number, the day number and the week day number.
1668:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @param  nYear   year to check
1669:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @param  nMonth  Month to check
1670:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @param  nDay    Day to check
1671:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @note   Day is calculated with hypothesis that year > 2000
1672:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @retval Value which can take one of the following parameters:
1673:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   *         @arg RTC_WEEKDAY_MONDAY
1674:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   *         @arg RTC_WEEKDAY_TUESDAY
1675:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   *         @arg RTC_WEEKDAY_WEDNESDAY
1676:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   *         @arg RTC_WEEKDAY_THURSDAY
1677:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   *         @arg RTC_WEEKDAY_FRIDAY
1678:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   *         @arg RTC_WEEKDAY_SATURDAY
1679:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   *         @arg RTC_WEEKDAY_SUNDAY
1680:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   */
1681:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** static uint8_t RTC_WeekDayNum(uint32_t nYear, uint8_t nMonth, uint8_t nDay)
ARM GAS  /tmp/cccafUze.s 			page 88


1682:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** {
 3308              		.loc 1 1682 0
 3309              		.cfi_startproc
 3310              		@ args = 0, pretend = 0, frame = 16
 3311              		@ frame_needed = 1, uses_anonymous_args = 0
 3312              		@ link register save eliminated.
 3313 0000 80B4     		push	{r7}
 3314              	.LCFI144:
 3315              		.cfi_def_cfa_offset 4
 3316              		.cfi_offset 7, -4
 3317 0002 85B0     		sub	sp, sp, #20
 3318              	.LCFI145:
 3319              		.cfi_def_cfa_offset 24
 3320 0004 00AF     		add	r7, sp, #0
 3321              	.LCFI146:
 3322              		.cfi_def_cfa_register 7
 3323 0006 7860     		str	r0, [r7, #4]
 3324 0008 0B46     		mov	r3, r1
 3325 000a FB70     		strb	r3, [r7, #3]
 3326 000c 1346     		mov	r3, r2
 3327 000e BB70     		strb	r3, [r7, #2]
1683:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   uint32_t year = 0, weekday = 0;
 3328              		.loc 1 1683 0
 3329 0010 0023     		movs	r3, #0
 3330 0012 BB60     		str	r3, [r7, #8]
 3331 0014 0023     		movs	r3, #0
 3332 0016 FB60     		str	r3, [r7, #12]
1684:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
1685:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   year = 2000 + nYear;
 3333              		.loc 1 1685 0
 3334 0018 7B68     		ldr	r3, [r7, #4]
 3335 001a 03F5FA63 		add	r3, r3, #2000
 3336 001e BB60     		str	r3, [r7, #8]
1686:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   
1687:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   if(nMonth < 3)
 3337              		.loc 1 1687 0
 3338 0020 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 3339 0022 022B     		cmp	r3, #2
 3340 0024 30D8     		bhi	.L173
1688:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {
1689:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     /*D = { [(23 x month)/9] + day + 4 + year + [(year-1)/4] - [(year-1)/100] + [(year-1)/400] } mo
1690:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     weekday = (((23 * nMonth)/9) + nDay + 4 + year + ((year-1)/4) - ((year-1)/100) + ((year-1)/400)
 3341              		.loc 1 1690 0
 3342 0026 FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 3343 0028 1346     		mov	r3, r2
 3344 002a 5B00     		lsls	r3, r3, #1
 3345 002c 1344     		add	r3, r3, r2
 3346 002e DB00     		lsls	r3, r3, #3
 3347 0030 9B1A     		subs	r3, r3, r2
 3348 0032 304A     		ldr	r2, .L176
 3349 0034 82FB0312 		smull	r1, r2, r2, r3
 3350 0038 5210     		asrs	r2, r2, #1
 3351 003a DB17     		asrs	r3, r3, #31
 3352 003c D21A     		subs	r2, r2, r3
 3353 003e BB78     		ldrb	r3, [r7, #2]	@ zero_extendqisi2
 3354 0040 1344     		add	r3, r3, r2
 3355 0042 1A46     		mov	r2, r3
ARM GAS  /tmp/cccafUze.s 			page 89


 3356 0044 BB68     		ldr	r3, [r7, #8]
 3357 0046 1A44     		add	r2, r2, r3
 3358 0048 BB68     		ldr	r3, [r7, #8]
 3359 004a 013B     		subs	r3, r3, #1
 3360 004c 9B08     		lsrs	r3, r3, #2
 3361 004e 1A44     		add	r2, r2, r3
 3362 0050 BB68     		ldr	r3, [r7, #8]
 3363 0052 013B     		subs	r3, r3, #1
 3364 0054 2849     		ldr	r1, .L176+4
 3365 0056 A1FB0313 		umull	r1, r3, r1, r3
 3366 005a 5B09     		lsrs	r3, r3, #5
 3367 005c D21A     		subs	r2, r2, r3
 3368 005e BB68     		ldr	r3, [r7, #8]
 3369 0060 013B     		subs	r3, r3, #1
 3370 0062 2549     		ldr	r1, .L176+4
 3371 0064 A1FB0313 		umull	r1, r3, r1, r3
 3372 0068 DB09     		lsrs	r3, r3, #7
 3373 006a 1344     		add	r3, r3, r2
 3374 006c 1A1D     		adds	r2, r3, #4
 3375 006e 234B     		ldr	r3, .L176+8
 3376 0070 A2FB0301 		umull	r0, r1, r2, r3
 3377 0074 531A     		subs	r3, r2, r1
 3378 0076 5B08     		lsrs	r3, r3, #1
 3379 0078 0B44     		add	r3, r3, r1
 3380 007a 9908     		lsrs	r1, r3, #2
 3381 007c 0B46     		mov	r3, r1
 3382 007e DB00     		lsls	r3, r3, #3
 3383 0080 5B1A     		subs	r3, r3, r1
 3384 0082 D31A     		subs	r3, r2, r3
 3385 0084 FB60     		str	r3, [r7, #12]
 3386 0086 2CE0     		b	.L174
 3387              	.L173:
1691:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   }
1692:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   else
1693:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {
1694:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     /*D = { [(23 x month)/9] + day + 4 + year + [year/4] - [year/100] + [year/400] - 2 } mod 7*/
1695:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     weekday = (((23 * nMonth)/9) + nDay + 4 + year + (year/4) - (year/100) + (year/400) - 2 ) % 7; 
 3388              		.loc 1 1695 0
 3389 0088 FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 3390 008a 1346     		mov	r3, r2
 3391 008c 5B00     		lsls	r3, r3, #1
 3392 008e 1344     		add	r3, r3, r2
 3393 0090 DB00     		lsls	r3, r3, #3
 3394 0092 9B1A     		subs	r3, r3, r2
 3395 0094 174A     		ldr	r2, .L176
 3396 0096 82FB0312 		smull	r1, r2, r2, r3
 3397 009a 5210     		asrs	r2, r2, #1
 3398 009c DB17     		asrs	r3, r3, #31
 3399 009e D21A     		subs	r2, r2, r3
 3400 00a0 BB78     		ldrb	r3, [r7, #2]	@ zero_extendqisi2
 3401 00a2 1344     		add	r3, r3, r2
 3402 00a4 1A46     		mov	r2, r3
 3403 00a6 BB68     		ldr	r3, [r7, #8]
 3404 00a8 1A44     		add	r2, r2, r3
 3405 00aa BB68     		ldr	r3, [r7, #8]
 3406 00ac 9B08     		lsrs	r3, r3, #2
 3407 00ae 1A44     		add	r2, r2, r3
ARM GAS  /tmp/cccafUze.s 			page 90


 3408 00b0 BB68     		ldr	r3, [r7, #8]
 3409 00b2 1149     		ldr	r1, .L176+4
 3410 00b4 A1FB0313 		umull	r1, r3, r1, r3
 3411 00b8 5B09     		lsrs	r3, r3, #5
 3412 00ba D21A     		subs	r2, r2, r3
 3413 00bc BB68     		ldr	r3, [r7, #8]
 3414 00be 0E49     		ldr	r1, .L176+4
 3415 00c0 A1FB0313 		umull	r1, r3, r1, r3
 3416 00c4 DB09     		lsrs	r3, r3, #7
 3417 00c6 1344     		add	r3, r3, r2
 3418 00c8 9A1C     		adds	r2, r3, #2
 3419 00ca 0C4B     		ldr	r3, .L176+8
 3420 00cc A2FB0301 		umull	r0, r1, r2, r3
 3421 00d0 531A     		subs	r3, r2, r1
 3422 00d2 5B08     		lsrs	r3, r3, #1
 3423 00d4 0B44     		add	r3, r3, r1
 3424 00d6 9908     		lsrs	r1, r3, #2
 3425 00d8 0B46     		mov	r3, r1
 3426 00da DB00     		lsls	r3, r3, #3
 3427 00dc 5B1A     		subs	r3, r3, r1
 3428 00de D31A     		subs	r3, r2, r3
 3429 00e0 FB60     		str	r3, [r7, #12]
 3430              	.L174:
1696:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   }
1697:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
1698:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   return (uint8_t)weekday;
 3431              		.loc 1 1698 0
 3432 00e2 FB68     		ldr	r3, [r7, #12]
 3433 00e4 DBB2     		uxtb	r3, r3
1699:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** }
 3434              		.loc 1 1699 0
 3435 00e6 1846     		mov	r0, r3
 3436 00e8 1437     		adds	r7, r7, #20
 3437              	.LCFI147:
 3438              		.cfi_def_cfa_offset 4
 3439 00ea BD46     		mov	sp, r7
 3440              	.LCFI148:
 3441              		.cfi_def_cfa_register 13
 3442              		@ sp needed
 3443 00ec 5DF8047B 		ldr	r7, [sp], #4
 3444              	.LCFI149:
 3445              		.cfi_restore 7
 3446              		.cfi_def_cfa_offset 0
 3447 00f0 7047     		bx	lr
 3448              	.L177:
 3449 00f2 00BF     		.align	2
 3450              	.L176:
 3451 00f4 398EE338 		.word	954437177
 3452 00f8 1F85EB51 		.word	1374389535
 3453 00fc 25499224 		.word	613566757
 3454              		.cfi_endproc
 3455              	.LFE90:
 3457              		.text
 3458              	.Letext0:
 3459              		.file 2 "/usr/include/newlib/machine/_default_types.h"
 3460              		.file 3 "/usr/include/newlib/stdint.h"
 3461              		.file 4 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f103xb.h"
ARM GAS  /tmp/cccafUze.s 			page 91


 3462              		.file 5 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f1xx.h"
 3463              		.file 6 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_def.h"
 3464              		.file 7 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rtc.h"
 3465              		.file 8 "Drivers/CMSIS/Include/core_cm3.h"
ARM GAS  /tmp/cccafUze.s 			page 92


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32f1xx_hal_rtc.c
     /tmp/cccafUze.s:19     .text.HAL_RTC_Init:0000000000000000 $t
     /tmp/cccafUze.s:24     .text.HAL_RTC_Init:0000000000000000 HAL_RTC_Init
     /tmp/cccafUze.s:380    .text.HAL_RTC_MspInit:0000000000000000 HAL_RTC_MspInit
     /tmp/cccafUze.s:2299   .text.HAL_RTC_WaitForSynchro:0000000000000000 HAL_RTC_WaitForSynchro
     /tmp/cccafUze.s:2681   .text.RTC_EnterInitMode:0000000000000000 RTC_EnterInitMode
     /tmp/cccafUze.s:2755   .text.RTC_ExitInitMode:0000000000000000 RTC_ExitInitMode
     /tmp/cccafUze.s:230    .text.HAL_RTC_Init:0000000000000128 $d
     /tmp/cccafUze.s:235    .text.HAL_RTC_DeInit:0000000000000000 $t
     /tmp/cccafUze.s:240    .text.HAL_RTC_DeInit:0000000000000000 HAL_RTC_DeInit
     /tmp/cccafUze.s:420    .text.HAL_RTC_MspDeInit:0000000000000000 HAL_RTC_MspDeInit
     /tmp/cccafUze.s:375    .text.HAL_RTC_MspInit:0000000000000000 $t
     /tmp/cccafUze.s:415    .text.HAL_RTC_MspDeInit:0000000000000000 $t
     /tmp/cccafUze.s:455    .text.HAL_RTC_SetTime:0000000000000000 $t
     /tmp/cccafUze.s:460    .text.HAL_RTC_SetTime:0000000000000000 HAL_RTC_SetTime
     /tmp/cccafUze.s:2897   .text.RTC_Bcd2ToByte:0000000000000000 RTC_Bcd2ToByte
     /tmp/cccafUze.s:2471   .text.RTC_WriteTimeCounter:0000000000000000 RTC_WriteTimeCounter
     /tmp/cccafUze.s:2546   .text.RTC_ReadAlarmCounter:0000000000000000 RTC_ReadAlarmCounter
     /tmp/cccafUze.s:2606   .text.RTC_WriteAlarmCounter:0000000000000000 RTC_WriteAlarmCounter
     /tmp/cccafUze.s:665    .text.HAL_RTC_GetTime:0000000000000000 $t
     /tmp/cccafUze.s:670    .text.HAL_RTC_GetTime:0000000000000000 HAL_RTC_GetTime
     /tmp/cccafUze.s:2381   .text.RTC_ReadTimeCounter:0000000000000000 RTC_ReadTimeCounter
     /tmp/cccafUze.s:2959   .text.RTC_DateUpdate:0000000000000000 RTC_DateUpdate
     /tmp/cccafUze.s:2829   .text.RTC_ByteToBcd2:0000000000000000 RTC_ByteToBcd2
     /tmp/cccafUze.s:922    .text.HAL_RTC_GetTime:00000000000001a0 $d
     /tmp/cccafUze.s:930    .text.HAL_RTC_SetDate:0000000000000000 $t
     /tmp/cccafUze.s:935    .text.HAL_RTC_SetDate:0000000000000000 HAL_RTC_SetDate
     /tmp/cccafUze.s:3306   .text.RTC_WeekDayNum:0000000000000000 RTC_WeekDayNum
     /tmp/cccafUze.s:1166   .text.HAL_RTC_SetDate:0000000000000164 $d
     /tmp/cccafUze.s:1173   .text.HAL_RTC_GetDate:0000000000000000 $t
     /tmp/cccafUze.s:1178   .text.HAL_RTC_GetDate:0000000000000000 HAL_RTC_GetDate
     /tmp/cccafUze.s:1298   .text.HAL_RTC_SetAlarm:0000000000000000 $t
     /tmp/cccafUze.s:1303   .text.HAL_RTC_SetAlarm:0000000000000000 HAL_RTC_SetAlarm
     /tmp/cccafUze.s:1509   .text.HAL_RTC_SetAlarm_IT:0000000000000000 $t
     /tmp/cccafUze.s:1514   .text.HAL_RTC_SetAlarm_IT:0000000000000000 HAL_RTC_SetAlarm_IT
     /tmp/cccafUze.s:1744   .text.HAL_RTC_SetAlarm_IT:0000000000000160 $d
     /tmp/cccafUze.s:1749   .text.HAL_RTC_GetAlarm:0000000000000000 $t
     /tmp/cccafUze.s:1754   .text.HAL_RTC_GetAlarm:0000000000000000 HAL_RTC_GetAlarm
     /tmp/cccafUze.s:1892   .text.HAL_RTC_GetAlarm:00000000000000e0 $d
     /tmp/cccafUze.s:1899   .text.HAL_RTC_DeactivateAlarm:0000000000000000 $t
     /tmp/cccafUze.s:1904   .text.HAL_RTC_DeactivateAlarm:0000000000000000 HAL_RTC_DeactivateAlarm
     /tmp/cccafUze.s:2037   .text.HAL_RTC_DeactivateAlarm:00000000000000b4 $d
     /tmp/cccafUze.s:2042   .text.HAL_RTC_AlarmIRQHandler:0000000000000000 $t
     /tmp/cccafUze.s:2047   .text.HAL_RTC_AlarmIRQHandler:0000000000000000 HAL_RTC_AlarmIRQHandler
     /tmp/cccafUze.s:2118   .text.HAL_RTC_AlarmAEventCallback:0000000000000000 HAL_RTC_AlarmAEventCallback
     /tmp/cccafUze.s:2108   .text.HAL_RTC_AlarmIRQHandler:0000000000000048 $d
     /tmp/cccafUze.s:2113   .text.HAL_RTC_AlarmAEventCallback:0000000000000000 $t
     /tmp/cccafUze.s:2153   .text.HAL_RTC_PollForAlarmAEvent:0000000000000000 $t
     /tmp/cccafUze.s:2158   .text.HAL_RTC_PollForAlarmAEvent:0000000000000000 HAL_RTC_PollForAlarmAEvent
     /tmp/cccafUze.s:2249   .text.HAL_RTC_GetState:0000000000000000 $t
     /tmp/cccafUze.s:2254   .text.HAL_RTC_GetState:0000000000000000 HAL_RTC_GetState
     /tmp/cccafUze.s:2294   .text.HAL_RTC_WaitForSynchro:0000000000000000 $t
     /tmp/cccafUze.s:2377   .text.RTC_ReadTimeCounter:0000000000000000 $t
     /tmp/cccafUze.s:2467   .text.RTC_WriteTimeCounter:0000000000000000 $t
     /tmp/cccafUze.s:2542   .text.RTC_ReadAlarmCounter:0000000000000000 $t
     /tmp/cccafUze.s:2602   .text.RTC_WriteAlarmCounter:0000000000000000 $t
ARM GAS  /tmp/cccafUze.s 			page 93


     /tmp/cccafUze.s:2677   .text.RTC_EnterInitMode:0000000000000000 $t
     /tmp/cccafUze.s:2751   .text.RTC_ExitInitMode:0000000000000000 $t
     /tmp/cccafUze.s:2825   .text.RTC_ByteToBcd2:0000000000000000 $t
     /tmp/cccafUze.s:2893   .text.RTC_Bcd2ToByte:0000000000000000 $t
     /tmp/cccafUze.s:2955   .text.RTC_DateUpdate:0000000000000000 $t
     /tmp/cccafUze.s:3218   .text.RTC_IsLeapYear:0000000000000000 RTC_IsLeapYear
     /tmp/cccafUze.s:3214   .text.RTC_IsLeapYear:0000000000000000 $t
     /tmp/cccafUze.s:3297   .text.RTC_IsLeapYear:0000000000000064 $d
     /tmp/cccafUze.s:3302   .text.RTC_WeekDayNum:0000000000000000 $t
     /tmp/cccafUze.s:3451   .text.RTC_WeekDayNum:00000000000000f4 $d
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
HAL_RCCEx_GetPeriphCLKFreq
HAL_GetTick
