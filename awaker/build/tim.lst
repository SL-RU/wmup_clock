ARM GAS  /tmp/ccgzsIKl.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"tim.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.comm	htim2,60,4
  19              		.comm	htim4,60,4
  20              		.section	.text.MX_TIM2_Init,"ax",%progbits
  21              		.align	2
  22              		.global	MX_TIM2_Init
  23              		.thumb
  24              		.thumb_func
  26              	MX_TIM2_Init:
  27              	.LFB63:
  28              		.file 1 "Src/tim.c"
   1:Src/tim.c     **** /**
   2:Src/tim.c     ****   ******************************************************************************
   3:Src/tim.c     ****   * File Name          : TIM.c
   4:Src/tim.c     ****   * Description        : This file provides code for the configuration
   5:Src/tim.c     ****   *                      of the TIM instances.
   6:Src/tim.c     ****   ******************************************************************************
   7:Src/tim.c     ****   *
   8:Src/tim.c     ****   * COPYRIGHT(c) 2016 STMicroelectronics
   9:Src/tim.c     ****   *
  10:Src/tim.c     ****   * Redistribution and use in source and binary forms, with or without modification,
  11:Src/tim.c     ****   * are permitted provided that the following conditions are met:
  12:Src/tim.c     ****   *   1. Redistributions of source code must retain the above copyright notice,
  13:Src/tim.c     ****   *      this list of conditions and the following disclaimer.
  14:Src/tim.c     ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
  15:Src/tim.c     ****   *      this list of conditions and the following disclaimer in the documentation
  16:Src/tim.c     ****   *      and/or other materials provided with the distribution.
  17:Src/tim.c     ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
  18:Src/tim.c     ****   *      may be used to endorse or promote products derived from this software
  19:Src/tim.c     ****   *      without specific prior written permission.
  20:Src/tim.c     ****   *
  21:Src/tim.c     ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  22:Src/tim.c     ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  23:Src/tim.c     ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  24:Src/tim.c     ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  25:Src/tim.c     ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  26:Src/tim.c     ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  27:Src/tim.c     ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  28:Src/tim.c     ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  29:Src/tim.c     ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  30:Src/tim.c     ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
ARM GAS  /tmp/ccgzsIKl.s 			page 2


  31:Src/tim.c     ****   *
  32:Src/tim.c     ****   ******************************************************************************
  33:Src/tim.c     ****   */
  34:Src/tim.c     **** 
  35:Src/tim.c     **** /* Includes ------------------------------------------------------------------*/
  36:Src/tim.c     **** #include "tim.h"
  37:Src/tim.c     **** 
  38:Src/tim.c     **** #include "gpio.h"
  39:Src/tim.c     **** 
  40:Src/tim.c     **** /* USER CODE BEGIN 0 */
  41:Src/tim.c     **** 
  42:Src/tim.c     **** /* USER CODE END 0 */
  43:Src/tim.c     **** 
  44:Src/tim.c     **** TIM_HandleTypeDef htim2;
  45:Src/tim.c     **** TIM_HandleTypeDef htim4;
  46:Src/tim.c     **** 
  47:Src/tim.c     **** /* TIM2 init function */
  48:Src/tim.c     **** void MX_TIM2_Init(void)
  49:Src/tim.c     **** {
  29              		.loc 1 49 0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 24
  32              		@ frame_needed = 1, uses_anonymous_args = 0
  33 0000 80B5     		push	{r7, lr}
  34              	.LCFI0:
  35              		.cfi_def_cfa_offset 8
  36              		.cfi_offset 7, -8
  37              		.cfi_offset 14, -4
  38 0002 86B0     		sub	sp, sp, #24
  39              	.LCFI1:
  40              		.cfi_def_cfa_offset 32
  41 0004 00AF     		add	r7, sp, #0
  42              	.LCFI2:
  43              		.cfi_def_cfa_register 7
  50:Src/tim.c     ****   TIM_ClockConfigTypeDef sClockSourceConfig;
  51:Src/tim.c     ****   TIM_MasterConfigTypeDef sMasterConfig;
  52:Src/tim.c     **** 
  53:Src/tim.c     ****   htim2.Instance = TIM2;
  44              		.loc 1 53 0
  45 0006 1C4B     		ldr	r3, .L5
  46 0008 4FF08042 		mov	r2, #1073741824
  47 000c 1A60     		str	r2, [r3]
  54:Src/tim.c     ****   htim2.Init.Prescaler = 640;
  48              		.loc 1 54 0
  49 000e 1A4B     		ldr	r3, .L5
  50 0010 4FF42072 		mov	r2, #640
  51 0014 5A60     		str	r2, [r3, #4]
  55:Src/tim.c     ****   htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
  52              		.loc 1 55 0
  53 0016 184B     		ldr	r3, .L5
  54 0018 0022     		movs	r2, #0
  55 001a 9A60     		str	r2, [r3, #8]
  56:Src/tim.c     ****   htim2.Init.Period = 0;
  56              		.loc 1 56 0
  57 001c 164B     		ldr	r3, .L5
  58 001e 0022     		movs	r2, #0
  59 0020 DA60     		str	r2, [r3, #12]
ARM GAS  /tmp/ccgzsIKl.s 			page 3


  57:Src/tim.c     ****   htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
  60              		.loc 1 57 0
  61 0022 154B     		ldr	r3, .L5
  62 0024 0022     		movs	r2, #0
  63 0026 1A61     		str	r2, [r3, #16]
  58:Src/tim.c     ****   if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
  64              		.loc 1 58 0
  65 0028 1348     		ldr	r0, .L5
  66 002a FFF7FEFF 		bl	HAL_TIM_Base_Init
  67 002e 0346     		mov	r3, r0
  68 0030 002B     		cmp	r3, #0
  69 0032 01D0     		beq	.L2
  59:Src/tim.c     ****   {
  60:Src/tim.c     ****     Error_Handler();
  70              		.loc 1 60 0
  71 0034 FFF7FEFF 		bl	Error_Handler
  72              	.L2:
  61:Src/tim.c     ****   }
  62:Src/tim.c     **** 
  63:Src/tim.c     ****   sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
  73              		.loc 1 63 0
  74 0038 4FF48053 		mov	r3, #4096
  75 003c BB60     		str	r3, [r7, #8]
  64:Src/tim.c     ****   if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
  76              		.loc 1 64 0
  77 003e 07F10803 		add	r3, r7, #8
  78 0042 0D48     		ldr	r0, .L5
  79 0044 1946     		mov	r1, r3
  80 0046 FFF7FEFF 		bl	HAL_TIM_ConfigClockSource
  81 004a 0346     		mov	r3, r0
  82 004c 002B     		cmp	r3, #0
  83 004e 01D0     		beq	.L3
  65:Src/tim.c     ****   {
  66:Src/tim.c     ****     Error_Handler();
  84              		.loc 1 66 0
  85 0050 FFF7FEFF 		bl	Error_Handler
  86              	.L3:
  67:Src/tim.c     ****   }
  68:Src/tim.c     **** 
  69:Src/tim.c     ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
  87              		.loc 1 69 0
  88 0054 0023     		movs	r3, #0
  89 0056 3B60     		str	r3, [r7]
  70:Src/tim.c     ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
  90              		.loc 1 70 0
  91 0058 0023     		movs	r3, #0
  92 005a 7B60     		str	r3, [r7, #4]
  71:Src/tim.c     ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
  93              		.loc 1 71 0
  94 005c 3B46     		mov	r3, r7
  95 005e 0648     		ldr	r0, .L5
  96 0060 1946     		mov	r1, r3
  97 0062 FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
  98 0066 0346     		mov	r3, r0
  99 0068 002B     		cmp	r3, #0
 100 006a 01D0     		beq	.L1
  72:Src/tim.c     ****   {
ARM GAS  /tmp/ccgzsIKl.s 			page 4


  73:Src/tim.c     ****     Error_Handler();
 101              		.loc 1 73 0
 102 006c FFF7FEFF 		bl	Error_Handler
 103              	.L1:
  74:Src/tim.c     ****   }
  75:Src/tim.c     **** 
  76:Src/tim.c     **** }
 104              		.loc 1 76 0
 105 0070 1837     		adds	r7, r7, #24
 106              	.LCFI3:
 107              		.cfi_def_cfa_offset 8
 108 0072 BD46     		mov	sp, r7
 109              	.LCFI4:
 110              		.cfi_def_cfa_register 13
 111              		@ sp needed
 112 0074 80BD     		pop	{r7, pc}
 113              	.L6:
 114 0076 00BF     		.align	2
 115              	.L5:
 116 0078 00000000 		.word	htim2
 117              		.cfi_endproc
 118              	.LFE63:
 120              		.section	.text.MX_TIM4_Init,"ax",%progbits
 121              		.align	2
 122              		.global	MX_TIM4_Init
 123              		.thumb
 124              		.thumb_func
 126              	MX_TIM4_Init:
 127              	.LFB64:
  77:Src/tim.c     **** /* TIM4 init function */
  78:Src/tim.c     **** void MX_TIM4_Init(void)
  79:Src/tim.c     **** {
 128              		.loc 1 79 0
 129              		.cfi_startproc
 130              		@ args = 0, pretend = 0, frame = 48
 131              		@ frame_needed = 1, uses_anonymous_args = 0
 132 0000 80B5     		push	{r7, lr}
 133              	.LCFI5:
 134              		.cfi_def_cfa_offset 8
 135              		.cfi_offset 7, -8
 136              		.cfi_offset 14, -4
 137 0002 8CB0     		sub	sp, sp, #48
 138              	.LCFI6:
 139              		.cfi_def_cfa_offset 56
 140 0004 00AF     		add	r7, sp, #0
 141              	.LCFI7:
 142              		.cfi_def_cfa_register 7
  80:Src/tim.c     ****   TIM_Encoder_InitTypeDef sConfig;
  81:Src/tim.c     ****   TIM_MasterConfigTypeDef sMasterConfig;
  82:Src/tim.c     **** 
  83:Src/tim.c     ****   htim4.Instance = TIM4;
 143              		.loc 1 83 0
 144 0006 1E4B     		ldr	r3, .L10
 145 0008 1E4A     		ldr	r2, .L10+4
 146 000a 1A60     		str	r2, [r3]
  84:Src/tim.c     ****   htim4.Init.Prescaler = 0;
 147              		.loc 1 84 0
ARM GAS  /tmp/ccgzsIKl.s 			page 5


 148 000c 1C4B     		ldr	r3, .L10
 149 000e 0022     		movs	r2, #0
 150 0010 5A60     		str	r2, [r3, #4]
  85:Src/tim.c     ****   htim4.Init.CounterMode = TIM_COUNTERMODE_UP;
 151              		.loc 1 85 0
 152 0012 1B4B     		ldr	r3, .L10
 153 0014 0022     		movs	r2, #0
 154 0016 9A60     		str	r2, [r3, #8]
  86:Src/tim.c     ****   htim4.Init.Period = 255;
 155              		.loc 1 86 0
 156 0018 194B     		ldr	r3, .L10
 157 001a FF22     		movs	r2, #255
 158 001c DA60     		str	r2, [r3, #12]
  87:Src/tim.c     ****   htim4.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 159              		.loc 1 87 0
 160 001e 184B     		ldr	r3, .L10
 161 0020 0022     		movs	r2, #0
 162 0022 1A61     		str	r2, [r3, #16]
  88:Src/tim.c     ****   sConfig.EncoderMode = TIM_ENCODERMODE_TI2;
 163              		.loc 1 88 0
 164 0024 0223     		movs	r3, #2
 165 0026 FB60     		str	r3, [r7, #12]
  89:Src/tim.c     ****   sConfig.IC1Polarity = TIM_ICPOLARITY_RISING;
 166              		.loc 1 89 0
 167 0028 0023     		movs	r3, #0
 168 002a 3B61     		str	r3, [r7, #16]
  90:Src/tim.c     ****   sConfig.IC1Selection = TIM_ICSELECTION_DIRECTTI;
 169              		.loc 1 90 0
 170 002c 0123     		movs	r3, #1
 171 002e 7B61     		str	r3, [r7, #20]
  91:Src/tim.c     ****   sConfig.IC1Prescaler = TIM_ICPSC_DIV1;
 172              		.loc 1 91 0
 173 0030 0023     		movs	r3, #0
 174 0032 BB61     		str	r3, [r7, #24]
  92:Src/tim.c     ****   sConfig.IC1Filter = 0;
 175              		.loc 1 92 0
 176 0034 0023     		movs	r3, #0
 177 0036 FB61     		str	r3, [r7, #28]
  93:Src/tim.c     ****   sConfig.IC2Polarity = TIM_ICPOLARITY_RISING;
 178              		.loc 1 93 0
 179 0038 0023     		movs	r3, #0
 180 003a 3B62     		str	r3, [r7, #32]
  94:Src/tim.c     ****   sConfig.IC2Selection = TIM_ICSELECTION_DIRECTTI;
 181              		.loc 1 94 0
 182 003c 0123     		movs	r3, #1
 183 003e 7B62     		str	r3, [r7, #36]
  95:Src/tim.c     ****   sConfig.IC2Prescaler = TIM_ICPSC_DIV1;
 184              		.loc 1 95 0
 185 0040 0023     		movs	r3, #0
 186 0042 BB62     		str	r3, [r7, #40]
  96:Src/tim.c     ****   sConfig.IC2Filter = 0;
 187              		.loc 1 96 0
 188 0044 0023     		movs	r3, #0
 189 0046 FB62     		str	r3, [r7, #44]
  97:Src/tim.c     ****   if (HAL_TIM_Encoder_Init(&htim4, &sConfig) != HAL_OK)
 190              		.loc 1 97 0
 191 0048 07F10C03 		add	r3, r7, #12
ARM GAS  /tmp/ccgzsIKl.s 			page 6


 192 004c 0C48     		ldr	r0, .L10
 193 004e 1946     		mov	r1, r3
 194 0050 FFF7FEFF 		bl	HAL_TIM_Encoder_Init
 195 0054 0346     		mov	r3, r0
 196 0056 002B     		cmp	r3, #0
 197 0058 01D0     		beq	.L8
  98:Src/tim.c     ****   {
  99:Src/tim.c     ****     Error_Handler();
 198              		.loc 1 99 0
 199 005a FFF7FEFF 		bl	Error_Handler
 200              	.L8:
 100:Src/tim.c     ****   }
 101:Src/tim.c     **** 
 102:Src/tim.c     ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 201              		.loc 1 102 0
 202 005e 0023     		movs	r3, #0
 203 0060 7B60     		str	r3, [r7, #4]
 103:Src/tim.c     ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 204              		.loc 1 103 0
 205 0062 0023     		movs	r3, #0
 206 0064 BB60     		str	r3, [r7, #8]
 104:Src/tim.c     ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim4, &sMasterConfig) != HAL_OK)
 207              		.loc 1 104 0
 208 0066 3B1D     		adds	r3, r7, #4
 209 0068 0548     		ldr	r0, .L10
 210 006a 1946     		mov	r1, r3
 211 006c FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 212 0070 0346     		mov	r3, r0
 213 0072 002B     		cmp	r3, #0
 214 0074 01D0     		beq	.L7
 105:Src/tim.c     ****   {
 106:Src/tim.c     ****     Error_Handler();
 215              		.loc 1 106 0
 216 0076 FFF7FEFF 		bl	Error_Handler
 217              	.L7:
 107:Src/tim.c     ****   }
 108:Src/tim.c     **** 
 109:Src/tim.c     **** }
 218              		.loc 1 109 0
 219 007a 3037     		adds	r7, r7, #48
 220              	.LCFI8:
 221              		.cfi_def_cfa_offset 8
 222 007c BD46     		mov	sp, r7
 223              	.LCFI9:
 224              		.cfi_def_cfa_register 13
 225              		@ sp needed
 226 007e 80BD     		pop	{r7, pc}
 227              	.L11:
 228              		.align	2
 229              	.L10:
 230 0080 00000000 		.word	htim4
 231 0084 00080040 		.word	1073743872
 232              		.cfi_endproc
 233              	.LFE64:
 235              		.section	.text.HAL_TIM_Base_MspInit,"ax",%progbits
 236              		.align	2
 237              		.global	HAL_TIM_Base_MspInit
ARM GAS  /tmp/ccgzsIKl.s 			page 7


 238              		.thumb
 239              		.thumb_func
 241              	HAL_TIM_Base_MspInit:
 242              	.LFB65:
 110:Src/tim.c     **** 
 111:Src/tim.c     **** void HAL_TIM_Base_MspInit(TIM_HandleTypeDef* tim_baseHandle)
 112:Src/tim.c     **** {
 243              		.loc 1 112 0
 244              		.cfi_startproc
 245              		@ args = 0, pretend = 0, frame = 16
 246              		@ frame_needed = 1, uses_anonymous_args = 0
 247 0000 80B5     		push	{r7, lr}
 248              	.LCFI10:
 249              		.cfi_def_cfa_offset 8
 250              		.cfi_offset 7, -8
 251              		.cfi_offset 14, -4
 252 0002 84B0     		sub	sp, sp, #16
 253              	.LCFI11:
 254              		.cfi_def_cfa_offset 24
 255 0004 00AF     		add	r7, sp, #0
 256              	.LCFI12:
 257              		.cfi_def_cfa_register 7
 258 0006 7860     		str	r0, [r7, #4]
 113:Src/tim.c     **** 
 114:Src/tim.c     ****   if(tim_baseHandle->Instance==TIM2)
 259              		.loc 1 114 0
 260 0008 7B68     		ldr	r3, [r7, #4]
 261 000a 1B68     		ldr	r3, [r3]
 262 000c B3F1804F 		cmp	r3, #1073741824
 263 0010 13D1     		bne	.L12
 264              	.LBB2:
 115:Src/tim.c     ****   {
 116:Src/tim.c     ****   /* USER CODE BEGIN TIM2_MspInit 0 */
 117:Src/tim.c     **** 
 118:Src/tim.c     ****   /* USER CODE END TIM2_MspInit 0 */
 119:Src/tim.c     ****     /* Peripheral clock enable */
 120:Src/tim.c     ****     __HAL_RCC_TIM2_CLK_ENABLE();
 265              		.loc 1 120 0
 266 0012 0B4A     		ldr	r2, .L14
 267 0014 0A4B     		ldr	r3, .L14
 268 0016 DB69     		ldr	r3, [r3, #28]
 269 0018 43F00103 		orr	r3, r3, #1
 270 001c D361     		str	r3, [r2, #28]
 271 001e 084B     		ldr	r3, .L14
 272 0020 DB69     		ldr	r3, [r3, #28]
 273 0022 03F00103 		and	r3, r3, #1
 274 0026 FB60     		str	r3, [r7, #12]
 275 0028 FB68     		ldr	r3, [r7, #12]
 276              	.LBE2:
 121:Src/tim.c     **** 
 122:Src/tim.c     ****     /* Peripheral interrupt init */
 123:Src/tim.c     ****     HAL_NVIC_SetPriority(TIM2_IRQn, 0, 0);
 277              		.loc 1 123 0
 278 002a 1C20     		movs	r0, #28
 279 002c 0021     		movs	r1, #0
 280 002e 0022     		movs	r2, #0
 281 0030 FFF7FEFF 		bl	HAL_NVIC_SetPriority
ARM GAS  /tmp/ccgzsIKl.s 			page 8


 124:Src/tim.c     ****     HAL_NVIC_EnableIRQ(TIM2_IRQn);
 282              		.loc 1 124 0
 283 0034 1C20     		movs	r0, #28
 284 0036 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 285              	.L12:
 125:Src/tim.c     ****   /* USER CODE BEGIN TIM2_MspInit 1 */
 126:Src/tim.c     **** 
 127:Src/tim.c     ****   /* USER CODE END TIM2_MspInit 1 */
 128:Src/tim.c     ****   }
 129:Src/tim.c     **** }
 286              		.loc 1 129 0
 287 003a 1037     		adds	r7, r7, #16
 288              	.LCFI13:
 289              		.cfi_def_cfa_offset 8
 290 003c BD46     		mov	sp, r7
 291              	.LCFI14:
 292              		.cfi_def_cfa_register 13
 293              		@ sp needed
 294 003e 80BD     		pop	{r7, pc}
 295              	.L15:
 296              		.align	2
 297              	.L14:
 298 0040 00100240 		.word	1073876992
 299              		.cfi_endproc
 300              	.LFE65:
 302              		.section	.text.HAL_TIM_Encoder_MspInit,"ax",%progbits
 303              		.align	2
 304              		.global	HAL_TIM_Encoder_MspInit
 305              		.thumb
 306              		.thumb_func
 308              	HAL_TIM_Encoder_MspInit:
 309              	.LFB66:
 130:Src/tim.c     **** 
 131:Src/tim.c     **** void HAL_TIM_Encoder_MspInit(TIM_HandleTypeDef* tim_encoderHandle)
 132:Src/tim.c     **** {
 310              		.loc 1 132 0
 311              		.cfi_startproc
 312              		@ args = 0, pretend = 0, frame = 32
 313              		@ frame_needed = 1, uses_anonymous_args = 0
 314 0000 80B5     		push	{r7, lr}
 315              	.LCFI15:
 316              		.cfi_def_cfa_offset 8
 317              		.cfi_offset 7, -8
 318              		.cfi_offset 14, -4
 319 0002 88B0     		sub	sp, sp, #32
 320              	.LCFI16:
 321              		.cfi_def_cfa_offset 40
 322 0004 00AF     		add	r7, sp, #0
 323              	.LCFI17:
 324              		.cfi_def_cfa_register 7
 325 0006 7860     		str	r0, [r7, #4]
 133:Src/tim.c     **** 
 134:Src/tim.c     ****   GPIO_InitTypeDef GPIO_InitStruct;
 135:Src/tim.c     ****   if(tim_encoderHandle->Instance==TIM4)
 326              		.loc 1 135 0
 327 0008 7B68     		ldr	r3, [r7, #4]
 328 000a 1B68     		ldr	r3, [r3]
ARM GAS  /tmp/ccgzsIKl.s 			page 9


 329 000c 0E4A     		ldr	r2, .L18
 330 000e 9342     		cmp	r3, r2
 331 0010 17D1     		bne	.L16
 332              	.LBB3:
 136:Src/tim.c     ****   {
 137:Src/tim.c     ****   /* USER CODE BEGIN TIM4_MspInit 0 */
 138:Src/tim.c     **** 
 139:Src/tim.c     ****   /* USER CODE END TIM4_MspInit 0 */
 140:Src/tim.c     ****     /* Peripheral clock enable */
 141:Src/tim.c     ****     __HAL_RCC_TIM4_CLK_ENABLE();
 333              		.loc 1 141 0
 334 0012 0E4A     		ldr	r2, .L18+4
 335 0014 0D4B     		ldr	r3, .L18+4
 336 0016 DB69     		ldr	r3, [r3, #28]
 337 0018 43F00403 		orr	r3, r3, #4
 338 001c D361     		str	r3, [r2, #28]
 339 001e 0B4B     		ldr	r3, .L18+4
 340 0020 DB69     		ldr	r3, [r3, #28]
 341 0022 03F00403 		and	r3, r3, #4
 342 0026 FB60     		str	r3, [r7, #12]
 343 0028 FB68     		ldr	r3, [r7, #12]
 344              	.LBE3:
 142:Src/tim.c     ****   
 143:Src/tim.c     ****     /**TIM4 GPIO Configuration    
 144:Src/tim.c     ****     PB6     ------> TIM4_CH1
 145:Src/tim.c     ****     PB7     ------> TIM4_CH2 
 146:Src/tim.c     ****     */
 147:Src/tim.c     ****     GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7;
 345              		.loc 1 147 0
 346 002a C023     		movs	r3, #192
 347 002c 3B61     		str	r3, [r7, #16]
 148:Src/tim.c     ****     GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 348              		.loc 1 148 0
 349 002e 0023     		movs	r3, #0
 350 0030 7B61     		str	r3, [r7, #20]
 149:Src/tim.c     ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 351              		.loc 1 149 0
 352 0032 0023     		movs	r3, #0
 353 0034 BB61     		str	r3, [r7, #24]
 150:Src/tim.c     ****     HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 354              		.loc 1 150 0
 355 0036 07F11003 		add	r3, r7, #16
 356 003a 0548     		ldr	r0, .L18+8
 357 003c 1946     		mov	r1, r3
 358 003e FFF7FEFF 		bl	HAL_GPIO_Init
 359              	.L16:
 151:Src/tim.c     **** 
 152:Src/tim.c     ****   /* USER CODE BEGIN TIM4_MspInit 1 */
 153:Src/tim.c     **** 
 154:Src/tim.c     ****   /* USER CODE END TIM4_MspInit 1 */
 155:Src/tim.c     ****   }
 156:Src/tim.c     **** }
 360              		.loc 1 156 0
 361 0042 2037     		adds	r7, r7, #32
 362              	.LCFI18:
 363              		.cfi_def_cfa_offset 8
 364 0044 BD46     		mov	sp, r7
ARM GAS  /tmp/ccgzsIKl.s 			page 10


 365              	.LCFI19:
 366              		.cfi_def_cfa_register 13
 367              		@ sp needed
 368 0046 80BD     		pop	{r7, pc}
 369              	.L19:
 370              		.align	2
 371              	.L18:
 372 0048 00080040 		.word	1073743872
 373 004c 00100240 		.word	1073876992
 374 0050 000C0140 		.word	1073810432
 375              		.cfi_endproc
 376              	.LFE66:
 378              		.section	.text.HAL_TIM_Base_MspDeInit,"ax",%progbits
 379              		.align	2
 380              		.global	HAL_TIM_Base_MspDeInit
 381              		.thumb
 382              		.thumb_func
 384              	HAL_TIM_Base_MspDeInit:
 385              	.LFB67:
 157:Src/tim.c     **** 
 158:Src/tim.c     **** void HAL_TIM_Base_MspDeInit(TIM_HandleTypeDef* tim_baseHandle)
 159:Src/tim.c     **** {
 386              		.loc 1 159 0
 387              		.cfi_startproc
 388              		@ args = 0, pretend = 0, frame = 8
 389              		@ frame_needed = 1, uses_anonymous_args = 0
 390 0000 80B5     		push	{r7, lr}
 391              	.LCFI20:
 392              		.cfi_def_cfa_offset 8
 393              		.cfi_offset 7, -8
 394              		.cfi_offset 14, -4
 395 0002 82B0     		sub	sp, sp, #8
 396              	.LCFI21:
 397              		.cfi_def_cfa_offset 16
 398 0004 00AF     		add	r7, sp, #0
 399              	.LCFI22:
 400              		.cfi_def_cfa_register 7
 401 0006 7860     		str	r0, [r7, #4]
 160:Src/tim.c     **** 
 161:Src/tim.c     ****   if(tim_baseHandle->Instance==TIM2)
 402              		.loc 1 161 0
 403 0008 7B68     		ldr	r3, [r7, #4]
 404 000a 1B68     		ldr	r3, [r3]
 405 000c B3F1804F 		cmp	r3, #1073741824
 406 0010 08D1     		bne	.L20
 162:Src/tim.c     ****   {
 163:Src/tim.c     ****   /* USER CODE BEGIN TIM2_MspDeInit 0 */
 164:Src/tim.c     **** 
 165:Src/tim.c     ****   /* USER CODE END TIM2_MspDeInit 0 */
 166:Src/tim.c     ****     /* Peripheral clock disable */
 167:Src/tim.c     ****     __HAL_RCC_TIM2_CLK_DISABLE();
 407              		.loc 1 167 0
 408 0012 064A     		ldr	r2, .L22
 409 0014 054B     		ldr	r3, .L22
 410 0016 DB69     		ldr	r3, [r3, #28]
 411 0018 23F00103 		bic	r3, r3, #1
 412 001c D361     		str	r3, [r2, #28]
ARM GAS  /tmp/ccgzsIKl.s 			page 11


 168:Src/tim.c     **** 
 169:Src/tim.c     ****     /* Peripheral interrupt Deinit*/
 170:Src/tim.c     ****     HAL_NVIC_DisableIRQ(TIM2_IRQn);
 413              		.loc 1 170 0
 414 001e 1C20     		movs	r0, #28
 415 0020 FFF7FEFF 		bl	HAL_NVIC_DisableIRQ
 416              	.L20:
 171:Src/tim.c     **** 
 172:Src/tim.c     ****   }
 173:Src/tim.c     ****   /* USER CODE BEGIN TIM2_MspDeInit 1 */
 174:Src/tim.c     **** 
 175:Src/tim.c     ****   /* USER CODE END TIM2_MspDeInit 1 */
 176:Src/tim.c     **** }
 417              		.loc 1 176 0
 418 0024 0837     		adds	r7, r7, #8
 419              	.LCFI23:
 420              		.cfi_def_cfa_offset 8
 421 0026 BD46     		mov	sp, r7
 422              	.LCFI24:
 423              		.cfi_def_cfa_register 13
 424              		@ sp needed
 425 0028 80BD     		pop	{r7, pc}
 426              	.L23:
 427 002a 00BF     		.align	2
 428              	.L22:
 429 002c 00100240 		.word	1073876992
 430              		.cfi_endproc
 431              	.LFE67:
 433              		.section	.text.HAL_TIM_Encoder_MspDeInit,"ax",%progbits
 434              		.align	2
 435              		.global	HAL_TIM_Encoder_MspDeInit
 436              		.thumb
 437              		.thumb_func
 439              	HAL_TIM_Encoder_MspDeInit:
 440              	.LFB68:
 177:Src/tim.c     **** 
 178:Src/tim.c     **** void HAL_TIM_Encoder_MspDeInit(TIM_HandleTypeDef* tim_encoderHandle)
 179:Src/tim.c     **** {
 441              		.loc 1 179 0
 442              		.cfi_startproc
 443              		@ args = 0, pretend = 0, frame = 8
 444              		@ frame_needed = 1, uses_anonymous_args = 0
 445 0000 80B5     		push	{r7, lr}
 446              	.LCFI25:
 447              		.cfi_def_cfa_offset 8
 448              		.cfi_offset 7, -8
 449              		.cfi_offset 14, -4
 450 0002 82B0     		sub	sp, sp, #8
 451              	.LCFI26:
 452              		.cfi_def_cfa_offset 16
 453 0004 00AF     		add	r7, sp, #0
 454              	.LCFI27:
 455              		.cfi_def_cfa_register 7
 456 0006 7860     		str	r0, [r7, #4]
 180:Src/tim.c     **** 
 181:Src/tim.c     ****   if(tim_encoderHandle->Instance==TIM4)
 457              		.loc 1 181 0
ARM GAS  /tmp/ccgzsIKl.s 			page 12


 458 0008 7B68     		ldr	r3, [r7, #4]
 459 000a 1B68     		ldr	r3, [r3]
 460 000c 074A     		ldr	r2, .L26
 461 000e 9342     		cmp	r3, r2
 462 0010 09D1     		bne	.L24
 182:Src/tim.c     ****   {
 183:Src/tim.c     ****   /* USER CODE BEGIN TIM4_MspDeInit 0 */
 184:Src/tim.c     **** 
 185:Src/tim.c     ****   /* USER CODE END TIM4_MspDeInit 0 */
 186:Src/tim.c     ****     /* Peripheral clock disable */
 187:Src/tim.c     ****     __HAL_RCC_TIM4_CLK_DISABLE();
 463              		.loc 1 187 0
 464 0012 074A     		ldr	r2, .L26+4
 465 0014 064B     		ldr	r3, .L26+4
 466 0016 DB69     		ldr	r3, [r3, #28]
 467 0018 23F00403 		bic	r3, r3, #4
 468 001c D361     		str	r3, [r2, #28]
 188:Src/tim.c     ****   
 189:Src/tim.c     ****     /**TIM4 GPIO Configuration    
 190:Src/tim.c     ****     PB6     ------> TIM4_CH1
 191:Src/tim.c     ****     PB7     ------> TIM4_CH2 
 192:Src/tim.c     ****     */
 193:Src/tim.c     ****     HAL_GPIO_DeInit(GPIOB, GPIO_PIN_6|GPIO_PIN_7);
 469              		.loc 1 193 0
 470 001e 0548     		ldr	r0, .L26+8
 471 0020 C021     		movs	r1, #192
 472 0022 FFF7FEFF 		bl	HAL_GPIO_DeInit
 473              	.L24:
 194:Src/tim.c     **** 
 195:Src/tim.c     ****   }
 196:Src/tim.c     ****   /* USER CODE BEGIN TIM4_MspDeInit 1 */
 197:Src/tim.c     **** 
 198:Src/tim.c     ****   /* USER CODE END TIM4_MspDeInit 1 */
 199:Src/tim.c     **** } 
 474              		.loc 1 199 0
 475 0026 0837     		adds	r7, r7, #8
 476              	.LCFI28:
 477              		.cfi_def_cfa_offset 8
 478 0028 BD46     		mov	sp, r7
 479              	.LCFI29:
 480              		.cfi_def_cfa_register 13
 481              		@ sp needed
 482 002a 80BD     		pop	{r7, pc}
 483              	.L27:
 484              		.align	2
 485              	.L26:
 486 002c 00080040 		.word	1073743872
 487 0030 00100240 		.word	1073876992
 488 0034 000C0140 		.word	1073810432
 489              		.cfi_endproc
 490              	.LFE68:
 492              		.text
 493              	.Letext0:
 494              		.file 2 "/usr/include/newlib/machine/_default_types.h"
 495              		.file 3 "/usr/include/newlib/stdint.h"
 496              		.file 4 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f103xb.h"
 497              		.file 5 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_def.h"
ARM GAS  /tmp/ccgzsIKl.s 			page 13


 498              		.file 6 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_gpio.h"
 499              		.file 7 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_dma.h"
 500              		.file 8 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_tim.h"
 501              		.file 9 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_tim_ex.h"
 502              		.file 10 "Drivers/CMSIS/Include/core_cm3.h"
ARM GAS  /tmp/ccgzsIKl.s 			page 14


DEFINED SYMBOLS
                            *ABS*:0000000000000000 tim.c
                            *COM*:000000000000003c htim2
                            *COM*:000000000000003c htim4
     /tmp/ccgzsIKl.s:21     .text.MX_TIM2_Init:0000000000000000 $t
     /tmp/ccgzsIKl.s:26     .text.MX_TIM2_Init:0000000000000000 MX_TIM2_Init
     /tmp/ccgzsIKl.s:116    .text.MX_TIM2_Init:0000000000000078 $d
     /tmp/ccgzsIKl.s:121    .text.MX_TIM4_Init:0000000000000000 $t
     /tmp/ccgzsIKl.s:126    .text.MX_TIM4_Init:0000000000000000 MX_TIM4_Init
     /tmp/ccgzsIKl.s:230    .text.MX_TIM4_Init:0000000000000080 $d
     /tmp/ccgzsIKl.s:236    .text.HAL_TIM_Base_MspInit:0000000000000000 $t
     /tmp/ccgzsIKl.s:241    .text.HAL_TIM_Base_MspInit:0000000000000000 HAL_TIM_Base_MspInit
     /tmp/ccgzsIKl.s:298    .text.HAL_TIM_Base_MspInit:0000000000000040 $d
     /tmp/ccgzsIKl.s:303    .text.HAL_TIM_Encoder_MspInit:0000000000000000 $t
     /tmp/ccgzsIKl.s:308    .text.HAL_TIM_Encoder_MspInit:0000000000000000 HAL_TIM_Encoder_MspInit
     /tmp/ccgzsIKl.s:372    .text.HAL_TIM_Encoder_MspInit:0000000000000048 $d
     /tmp/ccgzsIKl.s:379    .text.HAL_TIM_Base_MspDeInit:0000000000000000 $t
     /tmp/ccgzsIKl.s:384    .text.HAL_TIM_Base_MspDeInit:0000000000000000 HAL_TIM_Base_MspDeInit
     /tmp/ccgzsIKl.s:429    .text.HAL_TIM_Base_MspDeInit:000000000000002c $d
     /tmp/ccgzsIKl.s:434    .text.HAL_TIM_Encoder_MspDeInit:0000000000000000 $t
     /tmp/ccgzsIKl.s:439    .text.HAL_TIM_Encoder_MspDeInit:0000000000000000 HAL_TIM_Encoder_MspDeInit
     /tmp/ccgzsIKl.s:486    .text.HAL_TIM_Encoder_MspDeInit:000000000000002c $d
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
HAL_TIM_Base_Init
Error_Handler
HAL_TIM_ConfigClockSource
HAL_TIMEx_MasterConfigSynchronization
HAL_TIM_Encoder_Init
HAL_NVIC_SetPriority
HAL_NVIC_EnableIRQ
HAL_GPIO_Init
HAL_NVIC_DisableIRQ
HAL_GPIO_DeInit
