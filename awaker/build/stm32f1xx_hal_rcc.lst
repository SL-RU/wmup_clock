ARM GAS  /tmp/cc33CDhW.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"stm32f1xx_hal_rcc.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.section	.text.HAL_RCC_DeInit,"ax",%progbits
  19              		.align	2
  20              		.global	HAL_RCC_DeInit
  21              		.thumb
  22              		.thumb_func
  24              	HAL_RCC_DeInit:
  25              	.LFB63:
  26              		.file 1 "Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c"
   1:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** /**
   2:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   ******************************************************************************
   3:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @file    stm32f1xx_hal_rcc.c
   4:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @author  MCD Application Team
   5:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @version V1.0.4
   6:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @date    29-April-2016
   7:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @brief   RCC HAL module driver.
   8:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *          This file provides firmware functions to manage the following 
   9:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *          functionalities of the Reset and Clock Control (RCC) peripheral:
  10:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *           + Initialization and de-initialization functions
  11:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *           + Peripheral Control functions
  12:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *       
  13:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   @verbatim                
  14:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   ==============================================================================
  15:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****                       ##### RCC specific features #####
  16:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   ==============================================================================
  17:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     [..]  
  18:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       After reset the device is running from Internal High Speed oscillator
  19:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       (HSI 8MHz) with Flash 0 wait state, Flash prefetch buffer is enabled, 
  20:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       and all peripherals are off except internal SRAM, Flash and JTAG.
  21:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       (+) There is no prescaler on High speed (AHB) and Low speed (APB) buses;
  22:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           all peripherals mapped on these buses are running at HSI speed.
  23:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       (+) The clock for all peripherals is switched off, except the SRAM and FLASH.
  24:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       (+) All GPIOs are in input floating state, except the JTAG pins which
  25:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           are assigned to be used for debug purpose.
  26:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     [..] Once the device started from reset, the user application has to:
  27:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       (+) Configure the clock source to be used to drive the System clock
  28:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           (if the application needs higher frequency/performance)
  29:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       (+) Configure the System clock frequency and Flash settings  
  30:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       (+) Configure the AHB and APB buses prescalers
  31:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       (+) Enable the clock for the peripheral(s) to be used
  32:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       (+) Configure the clock source(s) for peripherals whose clocks are not
ARM GAS  /tmp/cc33CDhW.s 			page 2


  33:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           derived from the System clock (I2S, RTC, ADC, USB OTG FS) 
  34:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
  35:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****                       ##### RCC Limitations #####
  36:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   ==============================================================================
  37:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     [..]  
  38:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       A delay between an RCC peripheral clock enable and the effective peripheral 
  39:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       enabling should be taken into account in order to manage the peripheral read/write 
  40:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       from/to registers.
  41:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       (+) This delay depends on the peripheral mapping.
  42:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         (++) AHB & APB peripherals, 1 dummy read is necessary
  43:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
  44:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     [..]  
  45:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       Workarounds:
  46:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       (#) For AHB & APB peripherals, a dummy read to the peripheral register has been
  47:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           inserted in each __HAL_RCC_PPP_CLK_ENABLE() macro.
  48:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
  49:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   @endverbatim
  50:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   ******************************************************************************
  51:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @attention
  52:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *
  53:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * <h2><center>&copy; COPYRIGHT(c) 2016 STMicroelectronics</center></h2>
  54:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *
  55:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * Redistribution and use in source and binary forms, with or without modification,
  56:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * are permitted provided that the following conditions are met:
  57:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *   1. Redistributions of source code must retain the above copyright notice,
  58:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *      this list of conditions and the following disclaimer.
  59:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
  60:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *      this list of conditions and the following disclaimer in the documentation
  61:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *      and/or other materials provided with the distribution.
  62:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
  63:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *      may be used to endorse or promote products derived from this software
  64:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *      without specific prior written permission.
  65:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *
  66:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  67:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  68:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  69:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  70:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  71:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  72:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  73:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  74:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  75:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  76:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *
  77:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   ******************************************************************************  
  78:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** */
  79:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   
  80:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** /* Includes ------------------------------------------------------------------*/
  81:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** #include "stm32f1xx_hal.h"
  82:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
  83:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** /** @addtogroup STM32F1xx_HAL_Driver
  84:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @{
  85:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   */
  86:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
  87:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** /** @defgroup RCC RCC
  88:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** * @brief RCC HAL module driver
  89:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @{
ARM GAS  /tmp/cc33CDhW.s 			page 3


  90:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   */
  91:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
  92:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** #ifdef HAL_RCC_MODULE_ENABLED
  93:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
  94:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** /* Private typedef -----------------------------------------------------------*/
  95:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** /* Private define ------------------------------------------------------------*/
  96:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** /** @defgroup RCC_Private_Constants RCC Private Constants
  97:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****  * @{
  98:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****  */
  99:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** /* Bits position in  in the CFGR register */
 100:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** #define RCC_CFGR_HPRE_BITNUMBER           POSITION_VAL(RCC_CFGR_HPRE)
 101:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** #define RCC_CFGR_PPRE1_BITNUMBER          POSITION_VAL(RCC_CFGR_PPRE1)
 102:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** #define RCC_CFGR_PPRE2_BITNUMBER          POSITION_VAL(RCC_CFGR_PPRE2)
 103:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** /**
 104:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @}
 105:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   */
 106:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** /* Private macro -------------------------------------------------------------*/
 107:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** /** @defgroup RCC_Private_Macros RCC Private Macros
 108:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @{
 109:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   */
 110:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 111:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** #define MCO1_CLK_ENABLE()     __HAL_RCC_GPIOA_CLK_ENABLE()
 112:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** #define MCO1_GPIO_PORT        GPIOA
 113:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** #define MCO1_PIN              GPIO_PIN_8
 114:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 115:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** /**
 116:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @}
 117:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   */
 118:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 119:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** /* Private variables ---------------------------------------------------------*/
 120:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** /** @defgroup RCC_Private_Variables RCC Private Variables
 121:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @{
 122:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   */
 123:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** /**
 124:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @}
 125:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   */
 126:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 127:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** /* Private function prototypes -----------------------------------------------*/
 128:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** /* Exported functions ---------------------------------------------------------*/
 129:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 130:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** /** @defgroup RCC_Exported_Functions RCC Exported Functions
 131:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @{
 132:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   */
 133:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 134:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** /** @defgroup RCC_Exported_Functions_Group1 Initialization and de-initialization functions 
 135:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *  @brief    Initialization and Configuration functions 
 136:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *
 137:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   @verbatim    
 138:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   ===============================================================================
 139:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****            ##### Initialization and de-initialization functions #####
 140:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   ===============================================================================
 141:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     [..]
 142:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       This section provides functions allowing to configure the internal/external oscillators
 143:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       (HSE, HSI, LSE, LSI, PLL, CSS and MCO) and the System buses clocks (SYSCLK, AHB, APB1
 144:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       and APB2).
 145:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 146:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     [..] Internal/external clock and PLL configuration
ARM GAS  /tmp/cc33CDhW.s 			page 4


 147:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       (#) HSI (high-speed internal), 8 MHz factory-trimmed RC used directly or through
 148:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           the PLL as System clock source.
 149:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       (#) LSI (low-speed internal), ~40 KHz low consumption RC used as IWDG and/or RTC
 150:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           clock source.
 151:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 152:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       (#) HSE (high-speed external), 4 to 24 MHz (STM32F100xx) or 4 to 16 MHz (STM32F101x/STM32F102
 153:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           through the PLL as System clock source. Can be used also as RTC clock source.
 154:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 155:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       (#) LSE (low-speed external), 32 KHz oscillator used as RTC clock source.   
 156:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 157:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       (#) PLL (clocked by HSI or HSE), featuring different output clocks:
 158:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         (++) The first output is used to generate the high speed system clock (up to 72 MHz for STM
 159:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         (++) The second output is used to generate the clock for the USB OTG FS (48 MHz)
 160:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 161:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       (#) CSS (Clock security system), once enable using the macro __HAL_RCC_CSS_ENABLE()
 162:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           and if a HSE clock failure occurs(HSE used directly or through PLL as System 
 163:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           clock source), the System clocks automatically switched to HSI and an interrupt
 164:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           is generated if enabled. The interrupt is linked to the Cortex-M3 NMI 
 165:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           (Non-Maskable Interrupt) exception vector.   
 166:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 167:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       (#) MCO1 (microcontroller clock output), used to output SYSCLK, HSI,  
 168:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           HSE or PLL clock (divided by 2) on PA8 pin + PLL2CLK, PLL3CLK/2, PLL3CLK and XTI for STM3
 169:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 170:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     [..] System, AHB and APB buses clocks configuration
 171:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       (#) Several clock sources can be used to drive the System clock (SYSCLK): HSI,
 172:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           HSE and PLL.
 173:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           The AHB clock (HCLK) is derived from System clock through configurable
 174:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           prescaler and used to clock the CPU, memory and peripherals mapped
 175:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           on AHB bus (DMA, GPIO...). APB1 (PCLK1) and APB2 (PCLK2) clocks are derived
 176:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           from AHB clock through configurable prescalers and used to clock
 177:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           the peripherals mapped on these buses. You can use
 178:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           "@ref HAL_RCC_GetSysClockFreq()" function to retrieve the frequencies of these clocks.
 179:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 180:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       -@- All the peripheral clocks are derived from the System clock (SYSCLK) except:
 181:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           (+@) RTC: RTC clock can be derived either from the LSI, LSE or HSE clock
 182:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****               divided by 128. 
 183:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           (+@) USB OTG FS and RTC: USB OTG FS require a frequency equal to 48 MHz
 184:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****               to work correctly. This clock is derived of the main PLL through PLL Multiplier.
 185:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           (+@) I2S interface on STM32F105x/STM32F107x can be derived from PLL3CLK
 186:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           (+@) IWDG clock which is always the LSI clock.
 187:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 188:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       (#) For STM32F10xxx, the maximum frequency of the SYSCLK and HCLK/PCLK2 is 72 MHz, PCLK1 36 M
 189:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           For STM32F100xx, the maximum frequency of the SYSCLK and HCLK/PCLK1/PCLK2 is 24 MHz.  
 190:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           Depending on the SYSCLK frequency, the flash latency should be adapted accordingly.
 191:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   @endverbatim
 192:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @{
 193:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   */
 194:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   
 195:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** /*
 196:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   Additional consideration on the SYSCLK based on Latency settings:
 197:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         +-----------------------------------------------+
 198:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         | Latency       | SYSCLK clock frequency (MHz)  |
 199:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         |---------------|-------------------------------|
 200:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         |0WS(1CPU cycle)|       0 < SYSCLK <= 24        |
 201:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         |---------------|-------------------------------|
 202:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         |1WS(2CPU cycle)|      24 < SYSCLK <= 48        |
 203:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         |---------------|-------------------------------|
ARM GAS  /tmp/cc33CDhW.s 			page 5


 204:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         |2WS(3CPU cycle)|      48 < SYSCLK <= 72        |
 205:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         +-----------------------------------------------+
 206:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   */
 207:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 208:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** /**
 209:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @brief  Resets the RCC clock configuration to the default reset state.
 210:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @note   The default reset state of the clock configuration is given below:
 211:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *            - HSI ON and used as system clock source
 212:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *            - HSE and PLL OFF
 213:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *            - AHB, APB1 and APB2 prescaler set to 1.
 214:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *            - CSS and MCO1 OFF
 215:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *            - All interrupts disabled
 216:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @note   This function does not modify the configuration of the
 217:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *            - Peripheral clocks
 218:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *            - LSI, LSE and RTC clocks
 219:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @retval None
 220:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   */
 221:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** void HAL_RCC_DeInit(void)
 222:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** {
  27              		.loc 1 222 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 8
  30              		@ frame_needed = 1, uses_anonymous_args = 0
  31              		@ link register save eliminated.
  32 0000 80B4     		push	{r7}
  33              	.LCFI0:
  34              		.cfi_def_cfa_offset 4
  35              		.cfi_offset 7, -4
  36 0002 83B0     		sub	sp, sp, #12
  37              	.LCFI1:
  38              		.cfi_def_cfa_offset 16
  39 0004 00AF     		add	r7, sp, #0
  40              	.LCFI2:
  41              		.cfi_def_cfa_register 7
 223:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   /* Switch SYSCLK to HSI */
 224:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   CLEAR_BIT(RCC->CFGR, RCC_CFGR_SW);
  42              		.loc 1 224 0
  43 0006 1A4A     		ldr	r2, .L3
  44 0008 194B     		ldr	r3, .L3
  45 000a 5B68     		ldr	r3, [r3, #4]
  46 000c 23F00303 		bic	r3, r3, #3
  47 0010 5360     		str	r3, [r2, #4]
 225:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 226:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   /* Reset HSEON, CSSON, & PLLON bits */
 227:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   CLEAR_BIT(RCC->CR, RCC_CR_HSEON | RCC_CR_CSSON | RCC_CR_PLLON);
  48              		.loc 1 227 0
  49 0012 174A     		ldr	r2, .L3
  50 0014 164B     		ldr	r3, .L3
  51 0016 1B68     		ldr	r3, [r3]
  52 0018 23F08473 		bic	r3, r3, #17301504
  53 001c 23F48033 		bic	r3, r3, #65536
  54 0020 1360     		str	r3, [r2]
 228:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   
 229:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   /* Reset HSEBYP bit */
 230:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   CLEAR_BIT(RCC->CR, RCC_CR_HSEBYP);
  55              		.loc 1 230 0
  56 0022 134A     		ldr	r2, .L3
ARM GAS  /tmp/cc33CDhW.s 			page 6


  57 0024 124B     		ldr	r3, .L3
  58 0026 1B68     		ldr	r3, [r3]
  59 0028 23F48023 		bic	r3, r3, #262144
  60 002c 1360     		str	r3, [r2]
 231:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   
 232:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   /* Reset CFGR register */
 233:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   CLEAR_REG(RCC->CFGR);
  61              		.loc 1 233 0
  62 002e 104B     		ldr	r3, .L3
  63 0030 0022     		movs	r2, #0
  64 0032 5A60     		str	r2, [r3, #4]
 234:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   
 235:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   /* Set HSITRIM bits to the reset value */
 236:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   MODIFY_REG(RCC->CR, RCC_CR_HSITRIM, ((uint32_t)0x10 << POSITION_VAL(RCC_CR_HSITRIM)));
  65              		.loc 1 236 0
  66 0034 0E49     		ldr	r1, .L3
  67 0036 0E4B     		ldr	r3, .L3
  68 0038 1B68     		ldr	r3, [r3]
  69 003a 23F0F802 		bic	r2, r3, #248
  70 003e F823     		movs	r3, #248
  71 0040 7B60     		str	r3, [r7, #4]
  72              	.LBB135:
  73              	.LBB136:
  74              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS Cortex-M Core Function/Instruction Header File
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V4.30
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     20. October 2015
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Copyright (c) 2009 - 2015 ARM LIMITED
   8:Drivers/CMSIS/Include/cmsis_gcc.h **** 
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****    All rights reserved.
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****    Redistribution and use in source and binary forms, with or without
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****    modification, are permitted provided that the following conditions are met:
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****    - Redistributions of source code must retain the above copyright
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****      notice, this list of conditions and the following disclaimer.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****    - Redistributions in binary form must reproduce the above copyright
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****      notice, this list of conditions and the following disclaimer in the
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****      documentation and/or other materials provided with the distribution.
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****    - Neither the name of ARM nor the names of its contributors may be used
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****      to endorse or promote products derived from this software without
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****      specific prior written permission.
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****    *
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****    THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****    AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****    IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  24:Drivers/CMSIS/Include/cmsis_gcc.h ****    ARE DISCLAIMED. IN NO EVENT SHALL COPYRIGHT HOLDERS AND CONTRIBUTORS BE
  25:Drivers/CMSIS/Include/cmsis_gcc.h ****    LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
  26:Drivers/CMSIS/Include/cmsis_gcc.h ****    CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
  27:Drivers/CMSIS/Include/cmsis_gcc.h ****    SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
  28:Drivers/CMSIS/Include/cmsis_gcc.h ****    INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
  29:Drivers/CMSIS/Include/cmsis_gcc.h ****    CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
  30:Drivers/CMSIS/Include/cmsis_gcc.h ****    ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  31:Drivers/CMSIS/Include/cmsis_gcc.h ****    POSSIBILITY OF SUCH DAMAGE.
  32:Drivers/CMSIS/Include/cmsis_gcc.h ****    ---------------------------------------------------------------------------*/
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  /tmp/cc33CDhW.s 			page 7


  34:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  36:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** #if defined ( __GNUC__ )
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  41:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  44:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  47:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
  49:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
  51:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  53:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
  54:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
  55:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
  57:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __enable_irq(void)
  59:Drivers/CMSIS/Include/cmsis_gcc.h **** {
  60:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** }
  62:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
  66:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
  67:Drivers/CMSIS/Include/cmsis_gcc.h ****   Can only be executed in Privileged modes.
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __disable_irq(void)
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** {
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
  72:Drivers/CMSIS/Include/cmsis_gcc.h **** }
  73:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  74:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  75:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Control Register
  77:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the Control Register.
  78:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Control Register value
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  80:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_CONTROL(void)
  81:Drivers/CMSIS/Include/cmsis_gcc.h **** {
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
  83:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control" : "=r" (result) );
  85:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** }
  87:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  88:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  89:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Control Register
ARM GAS  /tmp/cc33CDhW.s 			page 8


  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Writes the given value to the Control Register.
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
  93:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_CONTROL(uint32_t control)
  95:Drivers/CMSIS/Include/cmsis_gcc.h **** {
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR control, %0" : : "r" (control) : "memory");
  97:Drivers/CMSIS/Include/cmsis_gcc.h **** }
  98:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  99:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 100:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 101:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get IPSR Register
 102:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the IPSR Register.
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               IPSR Register value
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 105:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_IPSR(void)
 106:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 108:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 109:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 110:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 111:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 114:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 115:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get APSR Register
 116:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the APSR Register.
 117:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               APSR Register value
 118:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_APSR(void)
 120:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 121:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 122:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 123:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, apsr" : "=r" (result) );
 124:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 125:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 126:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 127:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 128:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 129:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get xPSR Register
 130:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the xPSR Register.
 131:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 132:Drivers/CMSIS/Include/cmsis_gcc.h ****     \return               xPSR Register value
 133:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_xPSR(void)
 135:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 137:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, xpsr" : "=r" (result) );
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 141:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 142:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 143:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 144:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer
 145:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer (PSP).
 146:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               PSP Register value
 147:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
ARM GAS  /tmp/cc33CDhW.s 			page 9


 148:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_PSP(void)
 149:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 150:Drivers/CMSIS/Include/cmsis_gcc.h ****   register uint32_t result;
 151:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 152:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp\n"  : "=r" (result) );
 153:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 154:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 155:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 156:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 157:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 158:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer
 159:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer (PSP).
 160:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 161:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 162:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_PSP(uint32_t topOfProcStack)
 163:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 164:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psp, %0\n" : : "r" (topOfProcStack) : "sp");
 165:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 166:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 167:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 168:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 169:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer
 170:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer (MSP).
 171:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               MSP Register value
 172:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 173:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_MSP(void)
 174:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 175:Drivers/CMSIS/Include/cmsis_gcc.h ****   register uint32_t result;
 176:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 177:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp\n" : "=r" (result) );
 178:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 179:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 180:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 181:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 182:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 183:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer
 184:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer (MSP).
 185:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 186:Drivers/CMSIS/Include/cmsis_gcc.h ****     \param [in]    topOfMainStack  Main Stack Pointer value to set
 187:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 188:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_MSP(uint32_t topOfMainStack)
 189:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 190:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msp, %0\n" : : "r" (topOfMainStack) : "sp");
 191:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 192:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 193:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 194:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 195:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Priority Mask
 196:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current state of the priority mask bit from the Priority Mask Register.
 197:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Priority Mask value
 198:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 199:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_PRIMASK(void)
 200:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 201:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 202:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 203:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask" : "=r" (result) );
 204:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
ARM GAS  /tmp/cc33CDhW.s 			page 10


 205:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 206:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 207:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 208:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 209:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Priority Mask
 210:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Priority Mask Register.
 211:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 212:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 213:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_PRIMASK(uint32_t priMask)
 214:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 215:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 216:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 217:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 218:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 219:Drivers/CMSIS/Include/cmsis_gcc.h **** #if       (__CORTEX_M >= 0x03U)
 220:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 221:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 222:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable FIQ
 223:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables FIQ interrupts by clearing the F-bit in the CPSR.
 224:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 225:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 226:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __enable_fault_irq(void)
 227:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 228:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie f" : : : "memory");
 229:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 230:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 231:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 232:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 233:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable FIQ
 234:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables FIQ interrupts by setting the F-bit in the CPSR.
 235:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 236:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 237:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __disable_fault_irq(void)
 238:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 239:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid f" : : : "memory");
 240:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 241:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 242:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 243:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 244:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Base Priority
 245:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Base Priority register.
 246:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Base Priority register value
 247:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 248:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_BASEPRI(void)
 249:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 250:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 251:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 252:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 253:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 254:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 255:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 256:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 257:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 258:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Base Priority
 259:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register.
 260:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 261:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
ARM GAS  /tmp/cc33CDhW.s 			page 11


 262:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_BASEPRI(uint32_t value)
 263:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 264:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri, %0" : : "r" (value) : "memory");
 265:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 266:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 267:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 268:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 269:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Base Priority with condition
 270:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register only if BASEPRI masking is disable
 271:Drivers/CMSIS/Include/cmsis_gcc.h ****            or the new value increases the BASEPRI priority level.
 272:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 273:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 274:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_BASEPRI_MAX(uint32_t value)
 275:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 276:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri_max, %0" : : "r" (value) : "memory");
 277:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 278:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 279:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 280:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 281:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Fault Mask
 282:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Fault Mask register.
 283:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Fault Mask register value
 284:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 285:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_FAULTMASK(void)
 286:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 287:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 288:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 289:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask" : "=r" (result) );
 290:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 291:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 292:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 293:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 294:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 295:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Fault Mask
 296:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Fault Mask register.
 297:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
 298:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 299:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_FAULTMASK(uint32_t faultMask)
 300:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 301:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR faultmask, %0" : : "r" (faultMask) : "memory");
 302:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 303:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 304:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* (__CORTEX_M >= 0x03U) */
 305:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 306:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 307:Drivers/CMSIS/Include/cmsis_gcc.h **** #if       (__CORTEX_M == 0x04U) || (__CORTEX_M == 0x07U)
 308:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 309:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 310:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get FPSCR
 311:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Floating Point Status/Control register.
 312:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Floating Point Status/Control register value
 313:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 314:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_FPSCR(void)
 315:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 316:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__FPU_PRESENT == 1U) && (__FPU_USED == 1U)
 317:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 318:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  /tmp/cc33CDhW.s 			page 12


 319:Drivers/CMSIS/Include/cmsis_gcc.h ****   /* Empty asm statement works as a scheduling barrier */
 320:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("");
 321:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("VMRS %0, fpscr" : "=r" (result) );
 322:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("");
 323:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 324:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 325:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(0);
 326:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 327:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 328:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 329:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 330:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 331:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set FPSCR
 332:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Floating Point Status/Control register.
 333:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    fpscr  Floating Point Status/Control value to set
 334:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 335:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_FPSCR(uint32_t fpscr)
 336:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 337:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__FPU_PRESENT == 1U) && (__FPU_USED == 1U)
 338:Drivers/CMSIS/Include/cmsis_gcc.h ****   /* Empty asm statement works as a scheduling barrier */
 339:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("");
 340:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("VMSR fpscr, %0" : : "r" (fpscr) : "vfpcc");
 341:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("");
 342:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 343:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 344:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 345:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* (__CORTEX_M == 0x04U) || (__CORTEX_M == 0x07U) */
 346:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 347:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 348:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 349:Drivers/CMSIS/Include/cmsis_gcc.h **** /*@} end of CMSIS_Core_RegAccFunctions */
 350:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 351:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 352:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ##########################  Core Instruction Access  ######################### */
 353:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \defgroup CMSIS_Core_InstructionInterface CMSIS Core Instruction Interface
 354:Drivers/CMSIS/Include/cmsis_gcc.h ****   Access to dedicated instructions
 355:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 356:Drivers/CMSIS/Include/cmsis_gcc.h **** */
 357:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 358:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Define macros for porting to both thumb1 and thumb2.
 359:Drivers/CMSIS/Include/cmsis_gcc.h ****  * For thumb1, use low register (r0-r7), specified by constraint "l"
 360:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Otherwise, use general registers, specified by constraint "r" */
 361:Drivers/CMSIS/Include/cmsis_gcc.h **** #if defined (__thumb__) && !defined (__thumb2__)
 362:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=l" (r)
 363:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "l" (r)
 364:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 365:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=r" (r)
 366:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "r" (r)
 367:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 368:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 369:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 370:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   No Operation
 371:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details No Operation does nothing. This instruction can be used for code alignment purposes.
 372:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 373:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __NOP(void)
 374:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 375:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("nop");
ARM GAS  /tmp/cc33CDhW.s 			page 13


 376:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 377:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 378:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 379:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 380:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Interrupt
 381:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Interrupt is a hint instruction that suspends execution until one of a number o
 382:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 383:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __WFI(void)
 384:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 385:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("wfi");
 386:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 387:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 388:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 389:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 390:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Event
 391:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Event is a hint instruction that permits the processor to enter
 392:Drivers/CMSIS/Include/cmsis_gcc.h ****     a low-power state until one of a number of events occurs.
 393:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 394:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __WFE(void)
 395:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 396:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("wfe");
 397:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 398:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 399:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 400:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 401:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Send Event
 402:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Send Event is a hint instruction. It causes an event to be signaled to the CPU.
 403:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 404:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __SEV(void)
 405:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 406:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("sev");
 407:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 408:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 409:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 410:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 411:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Instruction Synchronization Barrier
 412:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Instruction Synchronization Barrier flushes the pipeline in the processor,
 413:Drivers/CMSIS/Include/cmsis_gcc.h ****            so that all instructions following the ISB are fetched from cache or memory,
 414:Drivers/CMSIS/Include/cmsis_gcc.h ****            after the instruction has been completed.
 415:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 416:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __ISB(void)
 417:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 418:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("isb 0xF":::"memory");
 419:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 420:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 421:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 422:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 423:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Synchronization Barrier
 424:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Acts as a special kind of Data Memory Barrier.
 425:Drivers/CMSIS/Include/cmsis_gcc.h ****            It completes when all explicit memory accesses before this instruction complete.
 426:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 427:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __DSB(void)
 428:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 429:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dsb 0xF":::"memory");
 430:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 431:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 432:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  /tmp/cc33CDhW.s 			page 14


 433:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 434:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Memory Barrier
 435:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Ensures the apparent order of the explicit memory operations before
 436:Drivers/CMSIS/Include/cmsis_gcc.h ****            and after the instruction, without ensuring their completion.
 437:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 438:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __DMB(void)
 439:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 440:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dmb 0xF":::"memory");
 441:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 442:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 443:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 444:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 445:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (32 bit)
 446:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order in integer value.
 447:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 448:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 449:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 450:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __REV(uint32_t value)
 451:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 452:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 5)
 453:Drivers/CMSIS/Include/cmsis_gcc.h ****   return __builtin_bswap32(value);
 454:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 455:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 456:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 457:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("rev %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 458:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 459:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 460:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 461:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 462:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 463:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 464:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 465:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order in two unsigned short values.
 466:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 467:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 468:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 469:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __REV16(uint32_t value)
 470:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 471:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 472:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 473:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("rev16 %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 474:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 475:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 476:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 477:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 478:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 479:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order in signed short value
 480:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order in a signed short value with sign extension to integer.
 481:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 482:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 483:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 484:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE int32_t __REVSH(int32_t value)
 485:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 486:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 487:Drivers/CMSIS/Include/cmsis_gcc.h ****   return (short)__builtin_bswap16(value);
 488:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 489:Drivers/CMSIS/Include/cmsis_gcc.h ****   int32_t result;
ARM GAS  /tmp/cc33CDhW.s 			page 15


 490:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 491:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("revsh %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 492:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 493:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 494:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 495:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 496:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 497:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 498:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Rotate Right in unsigned value (32 bit)
 499:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Rotate Right (immediate) provides the value of the contents of a register rotated by a v
 500:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to rotate
 501:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Number of Bits to rotate
 502:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Rotated value
 503:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 504:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __ROR(uint32_t op1, uint32_t op2)
 505:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 506:Drivers/CMSIS/Include/cmsis_gcc.h ****   return (op1 >> op2) | (op1 << (32U - op2));
 507:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 508:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 509:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 510:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 511:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Breakpoint
 512:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Causes the processor to enter Debug state.
 513:Drivers/CMSIS/Include/cmsis_gcc.h ****            Debug tools can use this to investigate system state when the instruction at a particula
 514:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  is ignored by the processor.
 515:Drivers/CMSIS/Include/cmsis_gcc.h ****                  If required, a debugger can use it to store additional information about the break
 516:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 517:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __BKPT(value)                       __ASM volatile ("bkpt "#value)
 518:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 519:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 520:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 521:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse bit order of value
 522:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the bit order of the given value.
 523:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 524:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 525:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 526:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __RBIT(uint32_t value)
 527:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 528:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 529:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 530:Drivers/CMSIS/Include/cmsis_gcc.h **** #if       (__CORTEX_M >= 0x03U) || (__CORTEX_SC >= 300U)
 531:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("rbit %0, %1" : "=r" (result) : "r" (value) );
  75              		.loc 2 531 0
  76 0042 7B68     		ldr	r3, [r7, #4]
  77              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
  78 0044 93FAA3F3 		rbit r3, r3
  79              	@ 0 "" 2
  80              		.thumb
  81 0048 3B60     		str	r3, [r7]
 532:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 533:Drivers/CMSIS/Include/cmsis_gcc.h ****   int32_t s = 4 /*sizeof(v)*/ * 8 - 1; /* extra shift needed at end */
 534:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 535:Drivers/CMSIS/Include/cmsis_gcc.h ****   result = value;                      /* r will be reversed bits of v; first get LSB of v */
 536:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (value >>= 1U; value; value >>= 1U)
 537:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 538:Drivers/CMSIS/Include/cmsis_gcc.h ****     result <<= 1U;
 539:Drivers/CMSIS/Include/cmsis_gcc.h ****     result |= value & 1U;
ARM GAS  /tmp/cc33CDhW.s 			page 16


 540:Drivers/CMSIS/Include/cmsis_gcc.h ****     s--;
 541:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 542:Drivers/CMSIS/Include/cmsis_gcc.h ****   result <<= s;                        /* shift when v's highest bits are zero */
 543:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 544:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
  82              		.loc 2 544 0
  83 004a 3B68     		ldr	r3, [r7]
  84              	.LBE136:
  85              	.LBE135:
  86              		.loc 1 236 0
  87 004c B3FA83F3 		clz	r3, r3
  88 0050 1020     		movs	r0, #16
  89 0052 00FA03F3 		lsl	r3, r0, r3
  90 0056 1343     		orrs	r3, r3, r2
  91 0058 0B60     		str	r3, [r1]
 237:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   
 238:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** #if (defined(STM32F105xC) || defined(STM32F107xC) || defined (STM32F100xB) || defined (STM32F100xE)
 239:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   /* Reset CFGR2 register */
 240:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   CLEAR_REG(RCC->CFGR2);
 241:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 242:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** #endif /* STM32F105xC || STM32F107xC || STM32F100xB || STM32F100xE */
 243:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   /* Disable all interrupts */
 244:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   CLEAR_REG(RCC->CIR);
  92              		.loc 1 244 0
  93 005a 054B     		ldr	r3, .L3
  94 005c 0022     		movs	r2, #0
  95 005e 9A60     		str	r2, [r3, #8]
 245:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 246:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   /* Update the SystemCoreClock global variable */
 247:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   SystemCoreClock = HSI_VALUE;
  96              		.loc 1 247 0
  97 0060 044B     		ldr	r3, .L3+4
  98 0062 054A     		ldr	r2, .L3+8
  99 0064 1A60     		str	r2, [r3]
 248:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** }
 100              		.loc 1 248 0
 101 0066 0C37     		adds	r7, r7, #12
 102              	.LCFI3:
 103              		.cfi_def_cfa_offset 4
 104 0068 BD46     		mov	sp, r7
 105              	.LCFI4:
 106              		.cfi_def_cfa_register 13
 107              		@ sp needed
 108 006a 5DF8047B 		ldr	r7, [sp], #4
 109              	.LCFI5:
 110              		.cfi_restore 7
 111              		.cfi_def_cfa_offset 0
 112 006e 7047     		bx	lr
 113              	.L4:
 114              		.align	2
 115              	.L3:
 116 0070 00100240 		.word	1073876992
 117 0074 00000000 		.word	SystemCoreClock
 118 0078 00127A00 		.word	8000000
 119              		.cfi_endproc
 120              	.LFE63:
 122              		.section	.text.HAL_RCC_OscConfig,"ax",%progbits
ARM GAS  /tmp/cc33CDhW.s 			page 17


 123              		.align	2
 124              		.global	HAL_RCC_OscConfig
 125              		.thumb
 126              		.thumb_func
 128              	HAL_RCC_OscConfig:
 129              	.LFB64:
 249:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 250:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** /**
 251:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @brief  Initializes the RCC Oscillators according to the specified parameters in the
 252:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *         RCC_OscInitTypeDef.
 253:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @param  RCC_OscInitStruct pointer to an RCC_OscInitTypeDef structure that
 254:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *         contains the configuration information for the RCC Oscillators.
 255:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @note   The PLL is not disabled when used as system clock.
 256:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @note   The PLL is not disabled when USB OTG FS clock is enabled (specific to devices with USB 
 257:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @note   Transitions LSE Bypass to LSE On and LSE On to LSE Bypass are not
 258:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *         supported by this macro. User should request a transition to LSE Off
 259:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *         first and then LSE On or LSE Bypass.
 260:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @note   Transition HSE Bypass to HSE On and HSE On to HSE Bypass are not
 261:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *         supported by this macro. User should request a transition to HSE Off
 262:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *         first and then HSE On or HSE Bypass.
 263:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @retval HAL status
 264:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   */
 265:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** HAL_StatusTypeDef HAL_RCC_OscConfig(RCC_OscInitTypeDef  *RCC_OscInitStruct)
 266:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** {
 130              		.loc 1 266 0
 131              		.cfi_startproc
 132              		@ args = 0, pretend = 0, frame = 400
 133              		@ frame_needed = 1, uses_anonymous_args = 0
 134 0000 80B5     		push	{r7, lr}
 135              	.LCFI6:
 136              		.cfi_def_cfa_offset 8
 137              		.cfi_offset 7, -8
 138              		.cfi_offset 14, -4
 139 0002 E4B0     		sub	sp, sp, #400
 140              	.LCFI7:
 141              		.cfi_def_cfa_offset 408
 142 0004 00AF     		add	r7, sp, #0
 143              	.LCFI8:
 144              		.cfi_def_cfa_register 7
 145 0006 3B1D     		adds	r3, r7, #4
 146 0008 1860     		str	r0, [r3]
 267:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****    uint32_t tickstart = 0;
 147              		.loc 1 267 0
 148 000a 0023     		movs	r3, #0
 149 000c C7F88C31 		str	r3, [r7, #396]
 268:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   
 269:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   /* Check the parameters */
 270:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   assert_param(RCC_OscInitStruct != NULL);
 271:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   assert_param(IS_RCC_OSCILLATORTYPE(RCC_OscInitStruct->OscillatorType));
 272:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   
 273:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   /*------------------------------- HSE Configuration ------------------------*/ 
 274:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
 150              		.loc 1 274 0
 151 0010 3B1D     		adds	r3, r7, #4
 152 0012 1B68     		ldr	r3, [r3]
 153 0014 1B68     		ldr	r3, [r3]
 154 0016 03F00103 		and	r3, r3, #1
ARM GAS  /tmp/cc33CDhW.s 			page 18


 155 001a 002B     		cmp	r3, #0
 156 001c 00F07281 		beq	.L6
 275:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   {
 276:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     /* Check the parameters */
 277:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     assert_param(IS_RCC_HSE(RCC_OscInitStruct->HSEState));
 278:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         
 279:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     /* When the HSE is used as system clock or clock source for PLL in these cases it is not allowe
 280:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_HSE) 
 157              		.loc 1 280 0
 158 0020 A94B     		ldr	r3, .L157
 159 0022 5B68     		ldr	r3, [r3, #4]
 160 0024 03F00C03 		and	r3, r3, #12
 161 0028 042B     		cmp	r3, #4
 162 002a 0BD0     		beq	.L7
 281:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****        || ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_PLLCLK) && (__HAL_RCC_GET_PLL_
 163              		.loc 1 281 0
 164 002c A64B     		ldr	r3, .L157
 165 002e 5B68     		ldr	r3, [r3, #4]
 166 0030 03F00C03 		and	r3, r3, #12
 167 0034 082B     		cmp	r3, #8
 168 0036 5ED1     		bne	.L8
 169              		.loc 1 281 0 is_stmt 0 discriminator 1
 170 0038 A34B     		ldr	r3, .L157
 171 003a 5B68     		ldr	r3, [r3, #4]
 172 003c 03F48033 		and	r3, r3, #65536
 173 0040 002B     		cmp	r3, #0
 174 0042 58D0     		beq	.L8
 175              	.L7:
 176 0044 4FF40033 		mov	r3, #131072
 177 0048 C7F88831 		str	r3, [r7, #392]
 178              	.LBB137:
 179              	.LBB138:
 531:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 180              		.loc 2 531 0 is_stmt 1
 181 004c D7F88831 		ldr	r3, [r7, #392]
 182              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 183 0050 93FAA3F3 		rbit r3, r3
 184              	@ 0 "" 2
 185              		.thumb
 186 0054 C7F88431 		str	r3, [r7, #388]
 187              		.loc 2 544 0
 188 0058 D7F88431 		ldr	r3, [r7, #388]
 189              	.LBE138:
 190              	.LBE137:
 282:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     {
 283:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET) && (RCC_OscInitStruct->HSEState == RCC_HSE_
 191              		.loc 1 283 0
 192 005c B3FA83F3 		clz	r3, r3
 193 0060 DBB2     		uxtb	r3, r3
 194 0062 43F02003 		orr	r3, r3, #32
 195 0066 DBB2     		uxtb	r3, r3
 196 0068 DBB2     		uxtb	r3, r3
 197 006a 5B09     		lsrs	r3, r3, #5
 198 006c DBB2     		uxtb	r3, r3
 199 006e 012B     		cmp	r3, #1
 200 0070 02D1     		bne	.L10
 201              		.loc 1 283 0 is_stmt 0 discriminator 1
ARM GAS  /tmp/cc33CDhW.s 			page 19


 202 0072 954B     		ldr	r3, .L157
 203 0074 1B68     		ldr	r3, [r3]
 204 0076 1BE0     		b	.L11
 205              	.L10:
 206 0078 4FF40033 		mov	r3, #131072
 207 007c C7F88031 		str	r3, [r7, #384]
 208              	.LBB139:
 209              	.LBB140:
 531:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 210              		.loc 2 531 0 is_stmt 1 discriminator 2
 211 0080 D7F88031 		ldr	r3, [r7, #384]
 212              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 213 0084 93FAA3F3 		rbit r3, r3
 214              	@ 0 "" 2
 215              		.thumb
 216 0088 C7F87C31 		str	r3, [r7, #380]
 217              		.loc 2 544 0 discriminator 2
 218 008c D7F87C31 		ldr	r3, [r7, #380]
 219              	.LBE140:
 220              	.LBE139:
 221              		.loc 1 283 0 discriminator 2
 222 0090 B3FA83F3 		clz	r3, r3
 223 0094 DBB2     		uxtb	r3, r3
 224 0096 43F02003 		orr	r3, r3, #32
 225 009a DBB2     		uxtb	r3, r3
 226 009c DBB2     		uxtb	r3, r3
 227 009e 5B09     		lsrs	r3, r3, #5
 228 00a0 DBB2     		uxtb	r3, r3
 229 00a2 022B     		cmp	r3, #2
 230 00a4 02D1     		bne	.L13
 231              		.loc 1 283 0 is_stmt 0 discriminator 4
 232 00a6 884B     		ldr	r3, .L157
 233 00a8 1B6A     		ldr	r3, [r3, #32]
 234 00aa 01E0     		b	.L11
 235              	.L13:
 236              		.loc 1 283 0 discriminator 5
 237 00ac 864B     		ldr	r3, .L157
 238 00ae 5B6A     		ldr	r3, [r3, #36]
 239              	.L11:
 240 00b0 4FF40032 		mov	r2, #131072
 241 00b4 C7F87821 		str	r2, [r7, #376]
 242              	.LBB141:
 243              	.LBB142:
 531:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 244              		.loc 2 531 0 is_stmt 1 discriminator 8
 245 00b8 D7F87821 		ldr	r2, [r7, #376]
 246              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 247 00bc 92FAA2F2 		rbit r2, r2
 248              	@ 0 "" 2
 249              		.thumb
 250 00c0 C7F87421 		str	r2, [r7, #372]
 251              		.loc 2 544 0 discriminator 8
 252 00c4 D7F87421 		ldr	r2, [r7, #372]
 253              	.LBE142:
 254              	.LBE141:
 255              		.loc 1 283 0 discriminator 8
 256 00c8 B2FA82F2 		clz	r2, r2
ARM GAS  /tmp/cc33CDhW.s 			page 20


 257 00cc D2B2     		uxtb	r2, r2
 258 00ce 42F02002 		orr	r2, r2, #32
 259 00d2 D2B2     		uxtb	r2, r2
 260 00d4 D2B2     		uxtb	r2, r2
 261 00d6 02F01F02 		and	r2, r2, #31
 262 00da D340     		lsrs	r3, r3, r2
 263 00dc 03F00103 		and	r3, r3, #1
 264 00e0 002B     		cmp	r3, #0
 265 00e2 07D0     		beq	.L16
 266              		.loc 1 283 0 is_stmt 0 discriminator 9
 267 00e4 3B1D     		adds	r3, r7, #4
 268 00e6 1B68     		ldr	r3, [r3]
 269 00e8 5B68     		ldr	r3, [r3, #4]
 270 00ea 002B     		cmp	r3, #0
 271 00ec 02D1     		bne	.L16
 284:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       {
 285:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         return HAL_ERROR;
 272              		.loc 1 285 0 is_stmt 1
 273 00ee 0123     		movs	r3, #1
 274 00f0 00F09BBE 		b	.L17
 275              	.L16:
 283:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       {
 276              		.loc 1 283 0
 277 00f4 06E1     		b	.L6
 278              	.L8:
 286:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       }
 287:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     }
 288:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     else
 289:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     {
 290:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       /* Set the new HSE configuration ---------------------------------------*/
 291:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 279              		.loc 1 291 0
 280 00f6 3B1D     		adds	r3, r7, #4
 281 00f8 1B68     		ldr	r3, [r3]
 282 00fa 5B68     		ldr	r3, [r3, #4]
 283 00fc B3F5803F 		cmp	r3, #65536
 284 0100 06D1     		bne	.L18
 285              		.loc 1 291 0 is_stmt 0 discriminator 1
 286 0102 714A     		ldr	r2, .L157
 287 0104 704B     		ldr	r3, .L157
 288 0106 1B68     		ldr	r3, [r3]
 289 0108 43F48033 		orr	r3, r3, #65536
 290 010c 1360     		str	r3, [r2]
 291 010e 30E0     		b	.L19
 292              	.L18:
 293              		.loc 1 291 0 discriminator 2
 294 0110 3B1D     		adds	r3, r7, #4
 295 0112 1B68     		ldr	r3, [r3]
 296 0114 5B68     		ldr	r3, [r3, #4]
 297 0116 002B     		cmp	r3, #0
 298 0118 0CD1     		bne	.L20
 299              		.loc 1 291 0 discriminator 3
 300 011a 6B4A     		ldr	r2, .L157
 301 011c 6A4B     		ldr	r3, .L157
 302 011e 1B68     		ldr	r3, [r3]
 303 0120 23F48033 		bic	r3, r3, #65536
 304 0124 1360     		str	r3, [r2]
ARM GAS  /tmp/cc33CDhW.s 			page 21


 305 0126 684A     		ldr	r2, .L157
 306 0128 674B     		ldr	r3, .L157
 307 012a 1B68     		ldr	r3, [r3]
 308 012c 23F48023 		bic	r3, r3, #262144
 309 0130 1360     		str	r3, [r2]
 310 0132 1EE0     		b	.L19
 311              	.L20:
 312              		.loc 1 291 0 discriminator 4
 313 0134 3B1D     		adds	r3, r7, #4
 314 0136 1B68     		ldr	r3, [r3]
 315 0138 5B68     		ldr	r3, [r3, #4]
 316 013a B3F5A02F 		cmp	r3, #327680
 317 013e 0CD1     		bne	.L21
 318              		.loc 1 291 0 discriminator 5
 319 0140 614A     		ldr	r2, .L157
 320 0142 614B     		ldr	r3, .L157
 321 0144 1B68     		ldr	r3, [r3]
 322 0146 43F48023 		orr	r3, r3, #262144
 323 014a 1360     		str	r3, [r2]
 324 014c 5E4A     		ldr	r2, .L157
 325 014e 5E4B     		ldr	r3, .L157
 326 0150 1B68     		ldr	r3, [r3]
 327 0152 43F48033 		orr	r3, r3, #65536
 328 0156 1360     		str	r3, [r2]
 329 0158 0BE0     		b	.L19
 330              	.L21:
 331              		.loc 1 291 0 discriminator 6
 332 015a 5B4A     		ldr	r2, .L157
 333 015c 5A4B     		ldr	r3, .L157
 334 015e 1B68     		ldr	r3, [r3]
 335 0160 23F48033 		bic	r3, r3, #65536
 336 0164 1360     		str	r3, [r2]
 337 0166 584A     		ldr	r2, .L157
 338 0168 574B     		ldr	r3, .L157
 339 016a 1B68     		ldr	r3, [r3]
 340 016c 23F48023 		bic	r3, r3, #262144
 341 0170 1360     		str	r3, [r2]
 342              	.L19:
 292:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       
 293:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 294:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****        /* Check the HSE State */
 295:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       if(RCC_OscInitStruct->HSEState != RCC_HSE_OFF)
 343              		.loc 1 295 0 is_stmt 1
 344 0172 3B1D     		adds	r3, r7, #4
 345 0174 1B68     		ldr	r3, [r3]
 346 0176 5B68     		ldr	r3, [r3, #4]
 347 0178 002B     		cmp	r3, #0
 348 017a 60D0     		beq	.L22
 296:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       {
 297:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         /* Get Start Tick */
 298:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 349              		.loc 1 298 0
 350 017c FFF7FEFF 		bl	HAL_GetTick
 351 0180 C7F88C01 		str	r0, [r7, #396]
 299:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         
 300:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         /* Wait till HSE is ready */
 301:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
ARM GAS  /tmp/cc33CDhW.s 			page 22


 352              		.loc 1 301 0
 353 0184 0AE0     		b	.L23
 354              	.L31:
 302:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         {
 303:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 355              		.loc 1 303 0
 356 0186 FFF7FEFF 		bl	HAL_GetTick
 357 018a 0246     		mov	r2, r0
 358 018c D7F88C31 		ldr	r3, [r7, #396]
 359 0190 D31A     		subs	r3, r2, r3
 360 0192 642B     		cmp	r3, #100
 361 0194 02D9     		bls	.L23
 304:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           {
 305:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****             return HAL_TIMEOUT;
 362              		.loc 1 305 0
 363 0196 0323     		movs	r3, #3
 364 0198 00F047BE 		b	.L17
 365              	.L23:
 366 019c 4FF40033 		mov	r3, #131072
 367 01a0 C7F87031 		str	r3, [r7, #368]
 368              	.LBB143:
 369              	.LBB144:
 531:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 370              		.loc 2 531 0
 371 01a4 D7F87031 		ldr	r3, [r7, #368]
 372              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 373 01a8 93FAA3F3 		rbit r3, r3
 374              	@ 0 "" 2
 375              		.thumb
 376 01ac C7F86C31 		str	r3, [r7, #364]
 377              		.loc 2 544 0
 378 01b0 D7F86C31 		ldr	r3, [r7, #364]
 379              	.LBE144:
 380              	.LBE143:
 301:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         {
 381              		.loc 1 301 0
 382 01b4 B3FA83F3 		clz	r3, r3
 383 01b8 DBB2     		uxtb	r3, r3
 384 01ba 43F02003 		orr	r3, r3, #32
 385 01be DBB2     		uxtb	r3, r3
 386 01c0 DBB2     		uxtb	r3, r3
 387 01c2 5B09     		lsrs	r3, r3, #5
 388 01c4 DBB2     		uxtb	r3, r3
 389 01c6 012B     		cmp	r3, #1
 390 01c8 02D1     		bne	.L25
 301:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         {
 391              		.loc 1 301 0 is_stmt 0 discriminator 1
 392 01ca 3F4B     		ldr	r3, .L157
 393 01cc 1B68     		ldr	r3, [r3]
 394 01ce 1BE0     		b	.L26
 395              	.L25:
 396 01d0 4FF40033 		mov	r3, #131072
 397 01d4 C7F86831 		str	r3, [r7, #360]
 398              	.LBB145:
 399              	.LBB146:
 531:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 400              		.loc 2 531 0 is_stmt 1 discriminator 2
ARM GAS  /tmp/cc33CDhW.s 			page 23


 401 01d8 D7F86831 		ldr	r3, [r7, #360]
 402              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 403 01dc 93FAA3F3 		rbit r3, r3
 404              	@ 0 "" 2
 405              		.thumb
 406 01e0 C7F86431 		str	r3, [r7, #356]
 407              		.loc 2 544 0 discriminator 2
 408 01e4 D7F86431 		ldr	r3, [r7, #356]
 409              	.LBE146:
 410              	.LBE145:
 301:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         {
 411              		.loc 1 301 0 discriminator 2
 412 01e8 B3FA83F3 		clz	r3, r3
 413 01ec DBB2     		uxtb	r3, r3
 414 01ee 43F02003 		orr	r3, r3, #32
 415 01f2 DBB2     		uxtb	r3, r3
 416 01f4 DBB2     		uxtb	r3, r3
 417 01f6 5B09     		lsrs	r3, r3, #5
 418 01f8 DBB2     		uxtb	r3, r3
 419 01fa 022B     		cmp	r3, #2
 420 01fc 02D1     		bne	.L28
 301:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         {
 421              		.loc 1 301 0 is_stmt 0 discriminator 4
 422 01fe 324B     		ldr	r3, .L157
 423 0200 1B6A     		ldr	r3, [r3, #32]
 424 0202 01E0     		b	.L26
 425              	.L28:
 301:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         {
 426              		.loc 1 301 0 discriminator 5
 427 0204 304B     		ldr	r3, .L157
 428 0206 5B6A     		ldr	r3, [r3, #36]
 429              	.L26:
 430 0208 4FF40032 		mov	r2, #131072
 431 020c C7F86021 		str	r2, [r7, #352]
 432              	.LBB147:
 433              	.LBB148:
 531:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 434              		.loc 2 531 0 is_stmt 1 discriminator 8
 435 0210 D7F86021 		ldr	r2, [r7, #352]
 436              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 437 0214 92FAA2F2 		rbit r2, r2
 438              	@ 0 "" 2
 439              		.thumb
 440 0218 C7F85C21 		str	r2, [r7, #348]
 441              		.loc 2 544 0 discriminator 8
 442 021c D7F85C21 		ldr	r2, [r7, #348]
 443              	.LBE148:
 444              	.LBE147:
 301:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         {
 445              		.loc 1 301 0 discriminator 8
 446 0220 B2FA82F2 		clz	r2, r2
 447 0224 D2B2     		uxtb	r2, r2
 448 0226 42F02002 		orr	r2, r2, #32
 449 022a D2B2     		uxtb	r2, r2
 450 022c D2B2     		uxtb	r2, r2
 451 022e 02F01F02 		and	r2, r2, #31
 452 0232 D340     		lsrs	r3, r3, r2
ARM GAS  /tmp/cc33CDhW.s 			page 24


 453 0234 03F00103 		and	r3, r3, #1
 454 0238 002B     		cmp	r3, #0
 455 023a A4D0     		beq	.L31
 456 023c 62E0     		b	.L6
 457              	.L22:
 306:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           }
 307:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         }
 308:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       }
 309:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       else
 310:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       {
 311:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         /* Get Start Tick */
 312:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 458              		.loc 1 312 0
 459 023e FFF7FEFF 		bl	HAL_GetTick
 460 0242 C7F88C01 		str	r0, [r7, #396]
 313:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         
 314:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         /* Wait till HSE is disabled */
 315:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)
 461              		.loc 1 315 0
 462 0246 0AE0     		b	.L32
 463              	.L40:
 316:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         {
 317:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****            if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 464              		.loc 1 317 0
 465 0248 FFF7FEFF 		bl	HAL_GetTick
 466 024c 0246     		mov	r2, r0
 467 024e D7F88C31 		ldr	r3, [r7, #396]
 468 0252 D31A     		subs	r3, r2, r3
 469 0254 642B     		cmp	r3, #100
 470 0256 02D9     		bls	.L32
 318:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           {
 319:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****             return HAL_TIMEOUT;
 471              		.loc 1 319 0
 472 0258 0323     		movs	r3, #3
 473 025a 00F0E6BD 		b	.L17
 474              	.L32:
 475 025e 4FF40033 		mov	r3, #131072
 476 0262 C7F85831 		str	r3, [r7, #344]
 477              	.LBB149:
 478              	.LBB150:
 531:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 479              		.loc 2 531 0
 480 0266 D7F85831 		ldr	r3, [r7, #344]
 481              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 482 026a 93FAA3F3 		rbit r3, r3
 483              	@ 0 "" 2
 484              		.thumb
 485 026e C7F85431 		str	r3, [r7, #340]
 486              		.loc 2 544 0
 487 0272 D7F85431 		ldr	r3, [r7, #340]
 488              	.LBE150:
 489              	.LBE149:
 315:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         {
 490              		.loc 1 315 0
 491 0276 B3FA83F3 		clz	r3, r3
 492 027a DBB2     		uxtb	r3, r3
 493 027c 43F02003 		orr	r3, r3, #32
ARM GAS  /tmp/cc33CDhW.s 			page 25


 494 0280 DBB2     		uxtb	r3, r3
 495 0282 DBB2     		uxtb	r3, r3
 496 0284 5B09     		lsrs	r3, r3, #5
 497 0286 DBB2     		uxtb	r3, r3
 498 0288 012B     		cmp	r3, #1
 499 028a 02D1     		bne	.L34
 315:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         {
 500              		.loc 1 315 0 is_stmt 0 discriminator 1
 501 028c 0E4B     		ldr	r3, .L157
 502 028e 1B68     		ldr	r3, [r3]
 503 0290 1EE0     		b	.L35
 504              	.L34:
 505 0292 4FF40033 		mov	r3, #131072
 506 0296 C7F85031 		str	r3, [r7, #336]
 507              	.LBB151:
 508              	.LBB152:
 531:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 509              		.loc 2 531 0 is_stmt 1 discriminator 2
 510 029a D7F85031 		ldr	r3, [r7, #336]
 511              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 512 029e 93FAA3F3 		rbit r3, r3
 513              	@ 0 "" 2
 514              		.thumb
 515 02a2 C7F84C31 		str	r3, [r7, #332]
 516              		.loc 2 544 0 discriminator 2
 517 02a6 D7F84C31 		ldr	r3, [r7, #332]
 518              	.LBE152:
 519              	.LBE151:
 315:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         {
 520              		.loc 1 315 0 discriminator 2
 521 02aa B3FA83F3 		clz	r3, r3
 522 02ae DBB2     		uxtb	r3, r3
 523 02b0 43F02003 		orr	r3, r3, #32
 524 02b4 DBB2     		uxtb	r3, r3
 525 02b6 DBB2     		uxtb	r3, r3
 526 02b8 5B09     		lsrs	r3, r3, #5
 527 02ba DBB2     		uxtb	r3, r3
 528 02bc 022B     		cmp	r3, #2
 529 02be 05D1     		bne	.L37
 315:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         {
 530              		.loc 1 315 0 is_stmt 0 discriminator 4
 531 02c0 014B     		ldr	r3, .L157
 532 02c2 1B6A     		ldr	r3, [r3, #32]
 533 02c4 04E0     		b	.L35
 534              	.L158:
 535 02c6 00BF     		.align	2
 536              	.L157:
 537 02c8 00100240 		.word	1073876992
 538              	.L37:
 315:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         {
 539              		.loc 1 315 0 discriminator 5
 540 02cc C64B     		ldr	r3, .L159
 541 02ce 5B6A     		ldr	r3, [r3, #36]
 542              	.L35:
 543 02d0 4FF40032 		mov	r2, #131072
 544 02d4 C7F84821 		str	r2, [r7, #328]
 545              	.LBB153:
ARM GAS  /tmp/cc33CDhW.s 			page 26


 546              	.LBB154:
 531:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 547              		.loc 2 531 0 is_stmt 1 discriminator 8
 548 02d8 D7F84821 		ldr	r2, [r7, #328]
 549              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 550 02dc 92FAA2F2 		rbit r2, r2
 551              	@ 0 "" 2
 552              		.thumb
 553 02e0 C7F84421 		str	r2, [r7, #324]
 554              		.loc 2 544 0 discriminator 8
 555 02e4 D7F84421 		ldr	r2, [r7, #324]
 556              	.LBE154:
 557              	.LBE153:
 315:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         {
 558              		.loc 1 315 0 discriminator 8
 559 02e8 B2FA82F2 		clz	r2, r2
 560 02ec D2B2     		uxtb	r2, r2
 561 02ee 42F02002 		orr	r2, r2, #32
 562 02f2 D2B2     		uxtb	r2, r2
 563 02f4 D2B2     		uxtb	r2, r2
 564 02f6 02F01F02 		and	r2, r2, #31
 565 02fa D340     		lsrs	r3, r3, r2
 566 02fc 03F00103 		and	r3, r3, #1
 567 0300 002B     		cmp	r3, #0
 568 0302 A1D1     		bne	.L40
 569              	.L6:
 320:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           }
 321:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         }
 322:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       }
 323:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     }
 324:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   }
 325:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   /*----------------------------- HSI Configuration --------------------------*/ 
 326:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI) == RCC_OSCILLATORTYPE_HSI)
 570              		.loc 1 326 0
 571 0304 3B1D     		adds	r3, r7, #4
 572 0306 1B68     		ldr	r3, [r3]
 573 0308 1B68     		ldr	r3, [r3]
 574 030a 03F00203 		and	r3, r3, #2
 575 030e 002B     		cmp	r3, #0
 576 0310 00F08781 		beq	.L41
 327:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   {
 328:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     /* Check the parameters */
 329:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     assert_param(IS_RCC_HSI(RCC_OscInitStruct->HSIState));
 330:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     assert_param(IS_RCC_CALIBRATION_VALUE(RCC_OscInitStruct->HSICalibrationValue));
 331:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     
 332:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     /* Check if HSI is used as system clock or as PLL source when PLL is selected as system clock *
 333:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_HSI) 
 577              		.loc 1 333 0
 578 0314 B44B     		ldr	r3, .L159
 579 0316 5B68     		ldr	r3, [r3, #4]
 580 0318 03F00C03 		and	r3, r3, #12
 581 031c 002B     		cmp	r3, #0
 582 031e 0BD0     		beq	.L42
 334:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****        || ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_PLLCLK) && (__HAL_RCC_GET_PLL_
 583              		.loc 1 334 0
 584 0320 B14B     		ldr	r3, .L159
 585 0322 5B68     		ldr	r3, [r3, #4]
ARM GAS  /tmp/cc33CDhW.s 			page 27


 586 0324 03F00C03 		and	r3, r3, #12
 587 0328 082B     		cmp	r3, #8
 588 032a 74D1     		bne	.L43
 589              		.loc 1 334 0 is_stmt 0 discriminator 1
 590 032c AE4B     		ldr	r3, .L159
 591 032e 5B68     		ldr	r3, [r3, #4]
 592 0330 03F48033 		and	r3, r3, #65536
 593 0334 002B     		cmp	r3, #0
 594 0336 6ED1     		bne	.L43
 595              	.L42:
 596 0338 0223     		movs	r3, #2
 597 033a C7F84031 		str	r3, [r7, #320]
 598              	.LBB155:
 599              	.LBB156:
 531:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 600              		.loc 2 531 0 is_stmt 1
 601 033e D7F84031 		ldr	r3, [r7, #320]
 602              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 603 0342 93FAA3F3 		rbit r3, r3
 604              	@ 0 "" 2
 605              		.thumb
 606 0346 C7F83C31 		str	r3, [r7, #316]
 607              		.loc 2 544 0
 608 034a D7F83C31 		ldr	r3, [r7, #316]
 609              	.LBE156:
 610              	.LBE155:
 335:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     {
 336:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       /* When HSI is used as system clock it will not disabled */
 337:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_
 611              		.loc 1 337 0
 612 034e B3FA83F3 		clz	r3, r3
 613 0352 DBB2     		uxtb	r3, r3
 614 0354 43F02003 		orr	r3, r3, #32
 615 0358 DBB2     		uxtb	r3, r3
 616 035a DBB2     		uxtb	r3, r3
 617 035c 5B09     		lsrs	r3, r3, #5
 618 035e DBB2     		uxtb	r3, r3
 619 0360 012B     		cmp	r3, #1
 620 0362 02D1     		bne	.L45
 621              		.loc 1 337 0 is_stmt 0 discriminator 1
 622 0364 A04B     		ldr	r3, .L159
 623 0366 1B68     		ldr	r3, [r3]
 624 0368 1AE0     		b	.L46
 625              	.L45:
 626 036a 0223     		movs	r3, #2
 627 036c C7F83831 		str	r3, [r7, #312]
 628              	.LBB157:
 629              	.LBB158:
 531:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 630              		.loc 2 531 0 is_stmt 1 discriminator 2
 631 0370 D7F83831 		ldr	r3, [r7, #312]
 632              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 633 0374 93FAA3F3 		rbit r3, r3
 634              	@ 0 "" 2
 635              		.thumb
 636 0378 C7F83431 		str	r3, [r7, #308]
 637              		.loc 2 544 0 discriminator 2
ARM GAS  /tmp/cc33CDhW.s 			page 28


 638 037c D7F83431 		ldr	r3, [r7, #308]
 639              	.LBE158:
 640              	.LBE157:
 641              		.loc 1 337 0 discriminator 2
 642 0380 B3FA83F3 		clz	r3, r3
 643 0384 DBB2     		uxtb	r3, r3
 644 0386 43F02003 		orr	r3, r3, #32
 645 038a DBB2     		uxtb	r3, r3
 646 038c DBB2     		uxtb	r3, r3
 647 038e 5B09     		lsrs	r3, r3, #5
 648 0390 DBB2     		uxtb	r3, r3
 649 0392 022B     		cmp	r3, #2
 650 0394 02D1     		bne	.L48
 651              		.loc 1 337 0 is_stmt 0 discriminator 4
 652 0396 944B     		ldr	r3, .L159
 653 0398 1B6A     		ldr	r3, [r3, #32]
 654 039a 01E0     		b	.L46
 655              	.L48:
 656              		.loc 1 337 0 discriminator 5
 657 039c 924B     		ldr	r3, .L159
 658 039e 5B6A     		ldr	r3, [r3, #36]
 659              	.L46:
 660 03a0 0222     		movs	r2, #2
 661 03a2 C7F83021 		str	r2, [r7, #304]
 662              	.LBB159:
 663              	.LBB160:
 531:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 664              		.loc 2 531 0 is_stmt 1 discriminator 8
 665 03a6 D7F83021 		ldr	r2, [r7, #304]
 666              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 667 03aa 92FAA2F2 		rbit r2, r2
 668              	@ 0 "" 2
 669              		.thumb
 670 03ae C7F82C21 		str	r2, [r7, #300]
 671              		.loc 2 544 0 discriminator 8
 672 03b2 D7F82C21 		ldr	r2, [r7, #300]
 673              	.LBE160:
 674              	.LBE159:
 675              		.loc 1 337 0 discriminator 8
 676 03b6 B2FA82F2 		clz	r2, r2
 677 03ba D2B2     		uxtb	r2, r2
 678 03bc 42F02002 		orr	r2, r2, #32
 679 03c0 D2B2     		uxtb	r2, r2
 680 03c2 D2B2     		uxtb	r2, r2
 681 03c4 02F01F02 		and	r2, r2, #31
 682 03c8 D340     		lsrs	r3, r3, r2
 683 03ca 03F00103 		and	r3, r3, #1
 684 03ce 002B     		cmp	r3, #0
 685 03d0 07D0     		beq	.L51
 686              		.loc 1 337 0 is_stmt 0 discriminator 9
 687 03d2 3B1D     		adds	r3, r7, #4
 688 03d4 1B68     		ldr	r3, [r3]
 689 03d6 1B69     		ldr	r3, [r3, #16]
 690 03d8 012B     		cmp	r3, #1
 691 03da 02D0     		beq	.L51
 338:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       {
 339:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         return HAL_ERROR;
ARM GAS  /tmp/cc33CDhW.s 			page 29


 692              		.loc 1 339 0 is_stmt 1
 693 03dc 0123     		movs	r3, #1
 694 03de 00F024BD 		b	.L17
 695              	.L51:
 340:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       }
 341:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       /* Otherwise, just the calibration is allowed */
 342:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       else
 343:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       {
 344:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         /* Adjusts the Internal High Speed oscillator (HSI) calibration value.*/
 345:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 696              		.loc 1 345 0
 697 03e2 8148     		ldr	r0, .L159
 698 03e4 804B     		ldr	r3, .L159
 699 03e6 1B68     		ldr	r3, [r3]
 700 03e8 23F0F802 		bic	r2, r3, #248
 701 03ec 3B1D     		adds	r3, r7, #4
 702 03ee 1B68     		ldr	r3, [r3]
 703 03f0 5969     		ldr	r1, [r3, #20]
 704 03f2 F823     		movs	r3, #248
 705 03f4 C7F82831 		str	r3, [r7, #296]
 706              	.LBB161:
 707              	.LBB162:
 531:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 708              		.loc 2 531 0
 709 03f8 D7F82831 		ldr	r3, [r7, #296]
 710              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 711 03fc 93FAA3F3 		rbit r3, r3
 712              	@ 0 "" 2
 713              		.thumb
 714 0400 C7F82431 		str	r3, [r7, #292]
 715              		.loc 2 544 0
 716 0404 D7F82431 		ldr	r3, [r7, #292]
 717              	.LBE162:
 718              	.LBE161:
 719              		.loc 1 345 0
 720 0408 B3FA83F3 		clz	r3, r3
 721 040c 01FA03F3 		lsl	r3, r1, r3
 722 0410 1343     		orrs	r3, r3, r2
 723 0412 0360     		str	r3, [r0]
 337:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       {
 724              		.loc 1 337 0
 725 0414 05E1     		b	.L41
 726              	.L43:
 346:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       }
 347:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     }
 348:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     else
 349:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     {
 350:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       /* Check the HSI State */
 351:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       if(RCC_OscInitStruct->HSIState != RCC_HSI_OFF)
 727              		.loc 1 351 0
 728 0416 3B1D     		adds	r3, r7, #4
 729 0418 1B68     		ldr	r3, [r3]
 730 041a 1B69     		ldr	r3, [r3, #16]
 731 041c 002B     		cmp	r3, #0
 732 041e 00F08C80 		beq	.L53
 733 0422 0123     		movs	r3, #1
 734 0424 C7F82031 		str	r3, [r7, #288]
ARM GAS  /tmp/cc33CDhW.s 			page 30


 735              	.LBB163:
 736              	.LBB164:
 531:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 737              		.loc 2 531 0
 738 0428 D7F82031 		ldr	r3, [r7, #288]
 739              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 740 042c 93FAA3F3 		rbit r3, r3
 741              	@ 0 "" 2
 742              		.thumb
 743 0430 C7F81C31 		str	r3, [r7, #284]
 744              		.loc 2 544 0
 745 0434 D7F81C31 		ldr	r3, [r7, #284]
 746              	.LBE164:
 747              	.LBE163:
 352:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       {
 353:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****        /* Enable the Internal High Speed oscillator (HSI). */
 354:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         __HAL_RCC_HSI_ENABLE();
 748              		.loc 1 354 0
 749 0438 B3FA83F3 		clz	r3, r3
 750 043c 9B00     		lsls	r3, r3, #2
 751 043e 03F18443 		add	r3, r3, #1107296256
 752 0442 03F58403 		add	r3, r3, #4325376
 753 0446 1A46     		mov	r2, r3
 754 0448 0123     		movs	r3, #1
 755 044a 1360     		str	r3, [r2]
 355:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         
 356:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         /* Get Start Tick */
 357:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 756              		.loc 1 357 0
 757 044c FFF7FEFF 		bl	HAL_GetTick
 758 0450 C7F88C01 		str	r0, [r7, #396]
 358:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         
 359:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         /* Wait till HSI is ready */
 360:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 759              		.loc 1 360 0
 760 0454 0AE0     		b	.L55
 761              	.L63:
 361:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         {
 362:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 762              		.loc 1 362 0
 763 0456 FFF7FEFF 		bl	HAL_GetTick
 764 045a 0246     		mov	r2, r0
 765 045c D7F88C31 		ldr	r3, [r7, #396]
 766 0460 D31A     		subs	r3, r2, r3
 767 0462 022B     		cmp	r3, #2
 768 0464 02D9     		bls	.L55
 363:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           {
 364:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****             return HAL_TIMEOUT;
 769              		.loc 1 364 0
 770 0466 0323     		movs	r3, #3
 771 0468 00F0DFBC 		b	.L17
 772              	.L55:
 773 046c 0223     		movs	r3, #2
 774 046e C7F81831 		str	r3, [r7, #280]
 775              	.LBB165:
 776              	.LBB166:
 531:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
ARM GAS  /tmp/cc33CDhW.s 			page 31


 777              		.loc 2 531 0
 778 0472 D7F81831 		ldr	r3, [r7, #280]
 779              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 780 0476 93FAA3F3 		rbit r3, r3
 781              	@ 0 "" 2
 782              		.thumb
 783 047a C7F81431 		str	r3, [r7, #276]
 784              		.loc 2 544 0
 785 047e D7F81431 		ldr	r3, [r7, #276]
 786              	.LBE166:
 787              	.LBE165:
 360:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         {
 788              		.loc 1 360 0
 789 0482 B3FA83F3 		clz	r3, r3
 790 0486 DBB2     		uxtb	r3, r3
 791 0488 43F02003 		orr	r3, r3, #32
 792 048c DBB2     		uxtb	r3, r3
 793 048e DBB2     		uxtb	r3, r3
 794 0490 5B09     		lsrs	r3, r3, #5
 795 0492 DBB2     		uxtb	r3, r3
 796 0494 012B     		cmp	r3, #1
 797 0496 02D1     		bne	.L57
 360:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         {
 798              		.loc 1 360 0 is_stmt 0 discriminator 1
 799 0498 534B     		ldr	r3, .L159
 800 049a 1B68     		ldr	r3, [r3]
 801 049c 1AE0     		b	.L58
 802              	.L57:
 803 049e 0223     		movs	r3, #2
 804 04a0 C7F81031 		str	r3, [r7, #272]
 805              	.LBB167:
 806              	.LBB168:
 531:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 807              		.loc 2 531 0 is_stmt 1 discriminator 2
 808 04a4 D7F81031 		ldr	r3, [r7, #272]
 809              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 810 04a8 93FAA3F3 		rbit r3, r3
 811              	@ 0 "" 2
 812              		.thumb
 813 04ac C7F80C31 		str	r3, [r7, #268]
 814              		.loc 2 544 0 discriminator 2
 815 04b0 D7F80C31 		ldr	r3, [r7, #268]
 816              	.LBE168:
 817              	.LBE167:
 360:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         {
 818              		.loc 1 360 0 discriminator 2
 819 04b4 B3FA83F3 		clz	r3, r3
 820 04b8 DBB2     		uxtb	r3, r3
 821 04ba 43F02003 		orr	r3, r3, #32
 822 04be DBB2     		uxtb	r3, r3
 823 04c0 DBB2     		uxtb	r3, r3
 824 04c2 5B09     		lsrs	r3, r3, #5
 825 04c4 DBB2     		uxtb	r3, r3
 826 04c6 022B     		cmp	r3, #2
 827 04c8 02D1     		bne	.L60
 360:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         {
 828              		.loc 1 360 0 is_stmt 0 discriminator 4
ARM GAS  /tmp/cc33CDhW.s 			page 32


 829 04ca 474B     		ldr	r3, .L159
 830 04cc 1B6A     		ldr	r3, [r3, #32]
 831 04ce 01E0     		b	.L58
 832              	.L60:
 360:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         {
 833              		.loc 1 360 0 discriminator 5
 834 04d0 454B     		ldr	r3, .L159
 835 04d2 5B6A     		ldr	r3, [r3, #36]
 836              	.L58:
 837 04d4 0222     		movs	r2, #2
 838 04d6 C7F80821 		str	r2, [r7, #264]
 839              	.LBB169:
 840              	.LBB170:
 531:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 841              		.loc 2 531 0 is_stmt 1 discriminator 8
 842 04da D7F80821 		ldr	r2, [r7, #264]
 843              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 844 04de 92FAA2F2 		rbit r2, r2
 845              	@ 0 "" 2
 846              		.thumb
 847 04e2 C7F80421 		str	r2, [r7, #260]
 848              		.loc 2 544 0 discriminator 8
 849 04e6 D7F80421 		ldr	r2, [r7, #260]
 850              	.LBE170:
 851              	.LBE169:
 360:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         {
 852              		.loc 1 360 0 discriminator 8
 853 04ea B2FA82F2 		clz	r2, r2
 854 04ee D2B2     		uxtb	r2, r2
 855 04f0 42F02002 		orr	r2, r2, #32
 856 04f4 D2B2     		uxtb	r2, r2
 857 04f6 D2B2     		uxtb	r2, r2
 858 04f8 02F01F02 		and	r2, r2, #31
 859 04fc D340     		lsrs	r3, r3, r2
 860 04fe 03F00103 		and	r3, r3, #1
 861 0502 002B     		cmp	r3, #0
 862 0504 A7D0     		beq	.L63
 365:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           }
 366:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         }
 367:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****                 
 368:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         /* Adjusts the Internal High Speed oscillator (HSI) calibration value.*/
 369:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 863              		.loc 1 369 0
 864 0506 3848     		ldr	r0, .L159
 865 0508 374B     		ldr	r3, .L159
 866 050a 1B68     		ldr	r3, [r3]
 867 050c 23F0F802 		bic	r2, r3, #248
 868 0510 3B1D     		adds	r3, r7, #4
 869 0512 1B68     		ldr	r3, [r3]
 870 0514 5969     		ldr	r1, [r3, #20]
 871 0516 F823     		movs	r3, #248
 872 0518 C7F80031 		str	r3, [r7, #256]
 873              	.LBB171:
 874              	.LBB172:
 531:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 875              		.loc 2 531 0
 876 051c D7F80031 		ldr	r3, [r7, #256]
ARM GAS  /tmp/cc33CDhW.s 			page 33


 877              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 878 0520 93FAA3F3 		rbit r3, r3
 879              	@ 0 "" 2
 880              		.thumb
 881 0524 C7F8FC30 		str	r3, [r7, #252]
 882              		.loc 2 544 0
 883 0528 D7F8FC30 		ldr	r3, [r7, #252]
 884              	.LBE172:
 885              	.LBE171:
 886              		.loc 1 369 0
 887 052c B3FA83F3 		clz	r3, r3
 888 0530 01FA03F3 		lsl	r3, r1, r3
 889 0534 1343     		orrs	r3, r3, r2
 890 0536 0360     		str	r3, [r0]
 891 0538 73E0     		b	.L41
 892              	.L53:
 893 053a 0123     		movs	r3, #1
 894 053c C7F8F830 		str	r3, [r7, #248]
 895              	.LBB173:
 896              	.LBB174:
 531:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 897              		.loc 2 531 0
 898 0540 D7F8F830 		ldr	r3, [r7, #248]
 899              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 900 0544 93FAA3F3 		rbit r3, r3
 901              	@ 0 "" 2
 902              		.thumb
 903 0548 C7F8F430 		str	r3, [r7, #244]
 904              		.loc 2 544 0
 905 054c D7F8F430 		ldr	r3, [r7, #244]
 906              	.LBE174:
 907              	.LBE173:
 370:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       }
 371:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       else
 372:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       {
 373:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         /* Disable the Internal High Speed oscillator (HSI). */
 374:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         __HAL_RCC_HSI_DISABLE();
 908              		.loc 1 374 0
 909 0550 B3FA83F3 		clz	r3, r3
 910 0554 9B00     		lsls	r3, r3, #2
 911 0556 03F18443 		add	r3, r3, #1107296256
 912 055a 03F58403 		add	r3, r3, #4325376
 913 055e 1A46     		mov	r2, r3
 914 0560 0023     		movs	r3, #0
 915 0562 1360     		str	r3, [r2]
 375:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         
 376:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         /* Get Start Tick */
 377:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 916              		.loc 1 377 0
 917 0564 FFF7FEFF 		bl	HAL_GetTick
 918 0568 C7F88C01 		str	r0, [r7, #396]
 378:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         
 379:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         /* Wait till HSI is disabled */
 380:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 919              		.loc 1 380 0
 920 056c 0AE0     		b	.L66
 921              	.L74:
ARM GAS  /tmp/cc33CDhW.s 			page 34


 381:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         {
 382:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 922              		.loc 1 382 0
 923 056e FFF7FEFF 		bl	HAL_GetTick
 924 0572 0246     		mov	r2, r0
 925 0574 D7F88C31 		ldr	r3, [r7, #396]
 926 0578 D31A     		subs	r3, r2, r3
 927 057a 022B     		cmp	r3, #2
 928 057c 02D9     		bls	.L66
 383:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           {
 384:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****             return HAL_TIMEOUT;
 929              		.loc 1 384 0
 930 057e 0323     		movs	r3, #3
 931 0580 00F053BC 		b	.L17
 932              	.L66:
 933 0584 0223     		movs	r3, #2
 934 0586 C7F8F030 		str	r3, [r7, #240]
 935              	.LBB175:
 936              	.LBB176:
 531:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 937              		.loc 2 531 0
 938 058a D7F8F030 		ldr	r3, [r7, #240]
 939              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 940 058e 93FAA3F3 		rbit r3, r3
 941              	@ 0 "" 2
 942              		.thumb
 943 0592 C7F8EC30 		str	r3, [r7, #236]
 944              		.loc 2 544 0
 945 0596 D7F8EC30 		ldr	r3, [r7, #236]
 946              	.LBE176:
 947              	.LBE175:
 380:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         {
 948              		.loc 1 380 0
 949 059a B3FA83F3 		clz	r3, r3
 950 059e DBB2     		uxtb	r3, r3
 951 05a0 43F02003 		orr	r3, r3, #32
 952 05a4 DBB2     		uxtb	r3, r3
 953 05a6 DBB2     		uxtb	r3, r3
 954 05a8 5B09     		lsrs	r3, r3, #5
 955 05aa DBB2     		uxtb	r3, r3
 956 05ac 012B     		cmp	r3, #1
 957 05ae 02D1     		bne	.L68
 380:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         {
 958              		.loc 1 380 0 is_stmt 0 discriminator 1
 959 05b0 0D4B     		ldr	r3, .L159
 960 05b2 1B68     		ldr	r3, [r3]
 961 05b4 1CE0     		b	.L69
 962              	.L68:
 963 05b6 0223     		movs	r3, #2
 964 05b8 C7F8E830 		str	r3, [r7, #232]
 965              	.LBB177:
 966              	.LBB178:
 531:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 967              		.loc 2 531 0 is_stmt 1 discriminator 2
 968 05bc D7F8E830 		ldr	r3, [r7, #232]
 969              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 970 05c0 93FAA3F3 		rbit r3, r3
ARM GAS  /tmp/cc33CDhW.s 			page 35


 971              	@ 0 "" 2
 972              		.thumb
 973 05c4 C7F8E430 		str	r3, [r7, #228]
 974              		.loc 2 544 0 discriminator 2
 975 05c8 D7F8E430 		ldr	r3, [r7, #228]
 976              	.LBE178:
 977              	.LBE177:
 380:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         {
 978              		.loc 1 380 0 discriminator 2
 979 05cc B3FA83F3 		clz	r3, r3
 980 05d0 DBB2     		uxtb	r3, r3
 981 05d2 43F02003 		orr	r3, r3, #32
 982 05d6 DBB2     		uxtb	r3, r3
 983 05d8 DBB2     		uxtb	r3, r3
 984 05da 5B09     		lsrs	r3, r3, #5
 985 05dc DBB2     		uxtb	r3, r3
 986 05de 022B     		cmp	r3, #2
 987 05e0 04D1     		bne	.L71
 380:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         {
 988              		.loc 1 380 0 is_stmt 0 discriminator 4
 989 05e2 014B     		ldr	r3, .L159
 990 05e4 1B6A     		ldr	r3, [r3, #32]
 991 05e6 03E0     		b	.L69
 992              	.L160:
 993              		.align	2
 994              	.L159:
 995 05e8 00100240 		.word	1073876992
 996              	.L71:
 380:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         {
 997              		.loc 1 380 0 discriminator 5
 998 05ec B74B     		ldr	r3, .L161
 999 05ee 5B6A     		ldr	r3, [r3, #36]
 1000              	.L69:
 1001 05f0 0222     		movs	r2, #2
 1002 05f2 C7F8E020 		str	r2, [r7, #224]
 1003              	.LBB179:
 1004              	.LBB180:
 531:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 1005              		.loc 2 531 0 is_stmt 1 discriminator 8
 1006 05f6 D7F8E020 		ldr	r2, [r7, #224]
 1007              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1008 05fa 92FAA2F2 		rbit r2, r2
 1009              	@ 0 "" 2
 1010              		.thumb
 1011 05fe C7F8DC20 		str	r2, [r7, #220]
 1012              		.loc 2 544 0 discriminator 8
 1013 0602 D7F8DC20 		ldr	r2, [r7, #220]
 1014              	.LBE180:
 1015              	.LBE179:
 380:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         {
 1016              		.loc 1 380 0 discriminator 8
 1017 0606 B2FA82F2 		clz	r2, r2
 1018 060a D2B2     		uxtb	r2, r2
 1019 060c 42F02002 		orr	r2, r2, #32
 1020 0610 D2B2     		uxtb	r2, r2
 1021 0612 D2B2     		uxtb	r2, r2
 1022 0614 02F01F02 		and	r2, r2, #31
ARM GAS  /tmp/cc33CDhW.s 			page 36


 1023 0618 D340     		lsrs	r3, r3, r2
 1024 061a 03F00103 		and	r3, r3, #1
 1025 061e 002B     		cmp	r3, #0
 1026 0620 A5D1     		bne	.L74
 1027              	.L41:
 385:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           }
 386:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         }
 387:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       }
 388:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     }
 389:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   }
 390:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   /*------------------------------ LSI Configuration -------------------------*/ 
 391:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 1028              		.loc 1 391 0
 1029 0622 3B1D     		adds	r3, r7, #4
 1030 0624 1B68     		ldr	r3, [r3]
 1031 0626 1B68     		ldr	r3, [r3]
 1032 0628 03F00803 		and	r3, r3, #8
 1033 062c 002B     		cmp	r3, #0
 1034 062e 00F0E980 		beq	.L75
 392:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   {
 393:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     /* Check the parameters */
 394:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     assert_param(IS_RCC_LSI(RCC_OscInitStruct->LSIState));
 395:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     
 396:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     /* Check the LSI State */
 397:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     if(RCC_OscInitStruct->LSIState != RCC_LSI_OFF)
 1035              		.loc 1 397 0
 1036 0632 3B1D     		adds	r3, r7, #4
 1037 0634 1B68     		ldr	r3, [r3]
 1038 0636 9B69     		ldr	r3, [r3, #24]
 1039 0638 002B     		cmp	r3, #0
 1040 063a 73D0     		beq	.L76
 1041 063c 0123     		movs	r3, #1
 1042 063e C7F8D830 		str	r3, [r7, #216]
 1043              	.LBB181:
 1044              	.LBB182:
 531:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 1045              		.loc 2 531 0
 1046 0642 D7F8D830 		ldr	r3, [r7, #216]
 1047              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1048 0646 93FAA3F3 		rbit r3, r3
 1049              	@ 0 "" 2
 1050              		.thumb
 1051 064a C7F8D430 		str	r3, [r7, #212]
 1052              		.loc 2 544 0
 1053 064e D7F8D430 		ldr	r3, [r7, #212]
 1054              	.LBE182:
 1055              	.LBE181:
 398:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     {
 399:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       /* Enable the Internal Low Speed oscillator (LSI). */
 400:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       __HAL_RCC_LSI_ENABLE();
 1056              		.loc 1 400 0
 1057 0652 B3FA83F3 		clz	r3, r3
 1058 0656 9B00     		lsls	r3, r3, #2
 1059 0658 1A46     		mov	r2, r3
 1060 065a 9D4B     		ldr	r3, .L161+4
 1061 065c 1344     		add	r3, r3, r2
 1062 065e 1A46     		mov	r2, r3
ARM GAS  /tmp/cc33CDhW.s 			page 37


 1063 0660 0123     		movs	r3, #1
 1064 0662 1360     		str	r3, [r2]
 401:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       
 402:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       /* Get Start Tick */
 403:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       tickstart = HAL_GetTick();
 1065              		.loc 1 403 0
 1066 0664 FFF7FEFF 		bl	HAL_GetTick
 1067 0668 C7F88C01 		str	r0, [r7, #396]
 404:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       
 405:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       /* Wait till LSI is ready */  
 406:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 1068              		.loc 1 406 0
 1069 066c 09E0     		b	.L78
 1070              	.L86:
 407:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       {
 408:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 1071              		.loc 1 408 0
 1072 066e FFF7FEFF 		bl	HAL_GetTick
 1073 0672 0246     		mov	r2, r0
 1074 0674 D7F88C31 		ldr	r3, [r7, #396]
 1075 0678 D31A     		subs	r3, r2, r3
 1076 067a 022B     		cmp	r3, #2
 1077 067c 01D9     		bls	.L78
 409:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         {
 410:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           return HAL_TIMEOUT;
 1078              		.loc 1 410 0
 1079 067e 0323     		movs	r3, #3
 1080 0680 D3E3     		b	.L17
 1081              	.L78:
 1082 0682 0223     		movs	r3, #2
 1083 0684 C7F8D030 		str	r3, [r7, #208]
 1084              	.LBB183:
 1085              	.LBB184:
 531:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 1086              		.loc 2 531 0
 1087 0688 D7F8D030 		ldr	r3, [r7, #208]
 1088              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1089 068c 93FAA3F3 		rbit r3, r3
 1090              	@ 0 "" 2
 1091              		.thumb
 1092 0690 C7F8CC30 		str	r3, [r7, #204]
 1093              		.loc 2 544 0
 1094 0694 D7F8CC30 		ldr	r3, [r7, #204]
 1095              	.LBE184:
 1096              	.LBE183:
 406:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       {
 1097              		.loc 1 406 0
 1098 0698 B3FA83F3 		clz	r3, r3
 1099 069c DBB2     		uxtb	r3, r3
 1100 069e 43F06003 		orr	r3, r3, #96
 1101 06a2 DBB2     		uxtb	r3, r3
 1102 06a4 DBB2     		uxtb	r3, r3
 1103 06a6 5B09     		lsrs	r3, r3, #5
 1104 06a8 DBB2     		uxtb	r3, r3
 1105 06aa 012B     		cmp	r3, #1
 1106 06ac 02D1     		bne	.L80
 406:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       {
ARM GAS  /tmp/cc33CDhW.s 			page 38


 1107              		.loc 1 406 0 is_stmt 0 discriminator 1
 1108 06ae 874B     		ldr	r3, .L161
 1109 06b0 1B68     		ldr	r3, [r3]
 1110 06b2 1AE0     		b	.L81
 1111              	.L80:
 1112 06b4 0223     		movs	r3, #2
 1113 06b6 C7F8C830 		str	r3, [r7, #200]
 1114              	.LBB185:
 1115              	.LBB186:
 531:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 1116              		.loc 2 531 0 is_stmt 1 discriminator 2
 1117 06ba D7F8C830 		ldr	r3, [r7, #200]
 1118              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1119 06be 93FAA3F3 		rbit r3, r3
 1120              	@ 0 "" 2
 1121              		.thumb
 1122 06c2 C7F8C430 		str	r3, [r7, #196]
 1123              		.loc 2 544 0 discriminator 2
 1124 06c6 D7F8C430 		ldr	r3, [r7, #196]
 1125              	.LBE186:
 1126              	.LBE185:
 406:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       {
 1127              		.loc 1 406 0 discriminator 2
 1128 06ca B3FA83F3 		clz	r3, r3
 1129 06ce DBB2     		uxtb	r3, r3
 1130 06d0 43F06003 		orr	r3, r3, #96
 1131 06d4 DBB2     		uxtb	r3, r3
 1132 06d6 DBB2     		uxtb	r3, r3
 1133 06d8 5B09     		lsrs	r3, r3, #5
 1134 06da DBB2     		uxtb	r3, r3
 1135 06dc 022B     		cmp	r3, #2
 1136 06de 02D1     		bne	.L83
 406:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       {
 1137              		.loc 1 406 0 is_stmt 0 discriminator 4
 1138 06e0 7A4B     		ldr	r3, .L161
 1139 06e2 1B6A     		ldr	r3, [r3, #32]
 1140 06e4 01E0     		b	.L81
 1141              	.L83:
 406:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       {
 1142              		.loc 1 406 0 discriminator 5
 1143 06e6 794B     		ldr	r3, .L161
 1144 06e8 5B6A     		ldr	r3, [r3, #36]
 1145              	.L81:
 1146 06ea 0222     		movs	r2, #2
 1147 06ec C7F8C020 		str	r2, [r7, #192]
 1148              	.LBB187:
 1149              	.LBB188:
 531:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 1150              		.loc 2 531 0 is_stmt 1 discriminator 8
 1151 06f0 D7F8C020 		ldr	r2, [r7, #192]
 1152              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1153 06f4 92FAA2F2 		rbit r2, r2
 1154              	@ 0 "" 2
 1155              		.thumb
 1156 06f8 C7F8BC20 		str	r2, [r7, #188]
 1157              		.loc 2 544 0 discriminator 8
 1158 06fc D7F8BC20 		ldr	r2, [r7, #188]
ARM GAS  /tmp/cc33CDhW.s 			page 39


 1159              	.LBE188:
 1160              	.LBE187:
 406:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       {
 1161              		.loc 1 406 0 discriminator 8
 1162 0700 B2FA82F2 		clz	r2, r2
 1163 0704 D2B2     		uxtb	r2, r2
 1164 0706 42F06002 		orr	r2, r2, #96
 1165 070a D2B2     		uxtb	r2, r2
 1166 070c D2B2     		uxtb	r2, r2
 1167 070e 02F01F02 		and	r2, r2, #31
 1168 0712 D340     		lsrs	r3, r3, r2
 1169 0714 03F00103 		and	r3, r3, #1
 1170 0718 002B     		cmp	r3, #0
 1171 071a A8D0     		beq	.L86
 411:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         }
 412:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       }
 413:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       /*  To have a fully stabilized clock in the specified range, a software delay of 1ms 
 414:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           should be added.*/
 415:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       HAL_Delay(1);
 1172              		.loc 1 415 0
 1173 071c 0120     		movs	r0, #1
 1174 071e FFF7FEFF 		bl	HAL_Delay
 1175 0722 6FE0     		b	.L75
 1176              	.L76:
 1177 0724 0123     		movs	r3, #1
 1178 0726 C7F8B830 		str	r3, [r7, #184]
 1179              	.LBB189:
 1180              	.LBB190:
 531:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 1181              		.loc 2 531 0
 1182 072a D7F8B830 		ldr	r3, [r7, #184]
 1183              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1184 072e 93FAA3F3 		rbit r3, r3
 1185              	@ 0 "" 2
 1186              		.thumb
 1187 0732 C7F8B430 		str	r3, [r7, #180]
 1188              		.loc 2 544 0
 1189 0736 D7F8B430 		ldr	r3, [r7, #180]
 1190              	.LBE190:
 1191              	.LBE189:
 416:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     }
 417:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     else
 418:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     {
 419:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       /* Disable the Internal Low Speed oscillator (LSI). */
 420:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       __HAL_RCC_LSI_DISABLE();
 1192              		.loc 1 420 0
 1193 073a B3FA83F3 		clz	r3, r3
 1194 073e 9B00     		lsls	r3, r3, #2
 1195 0740 1A46     		mov	r2, r3
 1196 0742 634B     		ldr	r3, .L161+4
 1197 0744 1344     		add	r3, r3, r2
 1198 0746 1A46     		mov	r2, r3
 1199 0748 0023     		movs	r3, #0
 1200 074a 1360     		str	r3, [r2]
 421:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       
 422:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       /* Get Start Tick */
 423:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       tickstart = HAL_GetTick();
ARM GAS  /tmp/cc33CDhW.s 			page 40


 1201              		.loc 1 423 0
 1202 074c FFF7FEFF 		bl	HAL_GetTick
 1203 0750 C7F88C01 		str	r0, [r7, #396]
 424:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       
 425:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       /* Wait till LSI is disabled */  
 426:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 1204              		.loc 1 426 0
 1205 0754 09E0     		b	.L88
 1206              	.L96:
 427:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       {
 428:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 1207              		.loc 1 428 0
 1208 0756 FFF7FEFF 		bl	HAL_GetTick
 1209 075a 0246     		mov	r2, r0
 1210 075c D7F88C31 		ldr	r3, [r7, #396]
 1211 0760 D31A     		subs	r3, r2, r3
 1212 0762 022B     		cmp	r3, #2
 1213 0764 01D9     		bls	.L88
 429:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         {
 430:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           return HAL_TIMEOUT;
 1214              		.loc 1 430 0
 1215 0766 0323     		movs	r3, #3
 1216 0768 5FE3     		b	.L17
 1217              	.L88:
 1218 076a 0223     		movs	r3, #2
 1219 076c C7F8B030 		str	r3, [r7, #176]
 1220              	.LBB191:
 1221              	.LBB192:
 531:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 1222              		.loc 2 531 0
 1223 0770 D7F8B030 		ldr	r3, [r7, #176]
 1224              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1225 0774 93FAA3F3 		rbit r3, r3
 1226              	@ 0 "" 2
 1227              		.thumb
 1228 0778 C7F8AC30 		str	r3, [r7, #172]
 1229              		.loc 2 544 0
 1230 077c D7F8AC30 		ldr	r3, [r7, #172]
 1231              	.LBE192:
 1232              	.LBE191:
 426:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       {
 1233              		.loc 1 426 0
 1234 0780 B3FA83F3 		clz	r3, r3
 1235 0784 DBB2     		uxtb	r3, r3
 1236 0786 43F06003 		orr	r3, r3, #96
 1237 078a DBB2     		uxtb	r3, r3
 1238 078c DBB2     		uxtb	r3, r3
 1239 078e 5B09     		lsrs	r3, r3, #5
 1240 0790 DBB2     		uxtb	r3, r3
 1241 0792 012B     		cmp	r3, #1
 1242 0794 02D1     		bne	.L90
 426:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       {
 1243              		.loc 1 426 0 is_stmt 0 discriminator 1
 1244 0796 4D4B     		ldr	r3, .L161
 1245 0798 1B68     		ldr	r3, [r3]
 1246 079a 1AE0     		b	.L91
 1247              	.L90:
ARM GAS  /tmp/cc33CDhW.s 			page 41


 1248 079c 0223     		movs	r3, #2
 1249 079e C7F8A830 		str	r3, [r7, #168]
 1250              	.LBB193:
 1251              	.LBB194:
 531:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 1252              		.loc 2 531 0 is_stmt 1 discriminator 2
 1253 07a2 D7F8A830 		ldr	r3, [r7, #168]
 1254              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1255 07a6 93FAA3F3 		rbit r3, r3
 1256              	@ 0 "" 2
 1257              		.thumb
 1258 07aa C7F8A430 		str	r3, [r7, #164]
 1259              		.loc 2 544 0 discriminator 2
 1260 07ae D7F8A430 		ldr	r3, [r7, #164]
 1261              	.LBE194:
 1262              	.LBE193:
 426:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       {
 1263              		.loc 1 426 0 discriminator 2
 1264 07b2 B3FA83F3 		clz	r3, r3
 1265 07b6 DBB2     		uxtb	r3, r3
 1266 07b8 43F06003 		orr	r3, r3, #96
 1267 07bc DBB2     		uxtb	r3, r3
 1268 07be DBB2     		uxtb	r3, r3
 1269 07c0 5B09     		lsrs	r3, r3, #5
 1270 07c2 DBB2     		uxtb	r3, r3
 1271 07c4 022B     		cmp	r3, #2
 1272 07c6 02D1     		bne	.L93
 426:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       {
 1273              		.loc 1 426 0 is_stmt 0 discriminator 4
 1274 07c8 404B     		ldr	r3, .L161
 1275 07ca 1B6A     		ldr	r3, [r3, #32]
 1276 07cc 01E0     		b	.L91
 1277              	.L93:
 426:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       {
 1278              		.loc 1 426 0 discriminator 5
 1279 07ce 3F4B     		ldr	r3, .L161
 1280 07d0 5B6A     		ldr	r3, [r3, #36]
 1281              	.L91:
 1282 07d2 0222     		movs	r2, #2
 1283 07d4 C7F8A020 		str	r2, [r7, #160]
 1284              	.LBB195:
 1285              	.LBB196:
 531:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 1286              		.loc 2 531 0 is_stmt 1 discriminator 8
 1287 07d8 D7F8A020 		ldr	r2, [r7, #160]
 1288              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1289 07dc 92FAA2F2 		rbit r2, r2
 1290              	@ 0 "" 2
 1291              		.thumb
 1292 07e0 C7F89C20 		str	r2, [r7, #156]
 1293              		.loc 2 544 0 discriminator 8
 1294 07e4 D7F89C20 		ldr	r2, [r7, #156]
 1295              	.LBE196:
 1296              	.LBE195:
 426:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       {
 1297              		.loc 1 426 0 discriminator 8
 1298 07e8 B2FA82F2 		clz	r2, r2
ARM GAS  /tmp/cc33CDhW.s 			page 42


 1299 07ec D2B2     		uxtb	r2, r2
 1300 07ee 42F06002 		orr	r2, r2, #96
 1301 07f2 D2B2     		uxtb	r2, r2
 1302 07f4 D2B2     		uxtb	r2, r2
 1303 07f6 02F01F02 		and	r2, r2, #31
 1304 07fa D340     		lsrs	r3, r3, r2
 1305 07fc 03F00103 		and	r3, r3, #1
 1306 0800 002B     		cmp	r3, #0
 1307 0802 A8D1     		bne	.L96
 1308              	.L75:
 431:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         }
 432:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       }
 433:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     }
 434:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   }
 435:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   /*------------------------------ LSE Configuration -------------------------*/ 
 436:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSE) == RCC_OSCILLATORTYPE_LSE)
 1309              		.loc 1 436 0
 1310 0804 3B1D     		adds	r3, r7, #4
 1311 0806 1B68     		ldr	r3, [r3]
 1312 0808 1B68     		ldr	r3, [r3]
 1313 080a 03F00403 		and	r3, r3, #4
 1314 080e 002B     		cmp	r3, #0
 1315 0810 00F04481 		beq	.L97
 1316              	.LBB197:
 437:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   {
 438:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     /* Check the parameters */
 439:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     assert_param(IS_RCC_LSE(RCC_OscInitStruct->LSEState));
 440:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 441:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     /* Enable Power Clock*/
 442:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       __HAL_RCC_PWR_CLK_ENABLE();
 1317              		.loc 1 442 0
 1318 0814 2D4A     		ldr	r2, .L161
 1319 0816 2D4B     		ldr	r3, .L161
 1320 0818 DB69     		ldr	r3, [r3, #28]
 1321 081a 43F08053 		orr	r3, r3, #268435456
 1322 081e D361     		str	r3, [r2, #28]
 1323 0820 2A4B     		ldr	r3, .L161
 1324 0822 DB69     		ldr	r3, [r3, #28]
 1325 0824 03F08052 		and	r2, r3, #268435456
 1326 0828 07F10803 		add	r3, r7, #8
 1327 082c 1A60     		str	r2, [r3]
 1328 082e 07F10803 		add	r3, r7, #8
 1329 0832 1B68     		ldr	r3, [r3]
 1330              	.LBE197:
 443:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     
 444:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       /* Enable write access to Backup domain */
 445:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       SET_BIT(PWR->CR, PWR_CR_DBP);
 1331              		.loc 1 445 0
 1332 0834 274A     		ldr	r2, .L161+8
 1333 0836 274B     		ldr	r3, .L161+8
 1334 0838 1B68     		ldr	r3, [r3]
 1335 083a 43F48073 		orr	r3, r3, #256
 1336 083e 1360     		str	r3, [r2]
 446:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       
 447:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       /* Wait for Backup domain Write protection disable */
 448:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       tickstart = HAL_GetTick();
 1337              		.loc 1 448 0
ARM GAS  /tmp/cc33CDhW.s 			page 43


 1338 0840 FFF7FEFF 		bl	HAL_GetTick
 1339 0844 C7F88C01 		str	r0, [r7, #396]
 449:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 450:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     while((PWR->CR & PWR_CR_DBP) == RESET)
 1340              		.loc 1 450 0
 1341 0848 09E0     		b	.L98
 1342              	.L99:
 451:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       {
 452:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         if((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 1343              		.loc 1 452 0
 1344 084a FFF7FEFF 		bl	HAL_GetTick
 1345 084e 0246     		mov	r2, r0
 1346 0850 D7F88C31 		ldr	r3, [r7, #396]
 1347 0854 D31A     		subs	r3, r2, r3
 1348 0856 642B     		cmp	r3, #100
 1349 0858 01D9     		bls	.L98
 453:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         {
 454:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           return HAL_TIMEOUT;
 1350              		.loc 1 454 0
 1351 085a 0323     		movs	r3, #3
 1352 085c E5E2     		b	.L17
 1353              	.L98:
 450:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       {
 1354              		.loc 1 450 0
 1355 085e 1D4B     		ldr	r3, .L161+8
 1356 0860 1B68     		ldr	r3, [r3]
 1357 0862 03F48073 		and	r3, r3, #256
 1358 0866 002B     		cmp	r3, #0
 1359 0868 EFD0     		beq	.L99
 455:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         }
 456:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       }
 457:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 458:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     /* Set the new LSE configuration -----------------------------------------*/
 459:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 1360              		.loc 1 459 0
 1361 086a 3B1D     		adds	r3, r7, #4
 1362 086c 1B68     		ldr	r3, [r3]
 1363 086e DB68     		ldr	r3, [r3, #12]
 1364 0870 012B     		cmp	r3, #1
 1365 0872 06D1     		bne	.L100
 1366              		.loc 1 459 0 is_stmt 0 discriminator 1
 1367 0874 154A     		ldr	r2, .L161
 1368 0876 154B     		ldr	r3, .L161
 1369 0878 1B6A     		ldr	r3, [r3, #32]
 1370 087a 43F00103 		orr	r3, r3, #1
 1371 087e 1362     		str	r3, [r2, #32]
 1372 0880 36E0     		b	.L101
 1373              	.L100:
 1374              		.loc 1 459 0 discriminator 2
 1375 0882 3B1D     		adds	r3, r7, #4
 1376 0884 1B68     		ldr	r3, [r3]
 1377 0886 DB68     		ldr	r3, [r3, #12]
 1378 0888 002B     		cmp	r3, #0
 1379 088a 0CD1     		bne	.L102
 1380              		.loc 1 459 0 discriminator 3
 1381 088c 0F4A     		ldr	r2, .L161
 1382 088e 0F4B     		ldr	r3, .L161
ARM GAS  /tmp/cc33CDhW.s 			page 44


 1383 0890 1B6A     		ldr	r3, [r3, #32]
 1384 0892 23F00103 		bic	r3, r3, #1
 1385 0896 1362     		str	r3, [r2, #32]
 1386 0898 0C4A     		ldr	r2, .L161
 1387 089a 0C4B     		ldr	r3, .L161
 1388 089c 1B6A     		ldr	r3, [r3, #32]
 1389 089e 23F00403 		bic	r3, r3, #4
 1390 08a2 1362     		str	r3, [r2, #32]
 1391 08a4 24E0     		b	.L101
 1392              	.L102:
 1393              		.loc 1 459 0 discriminator 4
 1394 08a6 3B1D     		adds	r3, r7, #4
 1395 08a8 1B68     		ldr	r3, [r3]
 1396 08aa DB68     		ldr	r3, [r3, #12]
 1397 08ac 052B     		cmp	r3, #5
 1398 08ae 13D1     		bne	.L103
 1399              		.loc 1 459 0 discriminator 5
 1400 08b0 064A     		ldr	r2, .L161
 1401 08b2 064B     		ldr	r3, .L161
 1402 08b4 1B6A     		ldr	r3, [r3, #32]
 1403 08b6 43F00403 		orr	r3, r3, #4
 1404 08ba 1362     		str	r3, [r2, #32]
 1405 08bc 034A     		ldr	r2, .L161
 1406 08be 034B     		ldr	r3, .L161
 1407 08c0 1B6A     		ldr	r3, [r3, #32]
 1408 08c2 43F00103 		orr	r3, r3, #1
 1409 08c6 1362     		str	r3, [r2, #32]
 1410 08c8 12E0     		b	.L101
 1411              	.L162:
 1412 08ca 00BF     		.align	2
 1413              	.L161:
 1414 08cc 00100240 		.word	1073876992
 1415 08d0 80044242 		.word	1111622784
 1416 08d4 00700040 		.word	1073770496
 1417              	.L103:
 1418              		.loc 1 459 0 discriminator 6
 1419 08d8 AC4A     		ldr	r2, .L163
 1420 08da AC4B     		ldr	r3, .L163
 1421 08dc 1B6A     		ldr	r3, [r3, #32]
 1422 08de 23F00103 		bic	r3, r3, #1
 1423 08e2 1362     		str	r3, [r2, #32]
 1424 08e4 A94A     		ldr	r2, .L163
 1425 08e6 A94B     		ldr	r3, .L163
 1426 08e8 1B6A     		ldr	r3, [r3, #32]
 1427 08ea 23F00403 		bic	r3, r3, #4
 1428 08ee 1362     		str	r3, [r2, #32]
 1429              	.L101:
 460:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     /* Check the LSE State */
 461:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     if(RCC_OscInitStruct->LSEState != RCC_LSE_OFF)
 1430              		.loc 1 461 0 is_stmt 1
 1431 08f0 3B1D     		adds	r3, r7, #4
 1432 08f2 1B68     		ldr	r3, [r3]
 1433 08f4 DB68     		ldr	r3, [r3, #12]
 1434 08f6 002B     		cmp	r3, #0
 1435 08f8 66D0     		beq	.L104
 462:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     {
 463:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       /* Get Start Tick */
ARM GAS  /tmp/cc33CDhW.s 			page 45


 464:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       tickstart = HAL_GetTick();
 1436              		.loc 1 464 0
 1437 08fa FFF7FEFF 		bl	HAL_GetTick
 1438 08fe C7F88C01 		str	r0, [r7, #396]
 465:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       
 466:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       /* Wait till LSE is ready */  
 467:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 1439              		.loc 1 467 0
 1440 0902 0BE0     		b	.L105
 1441              	.L113:
 468:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       {
 469:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 1442              		.loc 1 469 0
 1443 0904 FFF7FEFF 		bl	HAL_GetTick
 1444 0908 0246     		mov	r2, r0
 1445 090a D7F88C31 		ldr	r3, [r7, #396]
 1446 090e D31A     		subs	r3, r2, r3
 1447 0910 41F28832 		movw	r2, #5000
 1448 0914 9342     		cmp	r3, r2
 1449 0916 01D9     		bls	.L105
 470:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         {
 471:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           return HAL_TIMEOUT;
 1450              		.loc 1 471 0
 1451 0918 0323     		movs	r3, #3
 1452 091a 86E2     		b	.L17
 1453              	.L105:
 1454 091c 0223     		movs	r3, #2
 1455 091e C7F89830 		str	r3, [r7, #152]
 1456              	.LBB198:
 1457              	.LBB199:
 531:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 1458              		.loc 2 531 0
 1459 0922 D7F89830 		ldr	r3, [r7, #152]
 1460              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1461 0926 93FAA3F3 		rbit r3, r3
 1462              	@ 0 "" 2
 1463              		.thumb
 1464 092a C7F89430 		str	r3, [r7, #148]
 1465              		.loc 2 544 0
 1466 092e D7F89430 		ldr	r3, [r7, #148]
 1467              	.LBE199:
 1468              	.LBE198:
 467:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       {
 1469              		.loc 1 467 0
 1470 0932 B3FA83F3 		clz	r3, r3
 1471 0936 DBB2     		uxtb	r3, r3
 1472 0938 43F04003 		orr	r3, r3, #64
 1473 093c DBB2     		uxtb	r3, r3
 1474 093e DBB2     		uxtb	r3, r3
 1475 0940 5B09     		lsrs	r3, r3, #5
 1476 0942 DBB2     		uxtb	r3, r3
 1477 0944 012B     		cmp	r3, #1
 1478 0946 02D1     		bne	.L107
 467:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       {
 1479              		.loc 1 467 0 is_stmt 0 discriminator 1
 1480 0948 904B     		ldr	r3, .L163
 1481 094a 1B68     		ldr	r3, [r3]
ARM GAS  /tmp/cc33CDhW.s 			page 46


 1482 094c 1EE0     		b	.L108
 1483              	.L107:
 1484 094e 07F19003 		add	r3, r7, #144
 1485 0952 0222     		movs	r2, #2
 1486 0954 1A60     		str	r2, [r3]
 1487              	.LBB200:
 1488              	.LBB201:
 531:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 1489              		.loc 2 531 0 is_stmt 1 discriminator 2
 1490 0956 07F19003 		add	r3, r7, #144
 1491 095a 1B68     		ldr	r3, [r3]
 1492              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1493 095c 93FAA3F2 		rbit r2, r3
 1494              	@ 0 "" 2
 1495              		.thumb
 1496 0960 07F18C03 		add	r3, r7, #140
 1497 0964 1A60     		str	r2, [r3]
 1498              		.loc 2 544 0 discriminator 2
 1499 0966 07F18C03 		add	r3, r7, #140
 1500 096a 1B68     		ldr	r3, [r3]
 1501              	.LBE201:
 1502              	.LBE200:
 467:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       {
 1503              		.loc 1 467 0 discriminator 2
 1504 096c B3FA83F3 		clz	r3, r3
 1505 0970 DBB2     		uxtb	r3, r3
 1506 0972 43F04003 		orr	r3, r3, #64
 1507 0976 DBB2     		uxtb	r3, r3
 1508 0978 DBB2     		uxtb	r3, r3
 1509 097a 5B09     		lsrs	r3, r3, #5
 1510 097c DBB2     		uxtb	r3, r3
 1511 097e 022B     		cmp	r3, #2
 1512 0980 02D1     		bne	.L110
 467:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       {
 1513              		.loc 1 467 0 is_stmt 0 discriminator 4
 1514 0982 824B     		ldr	r3, .L163
 1515 0984 1B6A     		ldr	r3, [r3, #32]
 1516 0986 01E0     		b	.L108
 1517              	.L110:
 467:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       {
 1518              		.loc 1 467 0 discriminator 5
 1519 0988 804B     		ldr	r3, .L163
 1520 098a 5B6A     		ldr	r3, [r3, #36]
 1521              	.L108:
 1522 098c 07F18802 		add	r2, r7, #136
 1523 0990 0221     		movs	r1, #2
 1524 0992 1160     		str	r1, [r2]
 1525              	.LBB202:
 1526              	.LBB203:
 531:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 1527              		.loc 2 531 0 is_stmt 1 discriminator 8
 1528 0994 07F18802 		add	r2, r7, #136
 1529 0998 1268     		ldr	r2, [r2]
 1530              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1531 099a 92FAA2F1 		rbit r1, r2
 1532              	@ 0 "" 2
 1533              		.thumb
ARM GAS  /tmp/cc33CDhW.s 			page 47


 1534 099e 07F18402 		add	r2, r7, #132
 1535 09a2 1160     		str	r1, [r2]
 1536              		.loc 2 544 0 discriminator 8
 1537 09a4 07F18402 		add	r2, r7, #132
 1538 09a8 1268     		ldr	r2, [r2]
 1539              	.LBE203:
 1540              	.LBE202:
 467:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       {
 1541              		.loc 1 467 0 discriminator 8
 1542 09aa B2FA82F2 		clz	r2, r2
 1543 09ae D2B2     		uxtb	r2, r2
 1544 09b0 42F04002 		orr	r2, r2, #64
 1545 09b4 D2B2     		uxtb	r2, r2
 1546 09b6 D2B2     		uxtb	r2, r2
 1547 09b8 02F01F02 		and	r2, r2, #31
 1548 09bc D340     		lsrs	r3, r3, r2
 1549 09be 03F00103 		and	r3, r3, #1
 1550 09c2 002B     		cmp	r3, #0
 1551 09c4 9ED0     		beq	.L113
 1552 09c6 69E0     		b	.L97
 1553              	.L104:
 472:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         }
 473:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       }
 474:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     }
 475:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     else
 476:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     {
 477:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       /* Get Start Tick */
 478:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       tickstart = HAL_GetTick();
 1554              		.loc 1 478 0
 1555 09c8 FFF7FEFF 		bl	HAL_GetTick
 1556 09cc C7F88C01 		str	r0, [r7, #396]
 479:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       
 480:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       /* Wait till LSE is disabled */  
 481:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 1557              		.loc 1 481 0
 1558 09d0 0BE0     		b	.L114
 1559              	.L122:
 482:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       {
 483:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 1560              		.loc 1 483 0
 1561 09d2 FFF7FEFF 		bl	HAL_GetTick
 1562 09d6 0246     		mov	r2, r0
 1563 09d8 D7F88C31 		ldr	r3, [r7, #396]
 1564 09dc D31A     		subs	r3, r2, r3
 1565 09de 41F28832 		movw	r2, #5000
 1566 09e2 9342     		cmp	r3, r2
 1567 09e4 01D9     		bls	.L114
 484:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         {
 485:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           return HAL_TIMEOUT;
 1568              		.loc 1 485 0
 1569 09e6 0323     		movs	r3, #3
 1570 09e8 1FE2     		b	.L17
 1571              	.L114:
 1572 09ea 07F18003 		add	r3, r7, #128
 1573 09ee 0222     		movs	r2, #2
 1574 09f0 1A60     		str	r2, [r3]
 1575              	.LBB204:
ARM GAS  /tmp/cc33CDhW.s 			page 48


 1576              	.LBB205:
 531:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 1577              		.loc 2 531 0
 1578 09f2 07F18003 		add	r3, r7, #128
 1579 09f6 1B68     		ldr	r3, [r3]
 1580              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1581 09f8 93FAA3F2 		rbit r2, r3
 1582              	@ 0 "" 2
 1583              		.thumb
 1584 09fc 07F17C03 		add	r3, r7, #124
 1585 0a00 1A60     		str	r2, [r3]
 1586              		.loc 2 544 0
 1587 0a02 07F17C03 		add	r3, r7, #124
 1588 0a06 1B68     		ldr	r3, [r3]
 1589              	.LBE205:
 1590              	.LBE204:
 481:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       {
 1591              		.loc 1 481 0
 1592 0a08 B3FA83F3 		clz	r3, r3
 1593 0a0c DBB2     		uxtb	r3, r3
 1594 0a0e 43F04003 		orr	r3, r3, #64
 1595 0a12 DBB2     		uxtb	r3, r3
 1596 0a14 DBB2     		uxtb	r3, r3
 1597 0a16 5B09     		lsrs	r3, r3, #5
 1598 0a18 DBB2     		uxtb	r3, r3
 1599 0a1a 012B     		cmp	r3, #1
 1600 0a1c 02D1     		bne	.L116
 481:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       {
 1601              		.loc 1 481 0 is_stmt 0 discriminator 1
 1602 0a1e 5B4B     		ldr	r3, .L163
 1603 0a20 1B68     		ldr	r3, [r3]
 1604 0a22 1EE0     		b	.L117
 1605              	.L116:
 1606 0a24 07F17803 		add	r3, r7, #120
 1607 0a28 0222     		movs	r2, #2
 1608 0a2a 1A60     		str	r2, [r3]
 1609              	.LBB206:
 1610              	.LBB207:
 531:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 1611              		.loc 2 531 0 is_stmt 1 discriminator 2
 1612 0a2c 07F17803 		add	r3, r7, #120
 1613 0a30 1B68     		ldr	r3, [r3]
 1614              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1615 0a32 93FAA3F2 		rbit r2, r3
 1616              	@ 0 "" 2
 1617              		.thumb
 1618 0a36 07F17403 		add	r3, r7, #116
 1619 0a3a 1A60     		str	r2, [r3]
 1620              		.loc 2 544 0 discriminator 2
 1621 0a3c 07F17403 		add	r3, r7, #116
 1622 0a40 1B68     		ldr	r3, [r3]
 1623              	.LBE207:
 1624              	.LBE206:
 481:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       {
 1625              		.loc 1 481 0 discriminator 2
 1626 0a42 B3FA83F3 		clz	r3, r3
 1627 0a46 DBB2     		uxtb	r3, r3
ARM GAS  /tmp/cc33CDhW.s 			page 49


 1628 0a48 43F04003 		orr	r3, r3, #64
 1629 0a4c DBB2     		uxtb	r3, r3
 1630 0a4e DBB2     		uxtb	r3, r3
 1631 0a50 5B09     		lsrs	r3, r3, #5
 1632 0a52 DBB2     		uxtb	r3, r3
 1633 0a54 022B     		cmp	r3, #2
 1634 0a56 02D1     		bne	.L119
 481:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       {
 1635              		.loc 1 481 0 is_stmt 0 discriminator 4
 1636 0a58 4C4B     		ldr	r3, .L163
 1637 0a5a 1B6A     		ldr	r3, [r3, #32]
 1638 0a5c 01E0     		b	.L117
 1639              	.L119:
 481:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       {
 1640              		.loc 1 481 0 discriminator 5
 1641 0a5e 4B4B     		ldr	r3, .L163
 1642 0a60 5B6A     		ldr	r3, [r3, #36]
 1643              	.L117:
 1644 0a62 07F17002 		add	r2, r7, #112
 1645 0a66 0221     		movs	r1, #2
 1646 0a68 1160     		str	r1, [r2]
 1647              	.LBB208:
 1648              	.LBB209:
 531:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 1649              		.loc 2 531 0 is_stmt 1 discriminator 8
 1650 0a6a 07F17002 		add	r2, r7, #112
 1651 0a6e 1268     		ldr	r2, [r2]
 1652              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1653 0a70 92FAA2F1 		rbit r1, r2
 1654              	@ 0 "" 2
 1655              		.thumb
 1656 0a74 07F16C02 		add	r2, r7, #108
 1657 0a78 1160     		str	r1, [r2]
 1658              		.loc 2 544 0 discriminator 8
 1659 0a7a 07F16C02 		add	r2, r7, #108
 1660 0a7e 1268     		ldr	r2, [r2]
 1661              	.LBE209:
 1662              	.LBE208:
 481:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       {
 1663              		.loc 1 481 0 discriminator 8
 1664 0a80 B2FA82F2 		clz	r2, r2
 1665 0a84 D2B2     		uxtb	r2, r2
 1666 0a86 42F04002 		orr	r2, r2, #64
 1667 0a8a D2B2     		uxtb	r2, r2
 1668 0a8c D2B2     		uxtb	r2, r2
 1669 0a8e 02F01F02 		and	r2, r2, #31
 1670 0a92 D340     		lsrs	r3, r3, r2
 1671 0a94 03F00103 		and	r3, r3, #1
 1672 0a98 002B     		cmp	r3, #0
 1673 0a9a 9AD1     		bne	.L122
 1674              	.L97:
 486:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         }
 487:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       }
 488:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     }
 489:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   }
 490:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 491:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** #if defined(RCC_CR_PLL2ON)
ARM GAS  /tmp/cc33CDhW.s 			page 50


 492:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   /*-------------------------------- PLL2 Configuration -----------------------*/
 493:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   /* Check the parameters */
 494:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   assert_param(IS_RCC_PLL2(RCC_OscInitStruct->PLL2.PLL2State));
 495:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   if ((RCC_OscInitStruct->PLL2.PLL2State) != RCC_PLL2_NONE)
 496:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   {
 497:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     /* This bit can not be cleared if the PLL2 clock is used indirectly as system 
 498:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       clock (i.e. it is used as PLL clock entry that is used as system clock). */
 499:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     if((__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_HSE) && \
 500:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         (__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_PLLCLK) && \
 501:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         ((READ_BIT(RCC->CFGR2,RCC_CFGR2_PREDIV1SRC)) == RCC_CFGR2_PREDIV1SRC_PLL2))
 502:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     {
 503:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       return HAL_ERROR;
 504:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     }
 505:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     else
 506:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     {
 507:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       if((RCC_OscInitStruct->PLL2.PLL2State) == RCC_PLL2_ON)
 508:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       {
 509:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         /* Check the parameters */
 510:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         assert_param(IS_RCC_PLL2_MUL(RCC_OscInitStruct->PLL2.PLL2MUL));
 511:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         assert_param(IS_RCC_HSE_PREDIV2(RCC_OscInitStruct->PLL2.HSEPrediv2Value));
 512:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 513:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         /* Prediv2 can be written only when the PLLI2S is disabled. */
 514:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         /* Return an error only if new value is different from the programmed value */
 515:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         if (HAL_IS_BIT_SET(RCC->CR,RCC_CR_PLL3ON) && \
 516:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           (__HAL_RCC_HSE_GET_PREDIV2() != RCC_OscInitStruct->PLL2.HSEPrediv2Value))
 517:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         {
 518:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           return HAL_ERROR;
 519:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         }
 520:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         
 521:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         /* Disable the main PLL2. */
 522:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         __HAL_RCC_PLL2_DISABLE();
 523:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         
 524:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         /* Get Start Tick */
 525:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 526:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         
 527:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         /* Wait till PLL2 is disabled */
 528:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLL2RDY) != RESET)
 529:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         {
 530:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           if((HAL_GetTick() - tickstart ) > PLL2_TIMEOUT_VALUE)
 531:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           {
 532:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****             return HAL_TIMEOUT;
 533:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           }
 534:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         }
 535:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         
 536:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         /* Configure the HSE prediv2 factor --------------------------------*/
 537:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         __HAL_RCC_HSE_PREDIV2_CONFIG(RCC_OscInitStruct->PLL2.HSEPrediv2Value);
 538:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 539:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         /* Configure the main PLL2 multiplication factors. */
 540:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         __HAL_RCC_PLL2_CONFIG(RCC_OscInitStruct->PLL2.PLL2MUL);
 541:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         
 542:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         /* Enable the main PLL2. */
 543:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         __HAL_RCC_PLL2_ENABLE();
 544:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         
 545:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         /* Get Start Tick */
 546:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 547:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         
 548:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         /* Wait till PLL2 is ready */
ARM GAS  /tmp/cc33CDhW.s 			page 51


 549:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLL2RDY)  == RESET)
 550:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         {
 551:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           if((HAL_GetTick() - tickstart ) > PLL2_TIMEOUT_VALUE)
 552:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           {
 553:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****             return HAL_TIMEOUT;
 554:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           }
 555:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         }
 556:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       }
 557:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       else
 558:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       {
 559:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****        /* Set PREDIV1 source to HSE */
 560:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         CLEAR_BIT(RCC->CFGR2, RCC_CFGR2_PREDIV1SRC);
 561:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 562:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         /* Disable the main PLL2. */
 563:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         __HAL_RCC_PLL2_DISABLE();
 564:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****  
 565:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         /* Get Start Tick */
 566:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 567:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         
 568:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         /* Wait till PLL2 is disabled */  
 569:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLL2RDY)  != RESET)
 570:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         {
 571:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           if((HAL_GetTick() - tickstart ) > PLL2_TIMEOUT_VALUE)
 572:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           {
 573:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****             return HAL_TIMEOUT;
 574:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           }
 575:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         }
 576:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       }
 577:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     }
 578:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   }
 579:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 580:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** #endif /* RCC_CR_PLL2ON */
 581:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   /*-------------------------------- PLL Configuration -----------------------*/
 582:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   /* Check the parameters */
 583:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   assert_param(IS_RCC_PLL(RCC_OscInitStruct->PLL.PLLState));
 584:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   if ((RCC_OscInitStruct->PLL.PLLState) != RCC_PLL_NONE)
 1675              		.loc 1 584 0
 1676 0a9c 3B1D     		adds	r3, r7, #4
 1677 0a9e 1B68     		ldr	r3, [r3]
 1678 0aa0 DB69     		ldr	r3, [r3, #28]
 1679 0aa2 002B     		cmp	r3, #0
 1680 0aa4 00F0C081 		beq	.L123
 585:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   {
 586:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     /* Check if the PLL is used as system clock or not */
 587:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     if(__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_SYSCLKSOURCE_STATUS_PLLCLK)
 1681              		.loc 1 587 0
 1682 0aa8 384B     		ldr	r3, .L163
 1683 0aaa 5B68     		ldr	r3, [r3, #4]
 1684 0aac 03F00C03 		and	r3, r3, #12
 1685 0ab0 082B     		cmp	r3, #8
 1686 0ab2 00F0B781 		beq	.L124
 588:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     { 
 589:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 1687              		.loc 1 589 0
 1688 0ab6 3B1D     		adds	r3, r7, #4
 1689 0ab8 1B68     		ldr	r3, [r3]
 1690 0aba DB69     		ldr	r3, [r3, #28]
ARM GAS  /tmp/cc33CDhW.s 			page 52


 1691 0abc 022B     		cmp	r3, #2
 1692 0abe 40F02B81 		bne	.L125
 1693 0ac2 07F16803 		add	r3, r7, #104
 1694 0ac6 4FF08072 		mov	r2, #16777216
 1695 0aca 1A60     		str	r2, [r3]
 1696              	.LBB210:
 1697              	.LBB211:
 531:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 1698              		.loc 2 531 0
 1699 0acc 07F16803 		add	r3, r7, #104
 1700 0ad0 1B68     		ldr	r3, [r3]
 1701              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1702 0ad2 93FAA3F2 		rbit r2, r3
 1703              	@ 0 "" 2
 1704              		.thumb
 1705 0ad6 07F16403 		add	r3, r7, #100
 1706 0ada 1A60     		str	r2, [r3]
 1707              		.loc 2 544 0
 1708 0adc 07F16403 		add	r3, r7, #100
 1709 0ae0 1B68     		ldr	r3, [r3]
 1710              	.LBE211:
 1711              	.LBE210:
 590:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       {
 591:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         /* Check the parameters */
 592:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         assert_param(IS_RCC_PLLSOURCE(RCC_OscInitStruct->PLL.PLLSource));
 593:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         assert_param(IS_RCC_PLL_MUL(RCC_OscInitStruct->PLL.PLLMUL));
 594:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   
 595:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         /* Disable the main PLL. */
 596:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         __HAL_RCC_PLL_DISABLE();
 1712              		.loc 1 596 0
 1713 0ae2 B3FA83F3 		clz	r3, r3
 1714 0ae6 9B00     		lsls	r3, r3, #2
 1715 0ae8 03F18443 		add	r3, r3, #1107296256
 1716 0aec 03F58403 		add	r3, r3, #4325376
 1717 0af0 1A46     		mov	r2, r3
 1718 0af2 0023     		movs	r3, #0
 1719 0af4 1360     		str	r3, [r2]
 597:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         
 598:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         /* Get Start Tick */
 599:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 1720              		.loc 1 599 0
 1721 0af6 FFF7FEFF 		bl	HAL_GetTick
 1722 0afa C7F88C01 		str	r0, [r7, #396]
 600:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         
 601:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         /* Wait till PLL is disabled */
 602:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY)  != RESET)
 1723              		.loc 1 602 0
 1724 0afe 09E0     		b	.L127
 1725              	.L135:
 603:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         {
 604:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 1726              		.loc 1 604 0
 1727 0b00 FFF7FEFF 		bl	HAL_GetTick
 1728 0b04 0246     		mov	r2, r0
 1729 0b06 D7F88C31 		ldr	r3, [r7, #396]
 1730 0b0a D31A     		subs	r3, r2, r3
 1731 0b0c 022B     		cmp	r3, #2
ARM GAS  /tmp/cc33CDhW.s 			page 53


 1732 0b0e 01D9     		bls	.L127
 605:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           {
 606:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****             return HAL_TIMEOUT;
 1733              		.loc 1 606 0
 1734 0b10 0323     		movs	r3, #3
 1735 0b12 8AE1     		b	.L17
 1736              	.L127:
 1737 0b14 07F16003 		add	r3, r7, #96
 1738 0b18 4FF00072 		mov	r2, #33554432
 1739 0b1c 1A60     		str	r2, [r3]
 1740              	.LBB212:
 1741              	.LBB213:
 531:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 1742              		.loc 2 531 0
 1743 0b1e 07F16003 		add	r3, r7, #96
 1744 0b22 1B68     		ldr	r3, [r3]
 1745              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1746 0b24 93FAA3F2 		rbit r2, r3
 1747              	@ 0 "" 2
 1748              		.thumb
 1749 0b28 07F15C03 		add	r3, r7, #92
 1750 0b2c 1A60     		str	r2, [r3]
 1751              		.loc 2 544 0
 1752 0b2e 07F15C03 		add	r3, r7, #92
 1753 0b32 1B68     		ldr	r3, [r3]
 1754              	.LBE213:
 1755              	.LBE212:
 602:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         {
 1756              		.loc 1 602 0
 1757 0b34 B3FA83F3 		clz	r3, r3
 1758 0b38 DBB2     		uxtb	r3, r3
 1759 0b3a 43F02003 		orr	r3, r3, #32
 1760 0b3e DBB2     		uxtb	r3, r3
 1761 0b40 DBB2     		uxtb	r3, r3
 1762 0b42 5B09     		lsrs	r3, r3, #5
 1763 0b44 DBB2     		uxtb	r3, r3
 1764 0b46 012B     		cmp	r3, #1
 1765 0b48 02D1     		bne	.L129
 602:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         {
 1766              		.loc 1 602 0 is_stmt 0 discriminator 1
 1767 0b4a 104B     		ldr	r3, .L163
 1768 0b4c 1B68     		ldr	r3, [r3]
 1769 0b4e 21E0     		b	.L130
 1770              	.L129:
 1771 0b50 07F15803 		add	r3, r7, #88
 1772 0b54 4FF00072 		mov	r2, #33554432
 1773 0b58 1A60     		str	r2, [r3]
 1774              	.LBB214:
 1775              	.LBB215:
 531:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 1776              		.loc 2 531 0 is_stmt 1 discriminator 2
 1777 0b5a 07F15803 		add	r3, r7, #88
 1778 0b5e 1B68     		ldr	r3, [r3]
 1779              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1780 0b60 93FAA3F2 		rbit r2, r3
 1781              	@ 0 "" 2
 1782              		.thumb
ARM GAS  /tmp/cc33CDhW.s 			page 54


 1783 0b64 07F15403 		add	r3, r7, #84
 1784 0b68 1A60     		str	r2, [r3]
 1785              		.loc 2 544 0 discriminator 2
 1786 0b6a 07F15403 		add	r3, r7, #84
 1787 0b6e 1B68     		ldr	r3, [r3]
 1788              	.LBE215:
 1789              	.LBE214:
 602:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         {
 1790              		.loc 1 602 0 discriminator 2
 1791 0b70 B3FA83F3 		clz	r3, r3
 1792 0b74 DBB2     		uxtb	r3, r3
 1793 0b76 43F02003 		orr	r3, r3, #32
 1794 0b7a DBB2     		uxtb	r3, r3
 1795 0b7c DBB2     		uxtb	r3, r3
 1796 0b7e 5B09     		lsrs	r3, r3, #5
 1797 0b80 DBB2     		uxtb	r3, r3
 1798 0b82 022B     		cmp	r3, #2
 1799 0b84 04D1     		bne	.L132
 602:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         {
 1800              		.loc 1 602 0 is_stmt 0 discriminator 4
 1801 0b86 014B     		ldr	r3, .L163
 1802 0b88 1B6A     		ldr	r3, [r3, #32]
 1803 0b8a 03E0     		b	.L130
 1804              	.L164:
 1805              		.align	2
 1806              	.L163:
 1807 0b8c 00100240 		.word	1073876992
 1808              	.L132:
 602:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         {
 1809              		.loc 1 602 0 discriminator 5
 1810 0b90 A84B     		ldr	r3, .L165
 1811 0b92 5B6A     		ldr	r3, [r3, #36]
 1812              	.L130:
 1813 0b94 07F15002 		add	r2, r7, #80
 1814 0b98 4FF00071 		mov	r1, #33554432
 1815 0b9c 1160     		str	r1, [r2]
 1816              	.LBB216:
 1817              	.LBB217:
 531:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 1818              		.loc 2 531 0 is_stmt 1 discriminator 8
 1819 0b9e 07F15002 		add	r2, r7, #80
 1820 0ba2 1268     		ldr	r2, [r2]
 1821              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1822 0ba4 92FAA2F1 		rbit r1, r2
 1823              	@ 0 "" 2
 1824              		.thumb
 1825 0ba8 07F14C02 		add	r2, r7, #76
 1826 0bac 1160     		str	r1, [r2]
 1827              		.loc 2 544 0 discriminator 8
 1828 0bae 07F14C02 		add	r2, r7, #76
 1829 0bb2 1268     		ldr	r2, [r2]
 1830              	.LBE217:
 1831              	.LBE216:
 602:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         {
 1832              		.loc 1 602 0 discriminator 8
 1833 0bb4 B2FA82F2 		clz	r2, r2
 1834 0bb8 D2B2     		uxtb	r2, r2
ARM GAS  /tmp/cc33CDhW.s 			page 55


 1835 0bba 42F02002 		orr	r2, r2, #32
 1836 0bbe D2B2     		uxtb	r2, r2
 1837 0bc0 D2B2     		uxtb	r2, r2
 1838 0bc2 02F01F02 		and	r2, r2, #31
 1839 0bc6 D340     		lsrs	r3, r3, r2
 1840 0bc8 03F00103 		and	r3, r3, #1
 1841 0bcc 002B     		cmp	r3, #0
 1842 0bce 97D1     		bne	.L135
 607:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           }
 608:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         }
 609:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 610:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         /* Configure the HSE prediv factor --------------------------------*/
 611:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         /* It can be written only when the PLL is disabled. Not used in PLL source is different tha
 612:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         if(RCC_OscInitStruct->PLL.PLLSource == RCC_PLLSOURCE_HSE)
 1843              		.loc 1 612 0
 1844 0bd0 3B1D     		adds	r3, r7, #4
 1845 0bd2 1B68     		ldr	r3, [r3]
 1846 0bd4 1B6A     		ldr	r3, [r3, #32]
 1847 0bd6 B3F5803F 		cmp	r3, #65536
 1848 0bda 09D1     		bne	.L136
 613:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         {
 614:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           /* Check the parameter */
 615:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           assert_param(IS_RCC_HSE_PREDIV(RCC_OscInitStruct->HSEPredivValue));
 616:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** #if defined(RCC_CFGR2_PREDIV1SRC)
 617:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           assert_param(IS_RCC_PREDIV1_SOURCE(RCC_OscInitStruct->Prediv1Source));
 618:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           
 619:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           /* Set PREDIV1 source */
 620:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           SET_BIT(RCC->CFGR2, RCC_OscInitStruct->Prediv1Source);
 621:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** #endif /* RCC_CFGR2_PREDIV1SRC */
 622:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 623:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           /* Set PREDIV1 Value */
 624:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           __HAL_RCC_HSE_PREDIV_CONFIG(RCC_OscInitStruct->HSEPredivValue);
 1849              		.loc 1 624 0
 1850 0bdc 9549     		ldr	r1, .L165
 1851 0bde 954B     		ldr	r3, .L165
 1852 0be0 5B68     		ldr	r3, [r3, #4]
 1853 0be2 23F40032 		bic	r2, r3, #131072
 1854 0be6 3B1D     		adds	r3, r7, #4
 1855 0be8 1B68     		ldr	r3, [r3]
 1856 0bea 9B68     		ldr	r3, [r3, #8]
 1857 0bec 1343     		orrs	r3, r3, r2
 1858 0bee 4B60     		str	r3, [r1, #4]
 1859              	.L136:
 625:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         }
 626:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 627:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         /* Configure the main PLL clock source and multiplication factors. */
 628:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         __HAL_RCC_PLL_CONFIG(RCC_OscInitStruct->PLL.PLLSource,
 1860              		.loc 1 628 0
 1861 0bf0 9048     		ldr	r0, .L165
 1862 0bf2 904B     		ldr	r3, .L165
 1863 0bf4 5B68     		ldr	r3, [r3, #4]
 1864 0bf6 23F47412 		bic	r2, r3, #3997696
 1865 0bfa 3B1D     		adds	r3, r7, #4
 1866 0bfc 1B68     		ldr	r3, [r3]
 1867 0bfe 196A     		ldr	r1, [r3, #32]
 1868 0c00 3B1D     		adds	r3, r7, #4
 1869 0c02 1B68     		ldr	r3, [r3]
ARM GAS  /tmp/cc33CDhW.s 			page 56


 1870 0c04 5B6A     		ldr	r3, [r3, #36]
 1871 0c06 0B43     		orrs	r3, r3, r1
 1872 0c08 1343     		orrs	r3, r3, r2
 1873 0c0a 4360     		str	r3, [r0, #4]
 1874 0c0c 07F14803 		add	r3, r7, #72
 1875 0c10 4FF08072 		mov	r2, #16777216
 1876 0c14 1A60     		str	r2, [r3]
 1877              	.LBB218:
 1878              	.LBB219:
 531:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 1879              		.loc 2 531 0
 1880 0c16 07F14803 		add	r3, r7, #72
 1881 0c1a 1B68     		ldr	r3, [r3]
 1882              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1883 0c1c 93FAA3F2 		rbit r2, r3
 1884              	@ 0 "" 2
 1885              		.thumb
 1886 0c20 07F14403 		add	r3, r7, #68
 1887 0c24 1A60     		str	r2, [r3]
 1888              		.loc 2 544 0
 1889 0c26 07F14403 		add	r3, r7, #68
 1890 0c2a 1B68     		ldr	r3, [r3]
 1891              	.LBE219:
 1892              	.LBE218:
 629:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****                              RCC_OscInitStruct->PLL.PLLMUL);
 630:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         /* Enable the main PLL. */
 631:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         __HAL_RCC_PLL_ENABLE();
 1893              		.loc 1 631 0
 1894 0c2c B3FA83F3 		clz	r3, r3
 1895 0c30 9B00     		lsls	r3, r3, #2
 1896 0c32 03F18443 		add	r3, r3, #1107296256
 1897 0c36 03F58403 		add	r3, r3, #4325376
 1898 0c3a 1A46     		mov	r2, r3
 1899 0c3c 0123     		movs	r3, #1
 1900 0c3e 1360     		str	r3, [r2]
 632:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         
 633:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         /* Get Start Tick */
 634:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 1901              		.loc 1 634 0
 1902 0c40 FFF7FEFF 		bl	HAL_GetTick
 1903 0c44 C7F88C01 		str	r0, [r7, #396]
 635:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         
 636:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         /* Wait till PLL is ready */
 637:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY)  == RESET)
 1904              		.loc 1 637 0
 1905 0c48 09E0     		b	.L138
 1906              	.L146:
 638:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         {
 639:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 1907              		.loc 1 639 0
 1908 0c4a FFF7FEFF 		bl	HAL_GetTick
 1909 0c4e 0246     		mov	r2, r0
 1910 0c50 D7F88C31 		ldr	r3, [r7, #396]
 1911 0c54 D31A     		subs	r3, r2, r3
 1912 0c56 022B     		cmp	r3, #2
 1913 0c58 01D9     		bls	.L138
 640:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           {
ARM GAS  /tmp/cc33CDhW.s 			page 57


 641:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****             return HAL_TIMEOUT;
 1914              		.loc 1 641 0
 1915 0c5a 0323     		movs	r3, #3
 1916 0c5c E5E0     		b	.L17
 1917              	.L138:
 1918 0c5e 07F14003 		add	r3, r7, #64
 1919 0c62 4FF00072 		mov	r2, #33554432
 1920 0c66 1A60     		str	r2, [r3]
 1921              	.LBB220:
 1922              	.LBB221:
 531:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 1923              		.loc 2 531 0
 1924 0c68 07F14003 		add	r3, r7, #64
 1925 0c6c 1B68     		ldr	r3, [r3]
 1926              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1927 0c6e 93FAA3F2 		rbit r2, r3
 1928              	@ 0 "" 2
 1929              		.thumb
 1930 0c72 07F13C03 		add	r3, r7, #60
 1931 0c76 1A60     		str	r2, [r3]
 1932              		.loc 2 544 0
 1933 0c78 07F13C03 		add	r3, r7, #60
 1934 0c7c 1B68     		ldr	r3, [r3]
 1935              	.LBE221:
 1936              	.LBE220:
 637:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         {
 1937              		.loc 1 637 0
 1938 0c7e B3FA83F3 		clz	r3, r3
 1939 0c82 DBB2     		uxtb	r3, r3
 1940 0c84 43F02003 		orr	r3, r3, #32
 1941 0c88 DBB2     		uxtb	r3, r3
 1942 0c8a DBB2     		uxtb	r3, r3
 1943 0c8c 5B09     		lsrs	r3, r3, #5
 1944 0c8e DBB2     		uxtb	r3, r3
 1945 0c90 012B     		cmp	r3, #1
 1946 0c92 02D1     		bne	.L140
 637:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         {
 1947              		.loc 1 637 0 is_stmt 0 discriminator 1
 1948 0c94 674B     		ldr	r3, .L165
 1949 0c96 1B68     		ldr	r3, [r3]
 1950 0c98 1FE0     		b	.L141
 1951              	.L140:
 1952 0c9a 07F13803 		add	r3, r7, #56
 1953 0c9e 4FF00072 		mov	r2, #33554432
 1954 0ca2 1A60     		str	r2, [r3]
 1955              	.LBB222:
 1956              	.LBB223:
 531:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 1957              		.loc 2 531 0 is_stmt 1 discriminator 2
 1958 0ca4 07F13803 		add	r3, r7, #56
 1959 0ca8 1B68     		ldr	r3, [r3]
 1960              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1961 0caa 93FAA3F2 		rbit r2, r3
 1962              	@ 0 "" 2
 1963              		.thumb
 1964 0cae 07F13403 		add	r3, r7, #52
 1965 0cb2 1A60     		str	r2, [r3]
ARM GAS  /tmp/cc33CDhW.s 			page 58


 1966              		.loc 2 544 0 discriminator 2
 1967 0cb4 07F13403 		add	r3, r7, #52
 1968 0cb8 1B68     		ldr	r3, [r3]
 1969              	.LBE223:
 1970              	.LBE222:
 637:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         {
 1971              		.loc 1 637 0 discriminator 2
 1972 0cba B3FA83F3 		clz	r3, r3
 1973 0cbe DBB2     		uxtb	r3, r3
 1974 0cc0 43F02003 		orr	r3, r3, #32
 1975 0cc4 DBB2     		uxtb	r3, r3
 1976 0cc6 DBB2     		uxtb	r3, r3
 1977 0cc8 5B09     		lsrs	r3, r3, #5
 1978 0cca DBB2     		uxtb	r3, r3
 1979 0ccc 022B     		cmp	r3, #2
 1980 0cce 02D1     		bne	.L143
 637:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         {
 1981              		.loc 1 637 0 is_stmt 0 discriminator 4
 1982 0cd0 584B     		ldr	r3, .L165
 1983 0cd2 1B6A     		ldr	r3, [r3, #32]
 1984 0cd4 01E0     		b	.L141
 1985              	.L143:
 637:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         {
 1986              		.loc 1 637 0 discriminator 5
 1987 0cd6 574B     		ldr	r3, .L165
 1988 0cd8 5B6A     		ldr	r3, [r3, #36]
 1989              	.L141:
 1990 0cda 07F13002 		add	r2, r7, #48
 1991 0cde 4FF00071 		mov	r1, #33554432
 1992 0ce2 1160     		str	r1, [r2]
 1993              	.LBB224:
 1994              	.LBB225:
 531:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 1995              		.loc 2 531 0 is_stmt 1 discriminator 8
 1996 0ce4 07F13002 		add	r2, r7, #48
 1997 0ce8 1268     		ldr	r2, [r2]
 1998              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1999 0cea 92FAA2F1 		rbit r1, r2
 2000              	@ 0 "" 2
 2001              		.thumb
 2002 0cee 07F12C02 		add	r2, r7, #44
 2003 0cf2 1160     		str	r1, [r2]
 2004              		.loc 2 544 0 discriminator 8
 2005 0cf4 07F12C02 		add	r2, r7, #44
 2006 0cf8 1268     		ldr	r2, [r2]
 2007              	.LBE225:
 2008              	.LBE224:
 637:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         {
 2009              		.loc 1 637 0 discriminator 8
 2010 0cfa B2FA82F2 		clz	r2, r2
 2011 0cfe D2B2     		uxtb	r2, r2
 2012 0d00 42F02002 		orr	r2, r2, #32
 2013 0d04 D2B2     		uxtb	r2, r2
 2014 0d06 D2B2     		uxtb	r2, r2
 2015 0d08 02F01F02 		and	r2, r2, #31
 2016 0d0c D340     		lsrs	r3, r3, r2
 2017 0d0e 03F00103 		and	r3, r3, #1
ARM GAS  /tmp/cc33CDhW.s 			page 59


 2018 0d12 002B     		cmp	r3, #0
 2019 0d14 99D0     		beq	.L146
 2020 0d16 87E0     		b	.L123
 2021              	.L125:
 2022 0d18 07F12803 		add	r3, r7, #40
 2023 0d1c 4FF08072 		mov	r2, #16777216
 2024 0d20 1A60     		str	r2, [r3]
 2025              	.LBB226:
 2026              	.LBB227:
 531:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 2027              		.loc 2 531 0
 2028 0d22 07F12803 		add	r3, r7, #40
 2029 0d26 1B68     		ldr	r3, [r3]
 2030              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2031 0d28 93FAA3F2 		rbit r2, r3
 2032              	@ 0 "" 2
 2033              		.thumb
 2034 0d2c 07F12403 		add	r3, r7, #36
 2035 0d30 1A60     		str	r2, [r3]
 2036              		.loc 2 544 0
 2037 0d32 07F12403 		add	r3, r7, #36
 2038 0d36 1B68     		ldr	r3, [r3]
 2039              	.LBE227:
 2040              	.LBE226:
 642:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           }
 643:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         }
 644:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       }
 645:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       else
 646:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       {
 647:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         /* Disable the main PLL. */
 648:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         __HAL_RCC_PLL_DISABLE();
 2041              		.loc 1 648 0
 2042 0d38 B3FA83F3 		clz	r3, r3
 2043 0d3c 9B00     		lsls	r3, r3, #2
 2044 0d3e 03F18443 		add	r3, r3, #1107296256
 2045 0d42 03F58403 		add	r3, r3, #4325376
 2046 0d46 1A46     		mov	r2, r3
 2047 0d48 0023     		movs	r3, #0
 2048 0d4a 1360     		str	r3, [r2]
 649:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****  
 650:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         /* Get Start Tick */
 651:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 2049              		.loc 1 651 0
 2050 0d4c FFF7FEFF 		bl	HAL_GetTick
 2051 0d50 C7F88C01 		str	r0, [r7, #396]
 652:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         
 653:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         /* Wait till PLL is disabled */  
 654:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY)  != RESET)
 2052              		.loc 1 654 0
 2053 0d54 09E0     		b	.L148
 2054              	.L156:
 655:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         {
 656:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 2055              		.loc 1 656 0
 2056 0d56 FFF7FEFF 		bl	HAL_GetTick
 2057 0d5a 0246     		mov	r2, r0
 2058 0d5c D7F88C31 		ldr	r3, [r7, #396]
ARM GAS  /tmp/cc33CDhW.s 			page 60


 2059 0d60 D31A     		subs	r3, r2, r3
 2060 0d62 022B     		cmp	r3, #2
 2061 0d64 01D9     		bls	.L148
 657:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           {
 658:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****             return HAL_TIMEOUT;
 2062              		.loc 1 658 0
 2063 0d66 0323     		movs	r3, #3
 2064 0d68 5FE0     		b	.L17
 2065              	.L148:
 2066 0d6a 07F12003 		add	r3, r7, #32
 2067 0d6e 4FF00072 		mov	r2, #33554432
 2068 0d72 1A60     		str	r2, [r3]
 2069              	.LBB228:
 2070              	.LBB229:
 531:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 2071              		.loc 2 531 0
 2072 0d74 07F12003 		add	r3, r7, #32
 2073 0d78 1B68     		ldr	r3, [r3]
 2074              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2075 0d7a 93FAA3F2 		rbit r2, r3
 2076              	@ 0 "" 2
 2077              		.thumb
 2078 0d7e 07F11C03 		add	r3, r7, #28
 2079 0d82 1A60     		str	r2, [r3]
 2080              		.loc 2 544 0
 2081 0d84 07F11C03 		add	r3, r7, #28
 2082 0d88 1B68     		ldr	r3, [r3]
 2083              	.LBE229:
 2084              	.LBE228:
 654:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         {
 2085              		.loc 1 654 0
 2086 0d8a B3FA83F3 		clz	r3, r3
 2087 0d8e DBB2     		uxtb	r3, r3
 2088 0d90 43F02003 		orr	r3, r3, #32
 2089 0d94 DBB2     		uxtb	r3, r3
 2090 0d96 DBB2     		uxtb	r3, r3
 2091 0d98 5B09     		lsrs	r3, r3, #5
 2092 0d9a DBB2     		uxtb	r3, r3
 2093 0d9c 012B     		cmp	r3, #1
 2094 0d9e 02D1     		bne	.L150
 654:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         {
 2095              		.loc 1 654 0 is_stmt 0 discriminator 1
 2096 0da0 244B     		ldr	r3, .L165
 2097 0da2 1B68     		ldr	r3, [r3]
 2098 0da4 1FE0     		b	.L151
 2099              	.L150:
 2100 0da6 07F11803 		add	r3, r7, #24
 2101 0daa 4FF00072 		mov	r2, #33554432
 2102 0dae 1A60     		str	r2, [r3]
 2103              	.LBB230:
 2104              	.LBB231:
 531:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 2105              		.loc 2 531 0 is_stmt 1 discriminator 2
 2106 0db0 07F11803 		add	r3, r7, #24
 2107 0db4 1B68     		ldr	r3, [r3]
 2108              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2109 0db6 93FAA3F2 		rbit r2, r3
ARM GAS  /tmp/cc33CDhW.s 			page 61


 2110              	@ 0 "" 2
 2111              		.thumb
 2112 0dba 07F11403 		add	r3, r7, #20
 2113 0dbe 1A60     		str	r2, [r3]
 2114              		.loc 2 544 0 discriminator 2
 2115 0dc0 07F11403 		add	r3, r7, #20
 2116 0dc4 1B68     		ldr	r3, [r3]
 2117              	.LBE231:
 2118              	.LBE230:
 654:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         {
 2119              		.loc 1 654 0 discriminator 2
 2120 0dc6 B3FA83F3 		clz	r3, r3
 2121 0dca DBB2     		uxtb	r3, r3
 2122 0dcc 43F02003 		orr	r3, r3, #32
 2123 0dd0 DBB2     		uxtb	r3, r3
 2124 0dd2 DBB2     		uxtb	r3, r3
 2125 0dd4 5B09     		lsrs	r3, r3, #5
 2126 0dd6 DBB2     		uxtb	r3, r3
 2127 0dd8 022B     		cmp	r3, #2
 2128 0dda 02D1     		bne	.L153
 654:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         {
 2129              		.loc 1 654 0 is_stmt 0 discriminator 4
 2130 0ddc 154B     		ldr	r3, .L165
 2131 0dde 1B6A     		ldr	r3, [r3, #32]
 2132 0de0 01E0     		b	.L151
 2133              	.L153:
 654:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         {
 2134              		.loc 1 654 0 discriminator 5
 2135 0de2 144B     		ldr	r3, .L165
 2136 0de4 5B6A     		ldr	r3, [r3, #36]
 2137              	.L151:
 2138 0de6 07F11002 		add	r2, r7, #16
 2139 0dea 4FF00071 		mov	r1, #33554432
 2140 0dee 1160     		str	r1, [r2]
 2141              	.LBB232:
 2142              	.LBB233:
 531:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 2143              		.loc 2 531 0 is_stmt 1 discriminator 8
 2144 0df0 07F11002 		add	r2, r7, #16
 2145 0df4 1268     		ldr	r2, [r2]
 2146              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2147 0df6 92FAA2F1 		rbit r1, r2
 2148              	@ 0 "" 2
 2149              		.thumb
 2150 0dfa 07F10C02 		add	r2, r7, #12
 2151 0dfe 1160     		str	r1, [r2]
 2152              		.loc 2 544 0 discriminator 8
 2153 0e00 07F10C02 		add	r2, r7, #12
 2154 0e04 1268     		ldr	r2, [r2]
 2155              	.LBE233:
 2156              	.LBE232:
 654:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         {
 2157              		.loc 1 654 0 discriminator 8
 2158 0e06 B2FA82F2 		clz	r2, r2
 2159 0e0a D2B2     		uxtb	r2, r2
 2160 0e0c 42F02002 		orr	r2, r2, #32
 2161 0e10 D2B2     		uxtb	r2, r2
ARM GAS  /tmp/cc33CDhW.s 			page 62


 2162 0e12 D2B2     		uxtb	r2, r2
 2163 0e14 02F01F02 		and	r2, r2, #31
 2164 0e18 D340     		lsrs	r3, r3, r2
 2165 0e1a 03F00103 		and	r3, r3, #1
 2166 0e1e 002B     		cmp	r3, #0
 2167 0e20 99D1     		bne	.L156
 2168 0e22 01E0     		b	.L123
 2169              	.L124:
 659:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           }
 660:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         }
 661:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       }
 662:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     }
 663:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     else
 664:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     {
 665:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       return HAL_ERROR;
 2170              		.loc 1 665 0
 2171 0e24 0123     		movs	r3, #1
 2172 0e26 00E0     		b	.L17
 2173              	.L123:
 666:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     }
 667:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   }
 668:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   
 669:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   return HAL_OK;
 2174              		.loc 1 669 0
 2175 0e28 0023     		movs	r3, #0
 2176              	.L17:
 670:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** }
 2177              		.loc 1 670 0
 2178 0e2a 1846     		mov	r0, r3
 2179 0e2c 07F5C877 		add	r7, r7, #400
 2180              	.LCFI9:
 2181              		.cfi_def_cfa_offset 8
 2182 0e30 BD46     		mov	sp, r7
 2183              	.LCFI10:
 2184              		.cfi_def_cfa_register 13
 2185              		@ sp needed
 2186 0e32 80BD     		pop	{r7, pc}
 2187              	.L166:
 2188              		.align	2
 2189              	.L165:
 2190 0e34 00100240 		.word	1073876992
 2191              		.cfi_endproc
 2192              	.LFE64:
 2194              		.section	.text.HAL_RCC_ClockConfig,"ax",%progbits
 2195              		.align	2
 2196              		.global	HAL_RCC_ClockConfig
 2197              		.thumb
 2198              		.thumb_func
 2200              	HAL_RCC_ClockConfig:
 2201              	.LFB65:
 671:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 672:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** /**
 673:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @brief  Initializes the CPU, AHB and APB buses clocks according to the specified 
 674:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *         parameters in the RCC_ClkInitStruct.
 675:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @param  RCC_ClkInitStruct pointer to an RCC_OscInitTypeDef structure that
 676:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *         contains the configuration information for the RCC peripheral.
 677:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @param  FLatency FLASH Latency                   
ARM GAS  /tmp/cc33CDhW.s 			page 63


 678:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *          The value of this parameter depend on device used within the same series
 679:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @note   The SystemCoreClock CMSIS variable is used to store System Clock Frequency 
 680:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *         and updated by @ref HAL_RCC_GetHCLKFreq() function called within this function
 681:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *
 682:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @note   The HSI is used (enabled by hardware) as system clock source after
 683:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *         start-up from Reset, wake-up from STOP and STANDBY mode, or in case
 684:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *         of failure of the HSE used directly or indirectly as system clock
 685:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *         (if the Clock Security System CSS is enabled).
 686:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *           
 687:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @note   A switch from one clock source to another occurs only if the target
 688:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *         clock source is ready (clock stable after start-up delay or PLL locked). 
 689:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *         If a clock source which is not yet ready is selected, the switch will
 690:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *         occur when the clock source will be ready. 
 691:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *         You can use @ref HAL_RCC_GetClockConfig() function to know which clock is
 692:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *         currently used as system clock source.
 693:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @retval HAL status
 694:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   */
 695:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** HAL_StatusTypeDef HAL_RCC_ClockConfig(RCC_ClkInitTypeDef  *RCC_ClkInitStruct, uint32_t FLatency)
 696:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** {
 2202              		.loc 1 696 0
 2203              		.cfi_startproc
 2204              		@ args = 0, pretend = 0, frame = 96
 2205              		@ frame_needed = 1, uses_anonymous_args = 0
 2206 0000 80B5     		push	{r7, lr}
 2207              	.LCFI11:
 2208              		.cfi_def_cfa_offset 8
 2209              		.cfi_offset 7, -8
 2210              		.cfi_offset 14, -4
 2211 0002 98B0     		sub	sp, sp, #96
 2212              	.LCFI12:
 2213              		.cfi_def_cfa_offset 104
 2214 0004 00AF     		add	r7, sp, #0
 2215              	.LCFI13:
 2216              		.cfi_def_cfa_register 7
 2217 0006 7860     		str	r0, [r7, #4]
 2218 0008 3960     		str	r1, [r7]
 697:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   uint32_t tickstart = 0;
 2219              		.loc 1 697 0
 2220 000a 0023     		movs	r3, #0
 2221 000c FB65     		str	r3, [r7, #92]
 698:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   
 699:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   /* Check the parameters */
 700:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   assert_param(RCC_ClkInitStruct != NULL);
 701:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   assert_param(IS_RCC_CLOCKTYPE(RCC_ClkInitStruct->ClockType));
 702:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   assert_param(IS_FLASH_LATENCY(FLatency));
 703:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 704:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   /* To correctly read data from FLASH memory, the number of wait states (LATENCY) 
 705:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   must be correctly programmed according to the frequency of the CPU clock 
 706:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     (HCLK) of the device. */
 707:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 708:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** #if defined(FLASH_ACR_LATENCY)
 709:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   /* Increasing the number of wait states because of higher CPU frequency */
 710:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   if(FLatency > (FLASH->ACR & FLASH_ACR_LATENCY))
 2222              		.loc 1 710 0
 2223 000e A64B     		ldr	r3, .L208
 2224 0010 1B68     		ldr	r3, [r3]
 2225 0012 03F00702 		and	r2, r3, #7
ARM GAS  /tmp/cc33CDhW.s 			page 64


 2226 0016 3B68     		ldr	r3, [r7]
 2227 0018 9A42     		cmp	r2, r3
 2228 001a 10D2     		bcs	.L168
 711:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   {    
 712:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     /* Program the new number of wait states to the LATENCY bits in the FLASH_ACR register */
 713:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     __HAL_FLASH_SET_LATENCY(FLatency);
 2229              		.loc 1 713 0
 2230 001c A249     		ldr	r1, .L208
 2231 001e A24B     		ldr	r3, .L208
 2232 0020 1B68     		ldr	r3, [r3]
 2233 0022 23F00702 		bic	r2, r3, #7
 2234 0026 3B68     		ldr	r3, [r7]
 2235 0028 1343     		orrs	r3, r3, r2
 2236 002a 0B60     		str	r3, [r1]
 714:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     
 715:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     /* Check that the new number of wait states is taken into account to access the Flash
 716:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     memory by reading the FLASH_ACR register */
 717:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     if((FLASH->ACR & FLASH_ACR_LATENCY) != FLatency)
 2237              		.loc 1 717 0
 2238 002c 9E4B     		ldr	r3, .L208
 2239 002e 1B68     		ldr	r3, [r3]
 2240 0030 03F00702 		and	r2, r3, #7
 2241 0034 3B68     		ldr	r3, [r7]
 2242 0036 9A42     		cmp	r2, r3
 2243 0038 01D0     		beq	.L168
 718:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     {
 719:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       return HAL_ERROR;
 2244              		.loc 1 719 0
 2245 003a 0123     		movs	r3, #1
 2246 003c 91E1     		b	.L169
 2247              	.L168:
 720:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     }
 721:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   }
 722:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 723:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** #endif /* FLASH_ACR_LATENCY */
 724:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   /*-------------------------- HCLK Configuration --------------------------*/
 725:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
 2248              		.loc 1 725 0
 2249 003e 7B68     		ldr	r3, [r7, #4]
 2250 0040 1B68     		ldr	r3, [r3]
 2251 0042 03F00203 		and	r3, r3, #2
 2252 0046 002B     		cmp	r3, #0
 2253 0048 08D0     		beq	.L170
 726:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   {
 727:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     assert_param(IS_RCC_HCLK(RCC_ClkInitStruct->AHBCLKDivider));
 728:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     MODIFY_REG(RCC->CFGR, RCC_CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
 2254              		.loc 1 728 0
 2255 004a 9849     		ldr	r1, .L208+4
 2256 004c 974B     		ldr	r3, .L208+4
 2257 004e 5B68     		ldr	r3, [r3, #4]
 2258 0050 23F0F002 		bic	r2, r3, #240
 2259 0054 7B68     		ldr	r3, [r7, #4]
 2260 0056 9B68     		ldr	r3, [r3, #8]
 2261 0058 1343     		orrs	r3, r3, r2
 2262 005a 4B60     		str	r3, [r1, #4]
 2263              	.L170:
 729:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   }
ARM GAS  /tmp/cc33CDhW.s 			page 65


 730:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 731:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   /*------------------------- SYSCLK Configuration ---------------------------*/ 
 732:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
 2264              		.loc 1 732 0
 2265 005c 7B68     		ldr	r3, [r7, #4]
 2266 005e 1B68     		ldr	r3, [r3]
 2267 0060 03F00103 		and	r3, r3, #1
 2268 0064 002B     		cmp	r3, #0
 2269 0066 00F02981 		beq	.L171
 733:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   {    
 734:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     assert_param(IS_RCC_SYSCLKSOURCE(RCC_ClkInitStruct->SYSCLKSource));
 735:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     
 736:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     /* HSE is selected as System Clock Source */
 737:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 2270              		.loc 1 737 0
 2271 006a 7B68     		ldr	r3, [r7, #4]
 2272 006c 5B68     		ldr	r3, [r3, #4]
 2273 006e 012B     		cmp	r3, #1
 2274 0070 46D1     		bne	.L172
 2275 0072 4FF40033 		mov	r3, #131072
 2276 0076 BB65     		str	r3, [r7, #88]
 2277              	.LBB234:
 2278              	.LBB235:
 531:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 2279              		.loc 2 531 0
 2280 0078 BB6D     		ldr	r3, [r7, #88]
 2281              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2282 007a 93FAA3F3 		rbit r3, r3
 2283              	@ 0 "" 2
 2284              		.thumb
 2285 007e 7B65     		str	r3, [r7, #84]
 2286              		.loc 2 544 0
 2287 0080 7B6D     		ldr	r3, [r7, #84]
 2288              	.LBE235:
 2289              	.LBE234:
 738:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     {
 739:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       /* Check the HSE ready flag */  
 740:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 2290              		.loc 1 740 0
 2291 0082 B3FA83F3 		clz	r3, r3
 2292 0086 DBB2     		uxtb	r3, r3
 2293 0088 43F02003 		orr	r3, r3, #32
 2294 008c DBB2     		uxtb	r3, r3
 2295 008e DBB2     		uxtb	r3, r3
 2296 0090 5B09     		lsrs	r3, r3, #5
 2297 0092 DBB2     		uxtb	r3, r3
 2298 0094 012B     		cmp	r3, #1
 2299 0096 02D1     		bne	.L174
 2300              		.loc 1 740 0 is_stmt 0 discriminator 1
 2301 0098 844B     		ldr	r3, .L208+4
 2302 009a 1B68     		ldr	r3, [r3]
 2303 009c 17E0     		b	.L175
 2304              	.L174:
 2305 009e 4FF40033 		mov	r3, #131072
 2306 00a2 3B65     		str	r3, [r7, #80]
 2307              	.LBB236:
 2308              	.LBB237:
ARM GAS  /tmp/cc33CDhW.s 			page 66


 531:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 2309              		.loc 2 531 0 is_stmt 1 discriminator 2
 2310 00a4 3B6D     		ldr	r3, [r7, #80]
 2311              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2312 00a6 93FAA3F3 		rbit r3, r3
 2313              	@ 0 "" 2
 2314              		.thumb
 2315 00aa FB64     		str	r3, [r7, #76]
 2316              		.loc 2 544 0 discriminator 2
 2317 00ac FB6C     		ldr	r3, [r7, #76]
 2318              	.LBE237:
 2319              	.LBE236:
 2320              		.loc 1 740 0 discriminator 2
 2321 00ae B3FA83F3 		clz	r3, r3
 2322 00b2 DBB2     		uxtb	r3, r3
 2323 00b4 43F02003 		orr	r3, r3, #32
 2324 00b8 DBB2     		uxtb	r3, r3
 2325 00ba DBB2     		uxtb	r3, r3
 2326 00bc 5B09     		lsrs	r3, r3, #5
 2327 00be DBB2     		uxtb	r3, r3
 2328 00c0 022B     		cmp	r3, #2
 2329 00c2 02D1     		bne	.L177
 2330              		.loc 1 740 0 is_stmt 0 discriminator 4
 2331 00c4 794B     		ldr	r3, .L208+4
 2332 00c6 1B6A     		ldr	r3, [r3, #32]
 2333 00c8 01E0     		b	.L175
 2334              	.L177:
 2335              		.loc 1 740 0 discriminator 5
 2336 00ca 784B     		ldr	r3, .L208+4
 2337 00cc 5B6A     		ldr	r3, [r3, #36]
 2338              	.L175:
 2339 00ce 4FF40032 		mov	r2, #131072
 2340 00d2 BA64     		str	r2, [r7, #72]
 2341              	.LBB238:
 2342              	.LBB239:
 531:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 2343              		.loc 2 531 0 is_stmt 1 discriminator 8
 2344 00d4 BA6C     		ldr	r2, [r7, #72]
 2345              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2346 00d6 92FAA2F2 		rbit r2, r2
 2347              	@ 0 "" 2
 2348              		.thumb
 2349 00da 7A64     		str	r2, [r7, #68]
 2350              		.loc 2 544 0 discriminator 8
 2351 00dc 7A6C     		ldr	r2, [r7, #68]
 2352              	.LBE239:
 2353              	.LBE238:
 2354              		.loc 1 740 0 discriminator 8
 2355 00de B2FA82F2 		clz	r2, r2
 2356 00e2 D2B2     		uxtb	r2, r2
 2357 00e4 42F02002 		orr	r2, r2, #32
 2358 00e8 D2B2     		uxtb	r2, r2
 2359 00ea D2B2     		uxtb	r2, r2
 2360 00ec 02F01F02 		and	r2, r2, #31
 2361 00f0 D340     		lsrs	r3, r3, r2
 2362 00f2 03F00103 		and	r3, r3, #1
 2363 00f6 002B     		cmp	r3, #0
ARM GAS  /tmp/cc33CDhW.s 			page 67


 2364 00f8 40F08F80 		bne	.L180
 741:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       {
 742:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         return HAL_ERROR;
 2365              		.loc 1 742 0
 2366 00fc 0123     		movs	r3, #1
 2367 00fe 30E1     		b	.L169
 2368              	.L172:
 743:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       }
 744:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     }
 745:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     /* PLL is selected as System Clock Source */
 746:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     else if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)
 2369              		.loc 1 746 0
 2370 0100 7B68     		ldr	r3, [r7, #4]
 2371 0102 5B68     		ldr	r3, [r3, #4]
 2372 0104 022B     		cmp	r3, #2
 2373 0106 45D1     		bne	.L181
 2374 0108 4FF00073 		mov	r3, #33554432
 2375 010c 3B64     		str	r3, [r7, #64]
 2376              	.LBB240:
 2377              	.LBB241:
 531:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 2378              		.loc 2 531 0
 2379 010e 3B6C     		ldr	r3, [r7, #64]
 2380              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2381 0110 93FAA3F3 		rbit r3, r3
 2382              	@ 0 "" 2
 2383              		.thumb
 2384 0114 FB63     		str	r3, [r7, #60]
 2385              		.loc 2 544 0
 2386 0116 FB6B     		ldr	r3, [r7, #60]
 2387              	.LBE241:
 2388              	.LBE240:
 747:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     {
 748:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       /* Check the PLL ready flag */  
 749:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       if(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 2389              		.loc 1 749 0
 2390 0118 B3FA83F3 		clz	r3, r3
 2391 011c DBB2     		uxtb	r3, r3
 2392 011e 43F02003 		orr	r3, r3, #32
 2393 0122 DBB2     		uxtb	r3, r3
 2394 0124 DBB2     		uxtb	r3, r3
 2395 0126 5B09     		lsrs	r3, r3, #5
 2396 0128 DBB2     		uxtb	r3, r3
 2397 012a 012B     		cmp	r3, #1
 2398 012c 02D1     		bne	.L183
 2399              		.loc 1 749 0 is_stmt 0 discriminator 1
 2400 012e 5F4B     		ldr	r3, .L208+4
 2401 0130 1B68     		ldr	r3, [r3]
 2402 0132 17E0     		b	.L184
 2403              	.L183:
 2404 0134 4FF00073 		mov	r3, #33554432
 2405 0138 BB63     		str	r3, [r7, #56]
 2406              	.LBB242:
 2407              	.LBB243:
 531:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 2408              		.loc 2 531 0 is_stmt 1 discriminator 2
 2409 013a BB6B     		ldr	r3, [r7, #56]
ARM GAS  /tmp/cc33CDhW.s 			page 68


 2410              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2411 013c 93FAA3F3 		rbit r3, r3
 2412              	@ 0 "" 2
 2413              		.thumb
 2414 0140 7B63     		str	r3, [r7, #52]
 2415              		.loc 2 544 0 discriminator 2
 2416 0142 7B6B     		ldr	r3, [r7, #52]
 2417              	.LBE243:
 2418              	.LBE242:
 2419              		.loc 1 749 0 discriminator 2
 2420 0144 B3FA83F3 		clz	r3, r3
 2421 0148 DBB2     		uxtb	r3, r3
 2422 014a 43F02003 		orr	r3, r3, #32
 2423 014e DBB2     		uxtb	r3, r3
 2424 0150 DBB2     		uxtb	r3, r3
 2425 0152 5B09     		lsrs	r3, r3, #5
 2426 0154 DBB2     		uxtb	r3, r3
 2427 0156 022B     		cmp	r3, #2
 2428 0158 02D1     		bne	.L186
 2429              		.loc 1 749 0 is_stmt 0 discriminator 4
 2430 015a 544B     		ldr	r3, .L208+4
 2431 015c 1B6A     		ldr	r3, [r3, #32]
 2432 015e 01E0     		b	.L184
 2433              	.L186:
 2434              		.loc 1 749 0 discriminator 5
 2435 0160 524B     		ldr	r3, .L208+4
 2436 0162 5B6A     		ldr	r3, [r3, #36]
 2437              	.L184:
 2438 0164 4FF00072 		mov	r2, #33554432
 2439 0168 3A63     		str	r2, [r7, #48]
 2440              	.LBB244:
 2441              	.LBB245:
 531:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 2442              		.loc 2 531 0 is_stmt 1 discriminator 8
 2443 016a 3A6B     		ldr	r2, [r7, #48]
 2444              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2445 016c 92FAA2F2 		rbit r2, r2
 2446              	@ 0 "" 2
 2447              		.thumb
 2448 0170 FA62     		str	r2, [r7, #44]
 2449              		.loc 2 544 0 discriminator 8
 2450 0172 FA6A     		ldr	r2, [r7, #44]
 2451              	.LBE245:
 2452              	.LBE244:
 2453              		.loc 1 749 0 discriminator 8
 2454 0174 B2FA82F2 		clz	r2, r2
 2455 0178 D2B2     		uxtb	r2, r2
 2456 017a 42F02002 		orr	r2, r2, #32
 2457 017e D2B2     		uxtb	r2, r2
 2458 0180 D2B2     		uxtb	r2, r2
 2459 0182 02F01F02 		and	r2, r2, #31
 2460 0186 D340     		lsrs	r3, r3, r2
 2461 0188 03F00103 		and	r3, r3, #1
 2462 018c 002B     		cmp	r3, #0
 2463 018e 44D1     		bne	.L180
 750:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       {
 751:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         return HAL_ERROR;
ARM GAS  /tmp/cc33CDhW.s 			page 69


 2464              		.loc 1 751 0
 2465 0190 0123     		movs	r3, #1
 2466 0192 E6E0     		b	.L169
 2467              	.L181:
 2468 0194 0223     		movs	r3, #2
 2469 0196 BB62     		str	r3, [r7, #40]
 2470              	.LBB246:
 2471              	.LBB247:
 531:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 2472              		.loc 2 531 0
 2473 0198 BB6A     		ldr	r3, [r7, #40]
 2474              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2475 019a 93FAA3F3 		rbit r3, r3
 2476              	@ 0 "" 2
 2477              		.thumb
 2478 019e 7B62     		str	r3, [r7, #36]
 2479              		.loc 2 544 0
 2480 01a0 7B6A     		ldr	r3, [r7, #36]
 2481              	.LBE247:
 2482              	.LBE246:
 752:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       }
 753:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     }
 754:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     /* HSI is selected as System Clock Source */
 755:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     else
 756:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     {
 757:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       /* Check the HSI ready flag */  
 758:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 2483              		.loc 1 758 0
 2484 01a2 B3FA83F3 		clz	r3, r3
 2485 01a6 DBB2     		uxtb	r3, r3
 2486 01a8 43F02003 		orr	r3, r3, #32
 2487 01ac DBB2     		uxtb	r3, r3
 2488 01ae DBB2     		uxtb	r3, r3
 2489 01b0 5B09     		lsrs	r3, r3, #5
 2490 01b2 DBB2     		uxtb	r3, r3
 2491 01b4 012B     		cmp	r3, #1
 2492 01b6 02D1     		bne	.L190
 2493              		.loc 1 758 0 is_stmt 0 discriminator 1
 2494 01b8 3C4B     		ldr	r3, .L208+4
 2495 01ba 1B68     		ldr	r3, [r3]
 2496 01bc 16E0     		b	.L191
 2497              	.L190:
 2498 01be 0223     		movs	r3, #2
 2499 01c0 3B62     		str	r3, [r7, #32]
 2500              	.LBB248:
 2501              	.LBB249:
 531:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 2502              		.loc 2 531 0 is_stmt 1 discriminator 2
 2503 01c2 3B6A     		ldr	r3, [r7, #32]
 2504              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2505 01c4 93FAA3F3 		rbit r3, r3
 2506              	@ 0 "" 2
 2507              		.thumb
 2508 01c8 FB61     		str	r3, [r7, #28]
 2509              		.loc 2 544 0 discriminator 2
 2510 01ca FB69     		ldr	r3, [r7, #28]
 2511              	.LBE249:
ARM GAS  /tmp/cc33CDhW.s 			page 70


 2512              	.LBE248:
 2513              		.loc 1 758 0 discriminator 2
 2514 01cc B3FA83F3 		clz	r3, r3
 2515 01d0 DBB2     		uxtb	r3, r3
 2516 01d2 43F02003 		orr	r3, r3, #32
 2517 01d6 DBB2     		uxtb	r3, r3
 2518 01d8 DBB2     		uxtb	r3, r3
 2519 01da 5B09     		lsrs	r3, r3, #5
 2520 01dc DBB2     		uxtb	r3, r3
 2521 01de 022B     		cmp	r3, #2
 2522 01e0 02D1     		bne	.L193
 2523              		.loc 1 758 0 is_stmt 0 discriminator 4
 2524 01e2 324B     		ldr	r3, .L208+4
 2525 01e4 1B6A     		ldr	r3, [r3, #32]
 2526 01e6 01E0     		b	.L191
 2527              	.L193:
 2528              		.loc 1 758 0 discriminator 5
 2529 01e8 304B     		ldr	r3, .L208+4
 2530 01ea 5B6A     		ldr	r3, [r3, #36]
 2531              	.L191:
 2532 01ec 0222     		movs	r2, #2
 2533 01ee BA61     		str	r2, [r7, #24]
 2534              	.LBB250:
 2535              	.LBB251:
 531:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 2536              		.loc 2 531 0 is_stmt 1 discriminator 8
 2537 01f0 BA69     		ldr	r2, [r7, #24]
 2538              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2539 01f2 92FAA2F2 		rbit r2, r2
 2540              	@ 0 "" 2
 2541              		.thumb
 2542 01f6 7A61     		str	r2, [r7, #20]
 2543              		.loc 2 544 0 discriminator 8
 2544 01f8 7A69     		ldr	r2, [r7, #20]
 2545              	.LBE251:
 2546              	.LBE250:
 2547              		.loc 1 758 0 discriminator 8
 2548 01fa B2FA82F2 		clz	r2, r2
 2549 01fe D2B2     		uxtb	r2, r2
 2550 0200 42F02002 		orr	r2, r2, #32
 2551 0204 D2B2     		uxtb	r2, r2
 2552 0206 D2B2     		uxtb	r2, r2
 2553 0208 02F01F02 		and	r2, r2, #31
 2554 020c D340     		lsrs	r3, r3, r2
 2555 020e 03F00103 		and	r3, r3, #1
 2556 0212 002B     		cmp	r3, #0
 2557 0214 01D1     		bne	.L180
 759:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       {
 760:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         return HAL_ERROR;
 2558              		.loc 1 760 0
 2559 0216 0123     		movs	r3, #1
 2560 0218 A3E0     		b	.L169
 2561              	.L180:
 761:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       }
 762:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     }
 763:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     __HAL_RCC_SYSCLK_CONFIG(RCC_ClkInitStruct->SYSCLKSource);
 2562              		.loc 1 763 0
ARM GAS  /tmp/cc33CDhW.s 			page 71


 2563 021a 2449     		ldr	r1, .L208+4
 2564 021c 234B     		ldr	r3, .L208+4
 2565 021e 5B68     		ldr	r3, [r3, #4]
 2566 0220 23F00302 		bic	r2, r3, #3
 2567 0224 7B68     		ldr	r3, [r7, #4]
 2568 0226 5B68     		ldr	r3, [r3, #4]
 2569 0228 1343     		orrs	r3, r3, r2
 2570 022a 4B60     		str	r3, [r1, #4]
 764:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 765:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     /* Get Start Tick */
 766:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     tickstart = HAL_GetTick();
 2571              		.loc 1 766 0
 2572 022c FFF7FEFF 		bl	HAL_GetTick
 2573 0230 F865     		str	r0, [r7, #92]
 767:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     
 768:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 2574              		.loc 1 768 0
 2575 0232 7B68     		ldr	r3, [r7, #4]
 2576 0234 5B68     		ldr	r3, [r3, #4]
 2577 0236 012B     		cmp	r3, #1
 2578 0238 12D1     		bne	.L196
 769:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     {
 770:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       while (__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_SYSCLKSOURCE_STATUS_HSE)
 2579              		.loc 1 770 0
 2580 023a 0AE0     		b	.L197
 2581              	.L198:
 771:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       {
 772:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         if((HAL_GetTick() - tickstart ) > CLOCKSWITCH_TIMEOUT_VALUE)
 2582              		.loc 1 772 0
 2583 023c FFF7FEFF 		bl	HAL_GetTick
 2584 0240 0246     		mov	r2, r0
 2585 0242 FB6D     		ldr	r3, [r7, #92]
 2586 0244 D31A     		subs	r3, r2, r3
 2587 0246 41F28832 		movw	r2, #5000
 2588 024a 9342     		cmp	r3, r2
 2589 024c 01D9     		bls	.L197
 773:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         {
 774:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           return HAL_TIMEOUT;
 2590              		.loc 1 774 0
 2591 024e 0323     		movs	r3, #3
 2592 0250 87E0     		b	.L169
 2593              	.L197:
 770:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       {
 2594              		.loc 1 770 0
 2595 0252 164B     		ldr	r3, .L208+4
 2596 0254 5B68     		ldr	r3, [r3, #4]
 2597 0256 03F00C03 		and	r3, r3, #12
 2598 025a 042B     		cmp	r3, #4
 2599 025c EED1     		bne	.L198
 2600 025e 2DE0     		b	.L171
 2601              	.L196:
 775:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         }
 776:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       }
 777:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     }
 778:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     else if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)
 2602              		.loc 1 778 0
 2603 0260 7B68     		ldr	r3, [r7, #4]
ARM GAS  /tmp/cc33CDhW.s 			page 72


 2604 0262 5B68     		ldr	r3, [r3, #4]
 2605 0264 022B     		cmp	r3, #2
 2606 0266 12D1     		bne	.L199
 779:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     {
 780:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       while (__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_SYSCLKSOURCE_STATUS_PLLCLK)
 2607              		.loc 1 780 0
 2608 0268 0AE0     		b	.L200
 2609              	.L201:
 781:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       {
 782:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         if((HAL_GetTick() - tickstart ) > CLOCKSWITCH_TIMEOUT_VALUE)
 2610              		.loc 1 782 0
 2611 026a FFF7FEFF 		bl	HAL_GetTick
 2612 026e 0246     		mov	r2, r0
 2613 0270 FB6D     		ldr	r3, [r7, #92]
 2614 0272 D31A     		subs	r3, r2, r3
 2615 0274 41F28832 		movw	r2, #5000
 2616 0278 9342     		cmp	r3, r2
 2617 027a 01D9     		bls	.L200
 783:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         {
 784:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           return HAL_TIMEOUT;
 2618              		.loc 1 784 0
 2619 027c 0323     		movs	r3, #3
 2620 027e 70E0     		b	.L169
 2621              	.L200:
 780:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       {
 2622              		.loc 1 780 0
 2623 0280 0A4B     		ldr	r3, .L208+4
 2624 0282 5B68     		ldr	r3, [r3, #4]
 2625 0284 03F00C03 		and	r3, r3, #12
 2626 0288 082B     		cmp	r3, #8
 2627 028a EED1     		bne	.L201
 2628 028c 16E0     		b	.L171
 2629              	.L199:
 785:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         }
 786:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       }
 787:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     }
 788:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     else
 789:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     {
 790:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       while (__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_SYSCLKSOURCE_STATUS_HSI)
 2630              		.loc 1 790 0
 2631 028e 0FE0     		b	.L202
 2632              	.L203:
 791:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       {
 792:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         if((HAL_GetTick() - tickstart ) > CLOCKSWITCH_TIMEOUT_VALUE)
 2633              		.loc 1 792 0
 2634 0290 FFF7FEFF 		bl	HAL_GetTick
 2635 0294 0246     		mov	r2, r0
 2636 0296 FB6D     		ldr	r3, [r7, #92]
 2637 0298 D31A     		subs	r3, r2, r3
 2638 029a 41F28832 		movw	r2, #5000
 2639 029e 9342     		cmp	r3, r2
 2640 02a0 06D9     		bls	.L202
 793:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         {
 794:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           return HAL_TIMEOUT;
 2641              		.loc 1 794 0
 2642 02a2 0323     		movs	r3, #3
 2643 02a4 5DE0     		b	.L169
ARM GAS  /tmp/cc33CDhW.s 			page 73


 2644              	.L209:
 2645 02a6 00BF     		.align	2
 2646              	.L208:
 2647 02a8 00200240 		.word	1073881088
 2648 02ac 00100240 		.word	1073876992
 2649              	.L202:
 790:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       {
 2650              		.loc 1 790 0
 2651 02b0 2E4B     		ldr	r3, .L210
 2652 02b2 5B68     		ldr	r3, [r3, #4]
 2653 02b4 03F00C03 		and	r3, r3, #12
 2654 02b8 002B     		cmp	r3, #0
 2655 02ba E9D1     		bne	.L203
 2656              	.L171:
 795:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         }
 796:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       }
 797:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     }      
 798:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   }    
 799:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** #if defined(FLASH_ACR_LATENCY)
 800:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   /* Decreasing the number of wait states because of lower CPU frequency */
 801:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   if(FLatency < (FLASH->ACR & FLASH_ACR_LATENCY))
 2657              		.loc 1 801 0
 2658 02bc 2C4B     		ldr	r3, .L210+4
 2659 02be 1B68     		ldr	r3, [r3]
 2660 02c0 03F00702 		and	r2, r3, #7
 2661 02c4 3B68     		ldr	r3, [r7]
 2662 02c6 9A42     		cmp	r2, r3
 2663 02c8 10D9     		bls	.L204
 802:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   {    
 803:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     /* Program the new number of wait states to the LATENCY bits in the FLASH_ACR register */
 804:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     __HAL_FLASH_SET_LATENCY(FLatency);
 2664              		.loc 1 804 0
 2665 02ca 2949     		ldr	r1, .L210+4
 2666 02cc 284B     		ldr	r3, .L210+4
 2667 02ce 1B68     		ldr	r3, [r3]
 2668 02d0 23F00702 		bic	r2, r3, #7
 2669 02d4 3B68     		ldr	r3, [r7]
 2670 02d6 1343     		orrs	r3, r3, r2
 2671 02d8 0B60     		str	r3, [r1]
 805:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     
 806:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     /* Check that the new number of wait states is taken into account to access the Flash
 807:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     memory by reading the FLASH_ACR register */
 808:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     if((FLASH->ACR & FLASH_ACR_LATENCY) != FLatency)
 2672              		.loc 1 808 0
 2673 02da 254B     		ldr	r3, .L210+4
 2674 02dc 1B68     		ldr	r3, [r3]
 2675 02de 03F00702 		and	r2, r3, #7
 2676 02e2 3B68     		ldr	r3, [r7]
 2677 02e4 9A42     		cmp	r2, r3
 2678 02e6 01D0     		beq	.L204
 809:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     {
 810:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       return HAL_ERROR;
 2679              		.loc 1 810 0
 2680 02e8 0123     		movs	r3, #1
 2681 02ea 3AE0     		b	.L169
 2682              	.L204:
 811:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     }
ARM GAS  /tmp/cc33CDhW.s 			page 74


 812:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   }    
 813:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** #endif /* FLASH_ACR_LATENCY */
 814:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 815:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   /*-------------------------- PCLK1 Configuration ---------------------------*/ 
 816:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 2683              		.loc 1 816 0
 2684 02ec 7B68     		ldr	r3, [r7, #4]
 2685 02ee 1B68     		ldr	r3, [r3]
 2686 02f0 03F00403 		and	r3, r3, #4
 2687 02f4 002B     		cmp	r3, #0
 2688 02f6 08D0     		beq	.L205
 817:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   {
 818:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     assert_param(IS_RCC_PCLK(RCC_ClkInitStruct->APB1CLKDivider));
 819:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_ClkInitStruct->APB1CLKDivider);
 2689              		.loc 1 819 0
 2690 02f8 1C49     		ldr	r1, .L210
 2691 02fa 1C4B     		ldr	r3, .L210
 2692 02fc 5B68     		ldr	r3, [r3, #4]
 2693 02fe 23F4E062 		bic	r2, r3, #1792
 2694 0302 7B68     		ldr	r3, [r7, #4]
 2695 0304 DB68     		ldr	r3, [r3, #12]
 2696 0306 1343     		orrs	r3, r3, r2
 2697 0308 4B60     		str	r3, [r1, #4]
 2698              	.L205:
 820:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   }
 821:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   
 822:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   /*-------------------------- PCLK2 Configuration ---------------------------*/ 
 823:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 2699              		.loc 1 823 0
 2700 030a 7B68     		ldr	r3, [r7, #4]
 2701 030c 1B68     		ldr	r3, [r3]
 2702 030e 03F00803 		and	r3, r3, #8
 2703 0312 002B     		cmp	r3, #0
 2704 0314 09D0     		beq	.L206
 824:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   {
 825:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     assert_param(IS_RCC_PCLK(RCC_ClkInitStruct->APB2CLKDivider));
 826:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, ((RCC_ClkInitStruct->APB2CLKDivider) << 3));
 2705              		.loc 1 826 0
 2706 0316 1549     		ldr	r1, .L210
 2707 0318 144B     		ldr	r3, .L210
 2708 031a 5B68     		ldr	r3, [r3, #4]
 2709 031c 23F46052 		bic	r2, r3, #14336
 2710 0320 7B68     		ldr	r3, [r7, #4]
 2711 0322 1B69     		ldr	r3, [r3, #16]
 2712 0324 DB00     		lsls	r3, r3, #3
 2713 0326 1343     		orrs	r3, r3, r2
 2714 0328 4B60     		str	r3, [r1, #4]
 2715              	.L206:
 827:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   }
 828:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****  
 829:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   /* Update the SystemCoreClock global variable */
 830:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE)>> RCC_CF
 2716              		.loc 1 830 0
 2717 032a FFF7FEFF 		bl	HAL_RCC_GetSysClockFreq
 2718 032e 0146     		mov	r1, r0
 2719 0330 0E4B     		ldr	r3, .L210
 2720 0332 5B68     		ldr	r3, [r3, #4]
ARM GAS  /tmp/cc33CDhW.s 			page 75


 2721 0334 03F0F002 		and	r2, r3, #240
 2722 0338 F023     		movs	r3, #240
 2723 033a 3B61     		str	r3, [r7, #16]
 2724              	.LBB252:
 2725              	.LBB253:
 531:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 2726              		.loc 2 531 0
 2727 033c 3B69     		ldr	r3, [r7, #16]
 2728              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2729 033e 93FAA3F3 		rbit r3, r3
 2730              	@ 0 "" 2
 2731              		.thumb
 2732 0342 FB60     		str	r3, [r7, #12]
 2733              		.loc 2 544 0
 2734 0344 FB68     		ldr	r3, [r7, #12]
 2735              	.LBE253:
 2736              	.LBE252:
 2737              		.loc 1 830 0
 2738 0346 B3FA83F3 		clz	r3, r3
 2739 034a 22FA03F3 		lsr	r3, r2, r3
 2740 034e 094A     		ldr	r2, .L210+8
 2741 0350 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 2742 0352 21FA03F3 		lsr	r3, r1, r3
 2743 0356 084A     		ldr	r2, .L210+12
 2744 0358 1360     		str	r3, [r2]
 831:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 832:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   /* Configure the source of time base considering new system clocks settings*/
 833:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   HAL_InitTick (TICK_INT_PRIORITY);
 2745              		.loc 1 833 0
 2746 035a 0020     		movs	r0, #0
 2747 035c FFF7FEFF 		bl	HAL_InitTick
 834:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   
 835:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   return HAL_OK;
 2748              		.loc 1 835 0
 2749 0360 0023     		movs	r3, #0
 2750              	.L169:
 836:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** }
 2751              		.loc 1 836 0
 2752 0362 1846     		mov	r0, r3
 2753 0364 6037     		adds	r7, r7, #96
 2754              	.LCFI14:
 2755              		.cfi_def_cfa_offset 8
 2756 0366 BD46     		mov	sp, r7
 2757              	.LCFI15:
 2758              		.cfi_def_cfa_register 13
 2759              		@ sp needed
 2760 0368 80BD     		pop	{r7, pc}
 2761              	.L211:
 2762 036a 00BF     		.align	2
 2763              	.L210:
 2764 036c 00100240 		.word	1073876992
 2765 0370 00200240 		.word	1073881088
 2766 0374 00000000 		.word	AHBPrescTable
 2767 0378 00000000 		.word	SystemCoreClock
 2768              		.cfi_endproc
 2769              	.LFE65:
 2771              		.section	.text.HAL_RCC_MCOConfig,"ax",%progbits
ARM GAS  /tmp/cc33CDhW.s 			page 76


 2772              		.align	2
 2773              		.global	HAL_RCC_MCOConfig
 2774              		.thumb
 2775              		.thumb_func
 2777              	HAL_RCC_MCOConfig:
 2778              	.LFB66:
 837:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 838:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** /**
 839:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @}
 840:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   */
 841:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 842:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** /** @defgroup RCC_Exported_Functions_Group2 Peripheral Control functions
 843:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *  @brief   RCC clocks control functions
 844:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *
 845:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   @verbatim   
 846:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   ===============================================================================
 847:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****                   ##### Peripheral Control functions #####
 848:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   ===============================================================================  
 849:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     [..]
 850:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     This subsection provides a set of functions allowing to control the RCC Clocks 
 851:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     frequencies.
 852:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 853:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   @endverbatim
 854:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @{
 855:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   */
 856:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 857:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** /**
 858:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @brief  Selects the clock source to output on MCO pin.
 859:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @note   MCO pin should be configured in alternate function mode.
 860:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @param  RCC_MCOx specifies the output direction for the clock source.
 861:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *          This parameter can be one of the following values:
 862:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1 Clock source to output on MCO1 pin(PA8).
 863:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @param  RCC_MCOSource specifies the clock source to output.
 864:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *          This parameter can be one of the following values:
 865:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_NOCLOCK     No clock selected as MCO clock
 866:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_SYSCLK      System clock selected as MCO clock
 867:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_HSI         HSI selected as MCO clock
 868:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_HSE         HSE selected as MCO clock
 869:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   @if STM32F105xC
 870:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_PLLCLK       PLL clock divided by 2 selected as MCO source
 871:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_PLL2CLK      PLL2 clock selected as MCO source
 872:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_PLL3CLK_DIV2 PLL3 clock divided by 2 selected as MCO source
 873:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_EXT_HSE      XT1 external 3-25 MHz oscillator clock selecte
 874:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_PLL3CLK      PLL3 clock selected as MCO source
 875:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   @endif
 876:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   @if STM32F107xC
 877:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_PLLCLK       PLL clock divided by 2 selected as MCO source
 878:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_PLL2CLK      PLL2 clock selected as MCO source
 879:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_PLL3CLK_DIV2 PLL3 clock divided by 2 selected as MCO source
 880:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_EXT_HSE XT1  external 3-25 MHz oscillator clock selected as
 881:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_PLL3CLK      PLL3 clock selected as MCO source
 882:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   @endif
 883:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @param  RCC_MCODiv specifies the MCO DIV.
 884:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *          This parameter can be one of the following values:
 885:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *            @arg @ref RCC_MCODIV_1 no division applied to MCO clock
 886:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @retval None
 887:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   */
ARM GAS  /tmp/cc33CDhW.s 			page 77


 888:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** void HAL_RCC_MCOConfig(uint32_t RCC_MCOx, uint32_t RCC_MCOSource, uint32_t RCC_MCODiv)
 889:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** {
 2779              		.loc 1 889 0
 2780              		.cfi_startproc
 2781              		@ args = 0, pretend = 0, frame = 40
 2782              		@ frame_needed = 1, uses_anonymous_args = 0
 2783 0000 80B5     		push	{r7, lr}
 2784              	.LCFI16:
 2785              		.cfi_def_cfa_offset 8
 2786              		.cfi_offset 7, -8
 2787              		.cfi_offset 14, -4
 2788 0002 8AB0     		sub	sp, sp, #40
 2789              	.LCFI17:
 2790              		.cfi_def_cfa_offset 48
 2791 0004 00AF     		add	r7, sp, #0
 2792              	.LCFI18:
 2793              		.cfi_def_cfa_register 7
 2794 0006 F860     		str	r0, [r7, #12]
 2795 0008 B960     		str	r1, [r7, #8]
 2796 000a 7A60     		str	r2, [r7, #4]
 890:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   GPIO_InitTypeDef gpio = {0};
 2797              		.loc 1 890 0
 2798 000c 07F11803 		add	r3, r7, #24
 2799 0010 0022     		movs	r2, #0
 2800 0012 1A60     		str	r2, [r3]
 2801 0014 0433     		adds	r3, r3, #4
 2802 0016 0022     		movs	r2, #0
 2803 0018 1A60     		str	r2, [r3]
 2804 001a 0433     		adds	r3, r3, #4
 2805 001c 0022     		movs	r2, #0
 2806 001e 1A60     		str	r2, [r3]
 2807 0020 0433     		adds	r3, r3, #4
 2808 0022 0022     		movs	r2, #0
 2809 0024 1A60     		str	r2, [r3]
 2810 0026 0433     		adds	r3, r3, #4
 891:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 892:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   /* Check the parameters */
 893:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   assert_param(IS_RCC_MCO(RCC_MCOx));
 894:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   assert_param(IS_RCC_MCODIV(RCC_MCODiv));
 895:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   assert_param(IS_RCC_MCO1SOURCE(RCC_MCOSource));
 896:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   
 897:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   /* Configure the MCO1 pin in alternate function mode */
 898:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   gpio.Mode      = GPIO_MODE_AF_PP;
 2811              		.loc 1 898 0
 2812 0028 0223     		movs	r3, #2
 2813 002a FB61     		str	r3, [r7, #28]
 899:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   gpio.Speed     = GPIO_SPEED_FREQ_HIGH;
 2814              		.loc 1 899 0
 2815 002c 0323     		movs	r3, #3
 2816 002e 7B62     		str	r3, [r7, #36]
 900:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   gpio.Pull      = GPIO_NOPULL;
 2817              		.loc 1 900 0
 2818 0030 0023     		movs	r3, #0
 2819 0032 3B62     		str	r3, [r7, #32]
 901:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   gpio.Pin       = MCO1_PIN;
 2820              		.loc 1 901 0
 2821 0034 4FF48073 		mov	r3, #256
ARM GAS  /tmp/cc33CDhW.s 			page 78


 2822 0038 BB61     		str	r3, [r7, #24]
 2823              	.LBB254:
 902:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 903:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   /* MCO1 Clock Enable */
 904:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   MCO1_CLK_ENABLE();
 2824              		.loc 1 904 0
 2825 003a 0E4A     		ldr	r2, .L213
 2826 003c 0D4B     		ldr	r3, .L213
 2827 003e 9B69     		ldr	r3, [r3, #24]
 2828 0040 43F00403 		orr	r3, r3, #4
 2829 0044 9361     		str	r3, [r2, #24]
 2830 0046 0B4B     		ldr	r3, .L213
 2831 0048 9B69     		ldr	r3, [r3, #24]
 2832 004a 03F00403 		and	r3, r3, #4
 2833 004e 7B61     		str	r3, [r7, #20]
 2834 0050 7B69     		ldr	r3, [r7, #20]
 2835              	.LBE254:
 905:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   
 906:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   HAL_GPIO_Init(MCO1_GPIO_PORT, &gpio);
 2836              		.loc 1 906 0
 2837 0052 07F11803 		add	r3, r7, #24
 2838 0056 0848     		ldr	r0, .L213+4
 2839 0058 1946     		mov	r1, r3
 2840 005a FFF7FEFF 		bl	HAL_GPIO_Init
 907:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   
 908:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   /* Configure the MCO clock source */
 909:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   __HAL_RCC_MCO1_CONFIG(RCC_MCOSource, RCC_MCODiv);
 2841              		.loc 1 909 0
 2842 005e 0549     		ldr	r1, .L213
 2843 0060 044B     		ldr	r3, .L213
 2844 0062 5B68     		ldr	r3, [r3, #4]
 2845 0064 23F0E062 		bic	r2, r3, #117440512
 2846 0068 BB68     		ldr	r3, [r7, #8]
 2847 006a 1343     		orrs	r3, r3, r2
 2848 006c 4B60     		str	r3, [r1, #4]
 910:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** }
 2849              		.loc 1 910 0
 2850 006e 2837     		adds	r7, r7, #40
 2851              	.LCFI19:
 2852              		.cfi_def_cfa_offset 8
 2853 0070 BD46     		mov	sp, r7
 2854              	.LCFI20:
 2855              		.cfi_def_cfa_register 13
 2856              		@ sp needed
 2857 0072 80BD     		pop	{r7, pc}
 2858              	.L214:
 2859              		.align	2
 2860              	.L213:
 2861 0074 00100240 		.word	1073876992
 2862 0078 00080140 		.word	1073809408
 2863              		.cfi_endproc
 2864              	.LFE66:
 2866              		.section	.text.HAL_RCC_EnableCSS,"ax",%progbits
 2867              		.align	2
 2868              		.global	HAL_RCC_EnableCSS
 2869              		.thumb
 2870              		.thumb_func
ARM GAS  /tmp/cc33CDhW.s 			page 79


 2872              	HAL_RCC_EnableCSS:
 2873              	.LFB67:
 911:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 912:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** /**
 913:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @brief  Enables the Clock Security System.
 914:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @note   If a failure is detected on the HSE oscillator clock, this oscillator
 915:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *         is automatically disabled and an interrupt is generated to inform the
 916:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *         software about the failure (Clock Security System Interrupt, CSSI),
 917:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *         allowing the MCU to perform rescue operations. The CSSI is linked to 
 918:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *         the Cortex-M3 NMI (Non-Maskable Interrupt) exception vector.  
 919:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @retval None
 920:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   */
 921:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** void HAL_RCC_EnableCSS(void)
 922:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** {
 2874              		.loc 1 922 0
 2875              		.cfi_startproc
 2876              		@ args = 0, pretend = 0, frame = 8
 2877              		@ frame_needed = 1, uses_anonymous_args = 0
 2878              		@ link register save eliminated.
 2879 0000 80B4     		push	{r7}
 2880              	.LCFI21:
 2881              		.cfi_def_cfa_offset 4
 2882              		.cfi_offset 7, -4
 2883 0002 83B0     		sub	sp, sp, #12
 2884              	.LCFI22:
 2885              		.cfi_def_cfa_offset 16
 2886 0004 00AF     		add	r7, sp, #0
 2887              	.LCFI23:
 2888              		.cfi_def_cfa_register 7
 2889 0006 4FF40023 		mov	r3, #524288
 2890 000a 7B60     		str	r3, [r7, #4]
 2891              	.LBB255:
 2892              	.LBB256:
 531:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 2893              		.loc 2 531 0
 2894 000c 7B68     		ldr	r3, [r7, #4]
 2895              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2896 000e 93FAA3F3 		rbit r3, r3
 2897              	@ 0 "" 2
 2898              		.thumb
 2899 0012 3B60     		str	r3, [r7]
 2900              		.loc 2 544 0
 2901 0014 3B68     		ldr	r3, [r7]
 2902              	.LBE256:
 2903              	.LBE255:
 923:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *(__IO uint32_t *) RCC_CR_CSSON_BB = (uint32_t)ENABLE;
 2904              		.loc 1 923 0
 2905 0016 B3FA83F3 		clz	r3, r3
 2906 001a 9B00     		lsls	r3, r3, #2
 2907 001c 03F18443 		add	r3, r3, #1107296256
 2908 0020 03F58403 		add	r3, r3, #4325376
 2909 0024 1A46     		mov	r2, r3
 2910 0026 0123     		movs	r3, #1
 2911 0028 1360     		str	r3, [r2]
 924:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** }
 2912              		.loc 1 924 0
 2913 002a 0C37     		adds	r7, r7, #12
ARM GAS  /tmp/cc33CDhW.s 			page 80


 2914              	.LCFI24:
 2915              		.cfi_def_cfa_offset 4
 2916 002c BD46     		mov	sp, r7
 2917              	.LCFI25:
 2918              		.cfi_def_cfa_register 13
 2919              		@ sp needed
 2920 002e 5DF8047B 		ldr	r7, [sp], #4
 2921              	.LCFI26:
 2922              		.cfi_restore 7
 2923              		.cfi_def_cfa_offset 0
 2924 0032 7047     		bx	lr
 2925              		.cfi_endproc
 2926              	.LFE67:
 2928              		.section	.text.HAL_RCC_DisableCSS,"ax",%progbits
 2929              		.align	2
 2930              		.global	HAL_RCC_DisableCSS
 2931              		.thumb
 2932              		.thumb_func
 2934              	HAL_RCC_DisableCSS:
 2935              	.LFB68:
 925:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 926:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** /**
 927:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @brief  Disables the Clock Security System.
 928:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @retval None
 929:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   */
 930:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** void HAL_RCC_DisableCSS(void)
 931:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** {
 2936              		.loc 1 931 0
 2937              		.cfi_startproc
 2938              		@ args = 0, pretend = 0, frame = 8
 2939              		@ frame_needed = 1, uses_anonymous_args = 0
 2940              		@ link register save eliminated.
 2941 0000 80B4     		push	{r7}
 2942              	.LCFI27:
 2943              		.cfi_def_cfa_offset 4
 2944              		.cfi_offset 7, -4
 2945 0002 83B0     		sub	sp, sp, #12
 2946              	.LCFI28:
 2947              		.cfi_def_cfa_offset 16
 2948 0004 00AF     		add	r7, sp, #0
 2949              	.LCFI29:
 2950              		.cfi_def_cfa_register 7
 2951 0006 4FF40023 		mov	r3, #524288
 2952 000a 7B60     		str	r3, [r7, #4]
 2953              	.LBB257:
 2954              	.LBB258:
 531:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 2955              		.loc 2 531 0
 2956 000c 7B68     		ldr	r3, [r7, #4]
 2957              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2958 000e 93FAA3F3 		rbit r3, r3
 2959              	@ 0 "" 2
 2960              		.thumb
 2961 0012 3B60     		str	r3, [r7]
 2962              		.loc 2 544 0
 2963 0014 3B68     		ldr	r3, [r7]
 2964              	.LBE258:
ARM GAS  /tmp/cc33CDhW.s 			page 81


 2965              	.LBE257:
 932:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *(__IO uint32_t *) RCC_CR_CSSON_BB = (uint32_t)DISABLE;
 2966              		.loc 1 932 0
 2967 0016 B3FA83F3 		clz	r3, r3
 2968 001a 9B00     		lsls	r3, r3, #2
 2969 001c 03F18443 		add	r3, r3, #1107296256
 2970 0020 03F58403 		add	r3, r3, #4325376
 2971 0024 1A46     		mov	r2, r3
 2972 0026 0023     		movs	r3, #0
 2973 0028 1360     		str	r3, [r2]
 933:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** }
 2974              		.loc 1 933 0
 2975 002a 0C37     		adds	r7, r7, #12
 2976              	.LCFI30:
 2977              		.cfi_def_cfa_offset 4
 2978 002c BD46     		mov	sp, r7
 2979              	.LCFI31:
 2980              		.cfi_def_cfa_register 13
 2981              		@ sp needed
 2982 002e 5DF8047B 		ldr	r7, [sp], #4
 2983              	.LCFI32:
 2984              		.cfi_restore 7
 2985              		.cfi_def_cfa_offset 0
 2986 0032 7047     		bx	lr
 2987              		.cfi_endproc
 2988              	.LFE68:
 2990              		.section	.rodata
 2991              		.align	2
 2992              	.LC0:
 2993 0000 02       		.byte	2
 2994 0001 03       		.byte	3
 2995 0002 04       		.byte	4
 2996 0003 05       		.byte	5
 2997 0004 06       		.byte	6
 2998 0005 07       		.byte	7
 2999 0006 08       		.byte	8
 3000 0007 09       		.byte	9
 3001 0008 0A       		.byte	10
 3002 0009 0B       		.byte	11
 3003 000a 0C       		.byte	12
 3004 000b 0D       		.byte	13
 3005 000c 0E       		.byte	14
 3006 000d 0F       		.byte	15
 3007 000e 10       		.byte	16
 3008 000f 10       		.byte	16
 3009              		.align	2
 3010              	.LC1:
 3011 0010 01       		.byte	1
 3012 0011 02       		.byte	2
 3013 0012 0000     		.section	.text.HAL_RCC_GetSysClockFreq,"ax",%progbits
 3014              		.align	2
 3015              		.global	HAL_RCC_GetSysClockFreq
 3016              		.thumb
 3017              		.thumb_func
 3019              	HAL_RCC_GetSysClockFreq:
 3020              	.LFB69:
 934:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
ARM GAS  /tmp/cc33CDhW.s 			page 82


 935:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** /**
 936:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @brief  Returns the SYSCLK frequency     
 937:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @note   The system frequency computed by this function is not the real 
 938:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *         frequency in the chip. It is calculated based on the predefined 
 939:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *         constant and the selected clock source:
 940:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @note     If SYSCLK source is HSI, function returns values based on HSI_VALUE(*)
 941:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @note     If SYSCLK source is HSE, function returns a value based on HSE_VALUE
 942:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *           divided by PREDIV factor(**)
 943:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @note     If SYSCLK source is PLL, function returns a value based on HSE_VALUE
 944:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *           divided by PREDIV factor(**) or HSI_VALUE(*) multiplied by the PLL factor.
 945:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @note     (*) HSI_VALUE is a constant defined in stm32f1xx_hal_conf.h file (default value
 946:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *               8 MHz) but the real value may vary depending on the variations
 947:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *               in voltage and temperature.
 948:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @note     (**) HSE_VALUE is a constant defined in stm32f1xx_hal_conf.h file (default value
 949:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *                8 MHz), user has to ensure that HSE_VALUE is same as the real
 950:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *                frequency of the crystal used. Otherwise, this function may
 951:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *                have wrong result.
 952:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *                  
 953:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @note   The result of this function could be not correct when using fractional
 954:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *         value for HSE crystal.
 955:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *           
 956:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @note   This function can be used by the user application to compute the 
 957:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *         baud-rate for the communication peripherals or configure other parameters.
 958:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *           
 959:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @note   Each time SYSCLK changes, this function must be called to update the
 960:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *         right SYSCLK value. Otherwise, any configuration based on this function will be incorre
 961:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *         
 962:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @retval SYSCLK frequency
 963:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   */
 964:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** uint32_t HAL_RCC_GetSysClockFreq(void)
 965:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** {
 3021              		.loc 1 965 0
 3022              		.cfi_startproc
 3023              		@ args = 0, pretend = 0, frame = 56
 3024              		@ frame_needed = 1, uses_anonymous_args = 0
 3025              		@ link register save eliminated.
 3026 0000 90B4     		push	{r4, r7}
 3027              	.LCFI33:
 3028              		.cfi_def_cfa_offset 8
 3029              		.cfi_offset 4, -8
 3030              		.cfi_offset 7, -4
 3031 0002 8EB0     		sub	sp, sp, #56
 3032              	.LCFI34:
 3033              		.cfi_def_cfa_offset 64
 3034 0004 00AF     		add	r7, sp, #0
 3035              	.LCFI35:
 3036              		.cfi_def_cfa_register 7
 966:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** #if   defined(RCC_CFGR2_PREDIV1SRC)
 967:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   const uint8_t aPLLMULFactorTable[12] = {0, 0, 4,  5,  6,  7,  8,  9, 0, 0, 0, 13};
 968:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   const uint8_t aPredivFactorTable[16] = { 1, 2,  3,  4,  5,  6,  7,  8, 9,10, 11, 12, 13, 14, 15, 
 969:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** #else
 970:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   const uint8_t aPLLMULFactorTable[16] = { 2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 1
 3037              		.loc 1 970 0
 3038 0006 364B     		ldr	r3, .L230
 3039 0008 3C1D     		adds	r4, r7, #4
 3040 000a 1868     		ldr	r0, [r3]	@ unaligned
 3041 000c 5968     		ldr	r1, [r3, #4]	@ unaligned
ARM GAS  /tmp/cc33CDhW.s 			page 83


 3042 000e 9A68     		ldr	r2, [r3, #8]	@ unaligned
 3043 0010 DB68     		ldr	r3, [r3, #12]	@ unaligned
 3044 0012 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 971:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** #if defined(RCC_CFGR2_PREDIV1)
 972:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   const uint8_t aPredivFactorTable[16] = { 1, 2,  3,  4,  5,  6,  7,  8, 9,10, 11, 12, 13, 14, 15, 
 973:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** #else
 974:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   const uint8_t aPredivFactorTable[2] = { 1, 2};
 3045              		.loc 1 974 0
 3046 0014 334A     		ldr	r2, .L230+4
 3047 0016 3B46     		mov	r3, r7
 3048 0018 1288     		ldrh	r2, [r2]	@ unaligned
 3049 001a 1A80     		strh	r2, [r3]	@ unaligned
 975:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** #endif /*RCC_CFGR2_PREDIV1*/
 976:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 977:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** #endif
 978:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   uint32_t tmpreg = 0, prediv = 0, pllclk = 0, pllmul = 0;
 3050              		.loc 1 978 0
 3051 001c 0023     		movs	r3, #0
 3052 001e FB62     		str	r3, [r7, #44]
 3053 0020 0023     		movs	r3, #0
 3054 0022 BB62     		str	r3, [r7, #40]
 3055 0024 0023     		movs	r3, #0
 3056 0026 7B63     		str	r3, [r7, #52]
 3057 0028 0023     		movs	r3, #0
 3058 002a 7B62     		str	r3, [r7, #36]
 979:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   uint32_t sysclockfreq = 0;
 3059              		.loc 1 979 0
 3060 002c 0023     		movs	r3, #0
 3061 002e 3B63     		str	r3, [r7, #48]
 980:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** #if defined(RCC_CFGR2_PREDIV1SRC)
 981:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   uint32_t prediv2 = 0, pll2mul = 0;
 982:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** #endif /*RCC_CFGR2_PREDIV1SRC*/
 983:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   
 984:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   tmpreg = RCC->CFGR;
 3062              		.loc 1 984 0
 3063 0030 2D4B     		ldr	r3, .L230+8
 3064 0032 5B68     		ldr	r3, [r3, #4]
 3065 0034 FB62     		str	r3, [r7, #44]
 985:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   
 986:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   /* Get SYSCLK source -------------------------------------------------------*/
 987:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   switch (tmpreg & RCC_CFGR_SWS)
 3066              		.loc 1 987 0
 3067 0036 FB6A     		ldr	r3, [r7, #44]
 3068 0038 03F00C03 		and	r3, r3, #12
 3069 003c 042B     		cmp	r3, #4
 3070 003e 02D0     		beq	.L221
 3071 0040 082B     		cmp	r3, #8
 3072 0042 03D0     		beq	.L222
 3073 0044 43E0     		b	.L229
 3074              	.L221:
 988:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   {
 989:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     case RCC_SYSCLKSOURCE_STATUS_HSE:  /* HSE used as system clock */
 990:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     {
 991:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       sysclockfreq = HSE_VALUE;
 3075              		.loc 1 991 0
 3076 0046 294B     		ldr	r3, .L230+12
 3077 0048 3B63     		str	r3, [r7, #48]
ARM GAS  /tmp/cc33CDhW.s 			page 84


 992:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       break;
 3078              		.loc 1 992 0
 3079 004a 43E0     		b	.L223
 3080              	.L222:
 993:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     }
 994:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     case RCC_SYSCLKSOURCE_STATUS_PLLCLK:  /* PLL used as system clock */
 995:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     {
 996:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       pllmul = aPLLMULFactorTable[(uint32_t)(tmpreg & RCC_CFGR_PLLMULL) >> POSITION_VAL(RCC_CFGR_PL
 3081              		.loc 1 996 0
 3082 004c FB6A     		ldr	r3, [r7, #44]
 3083 004e 03F47012 		and	r2, r3, #3932160
 3084 0052 4FF47013 		mov	r3, #3932160
 3085 0056 3B62     		str	r3, [r7, #32]
 3086              	.LBB259:
 3087              	.LBB260:
 531:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 3088              		.loc 2 531 0
 3089 0058 3B6A     		ldr	r3, [r7, #32]
 3090              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3091 005a 93FAA3F3 		rbit r3, r3
 3092              	@ 0 "" 2
 3093              		.thumb
 3094 005e FB61     		str	r3, [r7, #28]
 3095              		.loc 2 544 0
 3096 0060 FB69     		ldr	r3, [r7, #28]
 3097              	.LBE260:
 3098              	.LBE259:
 3099              		.loc 1 996 0
 3100 0062 B3FA83F3 		clz	r3, r3
 3101 0066 22FA03F3 		lsr	r3, r2, r3
 3102 006a 07F13802 		add	r2, r7, #56
 3103 006e 1344     		add	r3, r3, r2
 3104 0070 13F8343C 		ldrb	r3, [r3, #-52]	@ zero_extendqisi2
 3105 0074 7B62     		str	r3, [r7, #36]
 997:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       if ((tmpreg & RCC_CFGR_PLLSRC) != RCC_PLLSOURCE_HSI_DIV2)
 3106              		.loc 1 997 0
 3107 0076 FB6A     		ldr	r3, [r7, #44]
 3108 0078 03F48033 		and	r3, r3, #65536
 3109 007c 002B     		cmp	r3, #0
 3110 007e 1ED0     		beq	.L225
 998:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       {
 999:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** #if defined(RCC_CFGR2_PREDIV1)
1000:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         prediv = aPredivFactorTable[(uint32_t)(RCC->CFGR2 & RCC_CFGR2_PREDIV1) >> POSITION_VAL(RCC_
1001:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** #else
1002:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         prediv = aPredivFactorTable[(uint32_t)(RCC->CFGR & RCC_CFGR_PLLXTPRE) >> POSITION_VAL(RCC_C
 3111              		.loc 1 1002 0
 3112 0080 194B     		ldr	r3, .L230+8
 3113 0082 5B68     		ldr	r3, [r3, #4]
 3114 0084 03F40032 		and	r2, r3, #131072
 3115 0088 4FF40033 		mov	r3, #131072
 3116 008c BB61     		str	r3, [r7, #24]
 3117              	.LBB261:
 3118              	.LBB262:
 531:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 3119              		.loc 2 531 0
 3120 008e BB69     		ldr	r3, [r7, #24]
 3121              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
ARM GAS  /tmp/cc33CDhW.s 			page 85


 3122 0090 93FAA3F3 		rbit r3, r3
 3123              	@ 0 "" 2
 3124              		.thumb
 3125 0094 7B61     		str	r3, [r7, #20]
 3126              		.loc 2 544 0
 3127 0096 7B69     		ldr	r3, [r7, #20]
 3128              	.LBE262:
 3129              	.LBE261:
 3130              		.loc 1 1002 0
 3131 0098 B3FA83F3 		clz	r3, r3
 3132 009c 22FA03F3 		lsr	r3, r2, r3
 3133 00a0 07F13802 		add	r2, r7, #56
 3134 00a4 1344     		add	r3, r3, r2
 3135 00a6 13F8383C 		ldrb	r3, [r3, #-56]	@ zero_extendqisi2
 3136 00aa BB62     		str	r3, [r7, #40]
1003:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** #endif /*RCC_CFGR2_PREDIV1*/
1004:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** #if defined(RCC_CFGR2_PREDIV1SRC)
1005:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
1006:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         if(HAL_IS_BIT_SET(RCC->CFGR2, RCC_CFGR2_PREDIV1SRC))
1007:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         {
1008:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           /* PLL2 selected as Prediv1 source */
1009:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           /* PLLCLK = PLL2CLK / PREDIV1 * PLLMUL with PLL2CLK = HSE/PREDIV2 * PLL2MUL */
1010:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           prediv2 = ((RCC->CFGR2 & RCC_CFGR2_PREDIV2) >> POSITION_VAL(RCC_CFGR2_PREDIV2)) + 1;
1011:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           pll2mul = ((RCC->CFGR2 & RCC_CFGR2_PLL2MUL) >> POSITION_VAL(RCC_CFGR2_PLL2MUL)) + 2;
1012:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           pllclk = (uint32_t)((((HSE_VALUE / prediv2) * pll2mul) / prediv) * pllmul);
1013:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         }
1014:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         else
1015:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         {
1016:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           /* HSE used as PLL clock source : PLLCLK = HSE/PREDIV1 * PLLMUL */
1017:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           pllclk = (uint32_t)((HSE_VALUE / prediv) * pllmul);
1018:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         }
1019:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         
1020:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         /* If PLLMUL was set to 13 means that it was to cover the case PLLMUL 6.5 (avoid using floa
1021:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         /* In this case need to divide pllclk by 2 */
1022:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         if (pllmul == aPLLMULFactorTable[(uint32_t)(RCC_CFGR_PLLMULL6_5) >> POSITION_VAL(RCC_CFGR_P
1023:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         {
1024:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****             pllclk = pllclk / 2;
1025:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         }
1026:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** #else
1027:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         /* HSE used as PLL clock source : PLLCLK = HSE/PREDIV1 * PLLMUL */
1028:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         pllclk = (uint32_t)((HSE_VALUE / prediv) * pllmul);
 3137              		.loc 1 1028 0
 3138 00ac 0F4A     		ldr	r2, .L230+12
 3139 00ae BB6A     		ldr	r3, [r7, #40]
 3140 00b0 B2FBF3F3 		udiv	r3, r2, r3
 3141 00b4 7A6A     		ldr	r2, [r7, #36]
 3142 00b6 02FB03F3 		mul	r3, r2, r3
 3143 00ba 7B63     		str	r3, [r7, #52]
 3144 00bc 04E0     		b	.L227
 3145              	.L225:
1029:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** #endif /*RCC_CFGR2_PREDIV1SRC*/
1030:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       }
1031:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       else
1032:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       {
1033:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         /* HSI used as PLL clock source : PLLCLK = HSI/2 * PLLMUL */
1034:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         pllclk = (uint32_t)((HSI_VALUE >> 1) * pllmul);
 3146              		.loc 1 1034 0
ARM GAS  /tmp/cc33CDhW.s 			page 86


 3147 00be 7B6A     		ldr	r3, [r7, #36]
 3148 00c0 0A4A     		ldr	r2, .L230+12
 3149 00c2 02FB03F3 		mul	r3, r2, r3
 3150 00c6 7B63     		str	r3, [r7, #52]
 3151              	.L227:
1035:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       }
1036:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       sysclockfreq = pllclk;
 3152              		.loc 1 1036 0
 3153 00c8 7B6B     		ldr	r3, [r7, #52]
 3154 00ca 3B63     		str	r3, [r7, #48]
1037:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       break;
 3155              		.loc 1 1037 0
 3156 00cc 02E0     		b	.L223
 3157              	.L229:
1038:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     }
1039:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     case RCC_SYSCLKSOURCE_STATUS_HSI:  /* HSI used as system clock source */
1040:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     default: /* HSI used as system clock */
1041:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     {
1042:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       sysclockfreq = HSI_VALUE;
 3158              		.loc 1 1042 0
 3159 00ce 084B     		ldr	r3, .L230+16
 3160 00d0 3B63     		str	r3, [r7, #48]
1043:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       break;
 3161              		.loc 1 1043 0
 3162 00d2 00BF     		nop
 3163              	.L223:
1044:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     }
1045:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   }
1046:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   return sysclockfreq;
 3164              		.loc 1 1046 0
 3165 00d4 3B6B     		ldr	r3, [r7, #48]
1047:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** }
 3166              		.loc 1 1047 0
 3167 00d6 1846     		mov	r0, r3
 3168 00d8 3837     		adds	r7, r7, #56
 3169              	.LCFI36:
 3170              		.cfi_def_cfa_offset 8
 3171 00da BD46     		mov	sp, r7
 3172              	.LCFI37:
 3173              		.cfi_def_cfa_register 13
 3174              		@ sp needed
 3175 00dc 90BC     		pop	{r4, r7}
 3176              	.LCFI38:
 3177              		.cfi_restore 7
 3178              		.cfi_restore 4
 3179              		.cfi_def_cfa_offset 0
 3180 00de 7047     		bx	lr
 3181              	.L231:
 3182              		.align	2
 3183              	.L230:
 3184 00e0 00000000 		.word	.LC0
 3185 00e4 10000000 		.word	.LC1
 3186 00e8 00100240 		.word	1073876992
 3187 00ec 00093D00 		.word	4000000
 3188 00f0 00127A00 		.word	8000000
 3189              		.cfi_endproc
 3190              	.LFE69:
ARM GAS  /tmp/cc33CDhW.s 			page 87


 3192              		.section	.text.HAL_RCC_GetHCLKFreq,"ax",%progbits
 3193              		.align	2
 3194              		.global	HAL_RCC_GetHCLKFreq
 3195              		.thumb
 3196              		.thumb_func
 3198              	HAL_RCC_GetHCLKFreq:
 3199              	.LFB70:
1048:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
1049:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** /**
1050:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @brief  Returns the HCLK frequency     
1051:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @note   Each time HCLK changes, this function must be called to update the
1052:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *         right HCLK value. Otherwise, any configuration based on this function will be incorrect
1053:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * 
1054:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @note   The SystemCoreClock CMSIS variable is used to store System Clock Frequency 
1055:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *         and updated within this function
1056:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @retval HCLK frequency
1057:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   */
1058:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** uint32_t HAL_RCC_GetHCLKFreq(void)
1059:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** {
 3200              		.loc 1 1059 0
 3201              		.cfi_startproc
 3202              		@ args = 0, pretend = 0, frame = 0
 3203              		@ frame_needed = 1, uses_anonymous_args = 0
 3204              		@ link register save eliminated.
 3205 0000 80B4     		push	{r7}
 3206              	.LCFI39:
 3207              		.cfi_def_cfa_offset 4
 3208              		.cfi_offset 7, -4
 3209 0002 00AF     		add	r7, sp, #0
 3210              	.LCFI40:
 3211              		.cfi_def_cfa_register 7
1060:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   return SystemCoreClock;
 3212              		.loc 1 1060 0
 3213 0004 034B     		ldr	r3, .L234
 3214 0006 1B68     		ldr	r3, [r3]
1061:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** }
 3215              		.loc 1 1061 0
 3216 0008 1846     		mov	r0, r3
 3217 000a BD46     		mov	sp, r7
 3218              	.LCFI41:
 3219              		.cfi_def_cfa_register 13
 3220              		@ sp needed
 3221 000c 5DF8047B 		ldr	r7, [sp], #4
 3222              	.LCFI42:
 3223              		.cfi_restore 7
 3224              		.cfi_def_cfa_offset 0
 3225 0010 7047     		bx	lr
 3226              	.L235:
 3227 0012 00BF     		.align	2
 3228              	.L234:
 3229 0014 00000000 		.word	SystemCoreClock
 3230              		.cfi_endproc
 3231              	.LFE70:
 3233              		.section	.text.HAL_RCC_GetPCLK1Freq,"ax",%progbits
 3234              		.align	2
 3235              		.global	HAL_RCC_GetPCLK1Freq
 3236              		.thumb
ARM GAS  /tmp/cc33CDhW.s 			page 88


 3237              		.thumb_func
 3239              	HAL_RCC_GetPCLK1Freq:
 3240              	.LFB71:
1062:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
1063:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** /**
1064:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @brief  Returns the PCLK1 frequency     
1065:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @note   Each time PCLK1 changes, this function must be called to update the
1066:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *         right PCLK1 value. Otherwise, any configuration based on this function will be incorrec
1067:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @retval PCLK1 frequency
1068:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   */
1069:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** uint32_t HAL_RCC_GetPCLK1Freq(void)
1070:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** {
 3241              		.loc 1 1070 0
 3242              		.cfi_startproc
 3243              		@ args = 0, pretend = 0, frame = 8
 3244              		@ frame_needed = 1, uses_anonymous_args = 0
 3245 0000 80B5     		push	{r7, lr}
 3246              	.LCFI43:
 3247              		.cfi_def_cfa_offset 8
 3248              		.cfi_offset 7, -8
 3249              		.cfi_offset 14, -4
 3250 0002 82B0     		sub	sp, sp, #8
 3251              	.LCFI44:
 3252              		.cfi_def_cfa_offset 16
 3253 0004 00AF     		add	r7, sp, #0
 3254              	.LCFI45:
 3255              		.cfi_def_cfa_register 7
1071:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   /* Get HCLK source and Compute PCLK1 frequency ---------------------------*/
1072:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   return (HAL_RCC_GetHCLKFreq() >> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE1) >> RCC_CFGR_PPRE1_BIT
 3256              		.loc 1 1072 0
 3257 0006 FFF7FEFF 		bl	HAL_RCC_GetHCLKFreq
 3258 000a 0146     		mov	r1, r0
 3259 000c 0B4B     		ldr	r3, .L239
 3260 000e 5B68     		ldr	r3, [r3, #4]
 3261 0010 03F4E062 		and	r2, r3, #1792
 3262 0014 4FF4E063 		mov	r3, #1792
 3263 0018 7B60     		str	r3, [r7, #4]
 3264              	.LBB263:
 3265              	.LBB264:
 531:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 3266              		.loc 2 531 0
 3267 001a 7B68     		ldr	r3, [r7, #4]
 3268              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3269 001c 93FAA3F3 		rbit r3, r3
 3270              	@ 0 "" 2
 3271              		.thumb
 3272 0020 3B60     		str	r3, [r7]
 3273              		.loc 2 544 0
 3274 0022 3B68     		ldr	r3, [r7]
 3275              	.LBE264:
 3276              	.LBE263:
 3277              		.loc 1 1072 0
 3278 0024 B3FA83F3 		clz	r3, r3
 3279 0028 22FA03F3 		lsr	r3, r2, r3
 3280 002c 044A     		ldr	r2, .L239+4
 3281 002e D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 3282 0030 21FA03F3 		lsr	r3, r1, r3
ARM GAS  /tmp/cc33CDhW.s 			page 89


1073:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** }    
 3283              		.loc 1 1073 0
 3284 0034 1846     		mov	r0, r3
 3285 0036 0837     		adds	r7, r7, #8
 3286              	.LCFI46:
 3287              		.cfi_def_cfa_offset 8
 3288 0038 BD46     		mov	sp, r7
 3289              	.LCFI47:
 3290              		.cfi_def_cfa_register 13
 3291              		@ sp needed
 3292 003a 80BD     		pop	{r7, pc}
 3293              	.L240:
 3294              		.align	2
 3295              	.L239:
 3296 003c 00100240 		.word	1073876992
 3297 0040 00000000 		.word	APBPrescTable
 3298              		.cfi_endproc
 3299              	.LFE71:
 3301              		.section	.text.HAL_RCC_GetPCLK2Freq,"ax",%progbits
 3302              		.align	2
 3303              		.global	HAL_RCC_GetPCLK2Freq
 3304              		.thumb
 3305              		.thumb_func
 3307              	HAL_RCC_GetPCLK2Freq:
 3308              	.LFB72:
1074:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
1075:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** /**
1076:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @brief  Returns the PCLK2 frequency     
1077:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @note   Each time PCLK2 changes, this function must be called to update the
1078:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *         right PCLK2 value. Otherwise, any configuration based on this function will be incorrec
1079:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @retval PCLK2 frequency
1080:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   */
1081:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** uint32_t HAL_RCC_GetPCLK2Freq(void)
1082:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** {
 3309              		.loc 1 1082 0
 3310              		.cfi_startproc
 3311              		@ args = 0, pretend = 0, frame = 8
 3312              		@ frame_needed = 1, uses_anonymous_args = 0
 3313 0000 80B5     		push	{r7, lr}
 3314              	.LCFI48:
 3315              		.cfi_def_cfa_offset 8
 3316              		.cfi_offset 7, -8
 3317              		.cfi_offset 14, -4
 3318 0002 82B0     		sub	sp, sp, #8
 3319              	.LCFI49:
 3320              		.cfi_def_cfa_offset 16
 3321 0004 00AF     		add	r7, sp, #0
 3322              	.LCFI50:
 3323              		.cfi_def_cfa_register 7
1083:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   /* Get HCLK source and Compute PCLK2 frequency ---------------------------*/
1084:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   return (HAL_RCC_GetHCLKFreq()>> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE2) >> RCC_CFGR_PPRE2_BITN
 3324              		.loc 1 1084 0
 3325 0006 FFF7FEFF 		bl	HAL_RCC_GetHCLKFreq
 3326 000a 0146     		mov	r1, r0
 3327 000c 0B4B     		ldr	r3, .L244
 3328 000e 5B68     		ldr	r3, [r3, #4]
 3329 0010 03F46052 		and	r2, r3, #14336
ARM GAS  /tmp/cc33CDhW.s 			page 90


 3330 0014 4FF46053 		mov	r3, #14336
 3331 0018 7B60     		str	r3, [r7, #4]
 3332              	.LBB265:
 3333              	.LBB266:
 531:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 3334              		.loc 2 531 0
 3335 001a 7B68     		ldr	r3, [r7, #4]
 3336              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3337 001c 93FAA3F3 		rbit r3, r3
 3338              	@ 0 "" 2
 3339              		.thumb
 3340 0020 3B60     		str	r3, [r7]
 3341              		.loc 2 544 0
 3342 0022 3B68     		ldr	r3, [r7]
 3343              	.LBE266:
 3344              	.LBE265:
 3345              		.loc 1 1084 0
 3346 0024 B3FA83F3 		clz	r3, r3
 3347 0028 22FA03F3 		lsr	r3, r2, r3
 3348 002c 044A     		ldr	r2, .L244+4
 3349 002e D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 3350 0030 21FA03F3 		lsr	r3, r1, r3
1085:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** } 
 3351              		.loc 1 1085 0
 3352 0034 1846     		mov	r0, r3
 3353 0036 0837     		adds	r7, r7, #8
 3354              	.LCFI51:
 3355              		.cfi_def_cfa_offset 8
 3356 0038 BD46     		mov	sp, r7
 3357              	.LCFI52:
 3358              		.cfi_def_cfa_register 13
 3359              		@ sp needed
 3360 003a 80BD     		pop	{r7, pc}
 3361              	.L245:
 3362              		.align	2
 3363              	.L244:
 3364 003c 00100240 		.word	1073876992
 3365 0040 00000000 		.word	APBPrescTable
 3366              		.cfi_endproc
 3367              	.LFE72:
 3369              		.section	.text.HAL_RCC_GetOscConfig,"ax",%progbits
 3370              		.align	2
 3371              		.global	HAL_RCC_GetOscConfig
 3372              		.thumb
 3373              		.thumb_func
 3375              	HAL_RCC_GetOscConfig:
 3376              	.LFB73:
1086:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
1087:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** /**
1088:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @brief  Configures the RCC_OscInitStruct according to the internal 
1089:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * RCC configuration registers.
1090:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @param  RCC_OscInitStruct pointer to an RCC_OscInitTypeDef structure that 
1091:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * will be configured.
1092:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @retval None
1093:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   */
1094:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** void HAL_RCC_GetOscConfig(RCC_OscInitTypeDef  *RCC_OscInitStruct)
1095:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** {
ARM GAS  /tmp/cc33CDhW.s 			page 91


 3377              		.loc 1 1095 0
 3378              		.cfi_startproc
 3379              		@ args = 0, pretend = 0, frame = 16
 3380              		@ frame_needed = 1, uses_anonymous_args = 0
 3381              		@ link register save eliminated.
 3382 0000 80B4     		push	{r7}
 3383              	.LCFI53:
 3384              		.cfi_def_cfa_offset 4
 3385              		.cfi_offset 7, -4
 3386 0002 85B0     		sub	sp, sp, #20
 3387              	.LCFI54:
 3388              		.cfi_def_cfa_offset 24
 3389 0004 00AF     		add	r7, sp, #0
 3390              	.LCFI55:
 3391              		.cfi_def_cfa_register 7
 3392 0006 7860     		str	r0, [r7, #4]
1096:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   /* Check the parameters */
1097:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   assert_param(RCC_OscInitStruct != NULL);
1098:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
1099:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   /* Set all possible values for the Oscillator type parameter ---------------*/
1100:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   RCC_OscInitStruct->OscillatorType = RCC_OSCILLATORTYPE_HSE | RCC_OSCILLATORTYPE_HSI  \
 3393              		.loc 1 1100 0
 3394 0008 7B68     		ldr	r3, [r7, #4]
 3395 000a 0F22     		movs	r2, #15
 3396 000c 1A60     		str	r2, [r3]
1101:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****                   | RCC_OSCILLATORTYPE_LSE | RCC_OSCILLATORTYPE_LSI;
1102:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
1103:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** #if defined(RCC_CFGR2_PREDIV1SRC)
1104:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   /* Get the Prediv1 source --------------------------------------------------*/
1105:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   RCC_OscInitStruct->Prediv1Source = READ_BIT(RCC->CFGR2,RCC_CFGR2_PREDIV1SRC);
1106:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** #endif /* RCC_CFGR2_PREDIV1SRC */
1107:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
1108:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   /* Get the HSE configuration -----------------------------------------------*/
1109:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   if((RCC->CR &RCC_CR_HSEBYP) == RCC_CR_HSEBYP)
 3397              		.loc 1 1109 0
 3398 000e 3F4B     		ldr	r3, .L260
 3399 0010 1B68     		ldr	r3, [r3]
 3400 0012 03F48023 		and	r3, r3, #262144
 3401 0016 002B     		cmp	r3, #0
 3402 0018 04D0     		beq	.L247
1110:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   {
1111:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     RCC_OscInitStruct->HSEState = RCC_HSE_BYPASS;
 3403              		.loc 1 1111 0
 3404 001a 7B68     		ldr	r3, [r7, #4]
 3405 001c 4FF4A022 		mov	r2, #327680
 3406 0020 5A60     		str	r2, [r3, #4]
 3407 0022 0DE0     		b	.L248
 3408              	.L247:
1112:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   }
1113:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   else if((RCC->CR &RCC_CR_HSEON) == RCC_CR_HSEON)
 3409              		.loc 1 1113 0
 3410 0024 394B     		ldr	r3, .L260
 3411 0026 1B68     		ldr	r3, [r3]
 3412 0028 03F48033 		and	r3, r3, #65536
 3413 002c 002B     		cmp	r3, #0
 3414 002e 04D0     		beq	.L249
1114:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   {
ARM GAS  /tmp/cc33CDhW.s 			page 92


1115:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     RCC_OscInitStruct->HSEState = RCC_HSE_ON;
 3415              		.loc 1 1115 0
 3416 0030 7B68     		ldr	r3, [r7, #4]
 3417 0032 4FF48032 		mov	r2, #65536
 3418 0036 5A60     		str	r2, [r3, #4]
 3419 0038 02E0     		b	.L248
 3420              	.L249:
1116:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   }
1117:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   else
1118:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   {
1119:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     RCC_OscInitStruct->HSEState = RCC_HSE_OFF;
 3421              		.loc 1 1119 0
 3422 003a 7B68     		ldr	r3, [r7, #4]
 3423 003c 0022     		movs	r2, #0
 3424 003e 5A60     		str	r2, [r3, #4]
 3425              	.L248:
1120:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   }
1121:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   RCC_OscInitStruct->HSEPredivValue = __HAL_RCC_HSE_GET_PREDIV();
 3426              		.loc 1 1121 0
 3427 0040 324B     		ldr	r3, .L260
 3428 0042 5B68     		ldr	r3, [r3, #4]
 3429 0044 03F40032 		and	r2, r3, #131072
 3430 0048 7B68     		ldr	r3, [r7, #4]
 3431 004a 9A60     		str	r2, [r3, #8]
1122:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
1123:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   /* Get the HSI configuration -----------------------------------------------*/
1124:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   if((RCC->CR &RCC_CR_HSION) == RCC_CR_HSION)
 3432              		.loc 1 1124 0
 3433 004c 2F4B     		ldr	r3, .L260
 3434 004e 1B68     		ldr	r3, [r3]
 3435 0050 03F00103 		and	r3, r3, #1
 3436 0054 002B     		cmp	r3, #0
 3437 0056 03D0     		beq	.L250
1125:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   {
1126:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     RCC_OscInitStruct->HSIState = RCC_HSI_ON;
 3438              		.loc 1 1126 0
 3439 0058 7B68     		ldr	r3, [r7, #4]
 3440 005a 0122     		movs	r2, #1
 3441 005c 1A61     		str	r2, [r3, #16]
 3442 005e 02E0     		b	.L251
 3443              	.L250:
1127:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   }
1128:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   else
1129:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   {
1130:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     RCC_OscInitStruct->HSIState = RCC_HSI_OFF;
 3444              		.loc 1 1130 0
 3445 0060 7B68     		ldr	r3, [r7, #4]
 3446 0062 0022     		movs	r2, #0
 3447 0064 1A61     		str	r2, [r3, #16]
 3448              	.L251:
1131:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   }
1132:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   
1133:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   RCC_OscInitStruct->HSICalibrationValue = (uint32_t)((RCC->CR & RCC_CR_HSITRIM) >> POSITION_VAL(RC
 3449              		.loc 1 1133 0
 3450 0066 294B     		ldr	r3, .L260
 3451 0068 1B68     		ldr	r3, [r3]
 3452 006a 03F0F802 		and	r2, r3, #248
ARM GAS  /tmp/cc33CDhW.s 			page 93


 3453 006e F823     		movs	r3, #248
 3454 0070 FB60     		str	r3, [r7, #12]
 3455              	.LBB267:
 3456              	.LBB268:
 531:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 3457              		.loc 2 531 0
 3458 0072 FB68     		ldr	r3, [r7, #12]
 3459              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3460 0074 93FAA3F3 		rbit r3, r3
 3461              	@ 0 "" 2
 3462              		.thumb
 3463 0078 BB60     		str	r3, [r7, #8]
 3464              		.loc 2 544 0
 3465 007a BB68     		ldr	r3, [r7, #8]
 3466              	.LBE268:
 3467              	.LBE267:
 3468              		.loc 1 1133 0
 3469 007c B3FA83F3 		clz	r3, r3
 3470 0080 DA40     		lsrs	r2, r2, r3
 3471 0082 7B68     		ldr	r3, [r7, #4]
 3472 0084 5A61     		str	r2, [r3, #20]
1134:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   
1135:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   /* Get the LSE configuration -----------------------------------------------*/
1136:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   if((RCC->BDCR &RCC_BDCR_LSEBYP) == RCC_BDCR_LSEBYP)
 3473              		.loc 1 1136 0
 3474 0086 214B     		ldr	r3, .L260
 3475 0088 1B6A     		ldr	r3, [r3, #32]
 3476 008a 03F00403 		and	r3, r3, #4
 3477 008e 002B     		cmp	r3, #0
 3478 0090 03D0     		beq	.L253
1137:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   {
1138:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     RCC_OscInitStruct->LSEState = RCC_LSE_BYPASS;
 3479              		.loc 1 1138 0
 3480 0092 7B68     		ldr	r3, [r7, #4]
 3481 0094 0522     		movs	r2, #5
 3482 0096 DA60     		str	r2, [r3, #12]
 3483 0098 0CE0     		b	.L254
 3484              	.L253:
1139:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   }
1140:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   else if((RCC->BDCR &RCC_BDCR_LSEON) == RCC_BDCR_LSEON)
 3485              		.loc 1 1140 0
 3486 009a 1C4B     		ldr	r3, .L260
 3487 009c 1B6A     		ldr	r3, [r3, #32]
 3488 009e 03F00103 		and	r3, r3, #1
 3489 00a2 002B     		cmp	r3, #0
 3490 00a4 03D0     		beq	.L255
1141:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   {
1142:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     RCC_OscInitStruct->LSEState = RCC_LSE_ON;
 3491              		.loc 1 1142 0
 3492 00a6 7B68     		ldr	r3, [r7, #4]
 3493 00a8 0122     		movs	r2, #1
 3494 00aa DA60     		str	r2, [r3, #12]
 3495 00ac 02E0     		b	.L254
 3496              	.L255:
1143:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   }
1144:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   else
1145:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   {
ARM GAS  /tmp/cc33CDhW.s 			page 94


1146:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     RCC_OscInitStruct->LSEState = RCC_LSE_OFF;
 3497              		.loc 1 1146 0
 3498 00ae 7B68     		ldr	r3, [r7, #4]
 3499 00b0 0022     		movs	r2, #0
 3500 00b2 DA60     		str	r2, [r3, #12]
 3501              	.L254:
1147:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   }
1148:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   
1149:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   /* Get the LSI configuration -----------------------------------------------*/
1150:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   if((RCC->CSR &RCC_CSR_LSION) == RCC_CSR_LSION)
 3502              		.loc 1 1150 0
 3503 00b4 154B     		ldr	r3, .L260
 3504 00b6 5B6A     		ldr	r3, [r3, #36]
 3505 00b8 03F00103 		and	r3, r3, #1
 3506 00bc 002B     		cmp	r3, #0
 3507 00be 03D0     		beq	.L256
1151:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   {
1152:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     RCC_OscInitStruct->LSIState = RCC_LSI_ON;
 3508              		.loc 1 1152 0
 3509 00c0 7B68     		ldr	r3, [r7, #4]
 3510 00c2 0122     		movs	r2, #1
 3511 00c4 9A61     		str	r2, [r3, #24]
 3512 00c6 02E0     		b	.L257
 3513              	.L256:
1153:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   }
1154:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   else
1155:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   {
1156:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     RCC_OscInitStruct->LSIState = RCC_LSI_OFF;
 3514              		.loc 1 1156 0
 3515 00c8 7B68     		ldr	r3, [r7, #4]
 3516 00ca 0022     		movs	r2, #0
 3517 00cc 9A61     		str	r2, [r3, #24]
 3518              	.L257:
1157:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   }
1158:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   
1159:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
1160:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   /* Get the PLL configuration -----------------------------------------------*/
1161:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   if((RCC->CR &RCC_CR_PLLON) == RCC_CR_PLLON)
 3519              		.loc 1 1161 0
 3520 00ce 0F4B     		ldr	r3, .L260
 3521 00d0 1B68     		ldr	r3, [r3]
 3522 00d2 03F08073 		and	r3, r3, #16777216
 3523 00d6 002B     		cmp	r3, #0
 3524 00d8 03D0     		beq	.L258
1162:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   {
1163:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     RCC_OscInitStruct->PLL.PLLState = RCC_PLL_ON;
 3525              		.loc 1 1163 0
 3526 00da 7B68     		ldr	r3, [r7, #4]
 3527 00dc 0222     		movs	r2, #2
 3528 00de DA61     		str	r2, [r3, #28]
 3529 00e0 02E0     		b	.L259
 3530              	.L258:
1164:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   }
1165:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   else
1166:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   {
1167:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     RCC_OscInitStruct->PLL.PLLState = RCC_PLL_OFF;
 3531              		.loc 1 1167 0
ARM GAS  /tmp/cc33CDhW.s 			page 95


 3532 00e2 7B68     		ldr	r3, [r7, #4]
 3533 00e4 0122     		movs	r2, #1
 3534 00e6 DA61     		str	r2, [r3, #28]
 3535              	.L259:
1168:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   }
1169:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   RCC_OscInitStruct->PLL.PLLSource = (uint32_t)(RCC->CFGR & RCC_CFGR_PLLSRC);
 3536              		.loc 1 1169 0
 3537 00e8 084B     		ldr	r3, .L260
 3538 00ea 5B68     		ldr	r3, [r3, #4]
 3539 00ec 03F48032 		and	r2, r3, #65536
 3540 00f0 7B68     		ldr	r3, [r7, #4]
 3541 00f2 1A62     		str	r2, [r3, #32]
1170:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   RCC_OscInitStruct->PLL.PLLMUL = (uint32_t)(RCC->CFGR & RCC_CFGR_PLLMULL);
 3542              		.loc 1 1170 0
 3543 00f4 054B     		ldr	r3, .L260
 3544 00f6 5B68     		ldr	r3, [r3, #4]
 3545 00f8 03F47012 		and	r2, r3, #3932160
 3546 00fc 7B68     		ldr	r3, [r7, #4]
 3547 00fe 5A62     		str	r2, [r3, #36]
1171:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** #if defined(RCC_CR_PLL2ON)
1172:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   /* Get the PLL2 configuration -----------------------------------------------*/
1173:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   if((RCC->CR &RCC_CR_PLL2ON) == RCC_CR_PLL2ON)
1174:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   {
1175:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     RCC_OscInitStruct->PLL2.PLL2State = RCC_PLL2_ON;
1176:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   }
1177:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   else
1178:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   {
1179:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     RCC_OscInitStruct->PLL2.PLL2State = RCC_PLL2_OFF;
1180:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   }
1181:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   RCC_OscInitStruct->PLL2.HSEPrediv2Value = __HAL_RCC_HSE_GET_PREDIV2();
1182:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   RCC_OscInitStruct->PLL2.PLL2MUL = (uint32_t)(RCC->CFGR2 & RCC_CFGR2_PLL2MUL);
1183:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** #endif /* RCC_CR_PLL2ON */
1184:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** }
 3548              		.loc 1 1184 0
 3549 0100 1437     		adds	r7, r7, #20
 3550              	.LCFI56:
 3551              		.cfi_def_cfa_offset 4
 3552 0102 BD46     		mov	sp, r7
 3553              	.LCFI57:
 3554              		.cfi_def_cfa_register 13
 3555              		@ sp needed
 3556 0104 5DF8047B 		ldr	r7, [sp], #4
 3557              	.LCFI58:
 3558              		.cfi_restore 7
 3559              		.cfi_def_cfa_offset 0
 3560 0108 7047     		bx	lr
 3561              	.L261:
 3562 010a 00BF     		.align	2
 3563              	.L260:
 3564 010c 00100240 		.word	1073876992
 3565              		.cfi_endproc
 3566              	.LFE73:
 3568              		.section	.text.HAL_RCC_GetClockConfig,"ax",%progbits
 3569              		.align	2
 3570              		.global	HAL_RCC_GetClockConfig
 3571              		.thumb
 3572              		.thumb_func
ARM GAS  /tmp/cc33CDhW.s 			page 96


 3574              	HAL_RCC_GetClockConfig:
 3575              	.LFB74:
1185:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
1186:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** /**
1187:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @brief  Get the RCC_ClkInitStruct according to the internal 
1188:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * RCC configuration registers.
1189:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @param  RCC_ClkInitStruct pointer to an RCC_ClkInitTypeDef structure that 
1190:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * contains the current clock configuration.
1191:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @param  pFLatency Pointer on the Flash Latency.
1192:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @retval None
1193:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   */
1194:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** void HAL_RCC_GetClockConfig(RCC_ClkInitTypeDef  *RCC_ClkInitStruct, uint32_t *pFLatency)
1195:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** {
 3576              		.loc 1 1195 0
 3577              		.cfi_startproc
 3578              		@ args = 0, pretend = 0, frame = 8
 3579              		@ frame_needed = 1, uses_anonymous_args = 0
 3580              		@ link register save eliminated.
 3581 0000 80B4     		push	{r7}
 3582              	.LCFI59:
 3583              		.cfi_def_cfa_offset 4
 3584              		.cfi_offset 7, -4
 3585 0002 83B0     		sub	sp, sp, #12
 3586              	.LCFI60:
 3587              		.cfi_def_cfa_offset 16
 3588 0004 00AF     		add	r7, sp, #0
 3589              	.LCFI61:
 3590              		.cfi_def_cfa_register 7
 3591 0006 7860     		str	r0, [r7, #4]
 3592 0008 3960     		str	r1, [r7]
1196:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   /* Check the parameters */
1197:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   assert_param(RCC_ClkInitStruct != NULL);
1198:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   assert_param(pFLatency != NULL);
1199:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
1200:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   /* Set all possible values for the Clock type parameter --------------------*/
1201:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   RCC_ClkInitStruct->ClockType = RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_PCLK1 | 
 3593              		.loc 1 1201 0
 3594 000a 7B68     		ldr	r3, [r7, #4]
 3595 000c 0F22     		movs	r2, #15
 3596 000e 1A60     		str	r2, [r3]
1202:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   
1203:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   /* Get the SYSCLK configuration --------------------------------------------*/ 
1204:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   RCC_ClkInitStruct->SYSCLKSource = (uint32_t)(RCC->CFGR & RCC_CFGR_SW);
 3597              		.loc 1 1204 0
 3598 0010 114B     		ldr	r3, .L263
 3599 0012 5B68     		ldr	r3, [r3, #4]
 3600 0014 03F00302 		and	r2, r3, #3
 3601 0018 7B68     		ldr	r3, [r7, #4]
 3602 001a 5A60     		str	r2, [r3, #4]
1205:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   
1206:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   /* Get the HCLK configuration ----------------------------------------------*/ 
1207:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   RCC_ClkInitStruct->AHBCLKDivider = (uint32_t)(RCC->CFGR & RCC_CFGR_HPRE); 
 3603              		.loc 1 1207 0
 3604 001c 0E4B     		ldr	r3, .L263
 3605 001e 5B68     		ldr	r3, [r3, #4]
 3606 0020 03F0F002 		and	r2, r3, #240
 3607 0024 7B68     		ldr	r3, [r7, #4]
ARM GAS  /tmp/cc33CDhW.s 			page 97


 3608 0026 9A60     		str	r2, [r3, #8]
1208:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   
1209:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   /* Get the APB1 configuration ----------------------------------------------*/ 
1210:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   RCC_ClkInitStruct->APB1CLKDivider = (uint32_t)(RCC->CFGR & RCC_CFGR_PPRE1);   
 3609              		.loc 1 1210 0
 3610 0028 0B4B     		ldr	r3, .L263
 3611 002a 5B68     		ldr	r3, [r3, #4]
 3612 002c 03F4E062 		and	r2, r3, #1792
 3613 0030 7B68     		ldr	r3, [r7, #4]
 3614 0032 DA60     		str	r2, [r3, #12]
1211:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   
1212:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   /* Get the APB2 configuration ----------------------------------------------*/ 
1213:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   RCC_ClkInitStruct->APB2CLKDivider = (uint32_t)((RCC->CFGR & RCC_CFGR_PPRE2) >> 3);
 3615              		.loc 1 1213 0
 3616 0034 084B     		ldr	r3, .L263
 3617 0036 5B68     		ldr	r3, [r3, #4]
 3618 0038 03F46053 		and	r3, r3, #14336
 3619 003c DA08     		lsrs	r2, r3, #3
 3620 003e 7B68     		ldr	r3, [r7, #4]
 3621 0040 1A61     		str	r2, [r3, #16]
1214:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   
1215:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** #if   defined(FLASH_ACR_LATENCY)
1216:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   /* Get the Flash Wait State (Latency) configuration ------------------------*/   
1217:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *pFLatency = (uint32_t)(FLASH->ACR & FLASH_ACR_LATENCY); 
 3622              		.loc 1 1217 0
 3623 0042 064B     		ldr	r3, .L263+4
 3624 0044 1B68     		ldr	r3, [r3]
 3625 0046 03F00702 		and	r2, r3, #7
 3626 004a 3B68     		ldr	r3, [r7]
 3627 004c 1A60     		str	r2, [r3]
1218:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** #else
1219:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   /* For VALUE lines devices, only LATENCY_0 can be set*/
1220:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *pFLatency = (uint32_t)FLASH_LATENCY_0; 
1221:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** #endif
1222:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** }
 3628              		.loc 1 1222 0
 3629 004e 0C37     		adds	r7, r7, #12
 3630              	.LCFI62:
 3631              		.cfi_def_cfa_offset 4
 3632 0050 BD46     		mov	sp, r7
 3633              	.LCFI63:
 3634              		.cfi_def_cfa_register 13
 3635              		@ sp needed
 3636 0052 5DF8047B 		ldr	r7, [sp], #4
 3637              	.LCFI64:
 3638              		.cfi_restore 7
 3639              		.cfi_def_cfa_offset 0
 3640 0056 7047     		bx	lr
 3641              	.L264:
 3642              		.align	2
 3643              	.L263:
 3644 0058 00100240 		.word	1073876992
 3645 005c 00200240 		.word	1073881088
 3646              		.cfi_endproc
 3647              	.LFE74:
 3649              		.section	.text.HAL_RCC_NMI_IRQHandler,"ax",%progbits
 3650              		.align	2
ARM GAS  /tmp/cc33CDhW.s 			page 98


 3651              		.global	HAL_RCC_NMI_IRQHandler
 3652              		.thumb
 3653              		.thumb_func
 3655              	HAL_RCC_NMI_IRQHandler:
 3656              	.LFB75:
1223:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
1224:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** /**
1225:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @brief This function handles the RCC CSS interrupt request.
1226:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @note This API should be called under the NMI_Handler().
1227:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @retval None
1228:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   */
1229:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** void HAL_RCC_NMI_IRQHandler(void)
1230:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** {
 3657              		.loc 1 1230 0
 3658              		.cfi_startproc
 3659              		@ args = 0, pretend = 0, frame = 0
 3660              		@ frame_needed = 1, uses_anonymous_args = 0
 3661 0000 80B5     		push	{r7, lr}
 3662              	.LCFI65:
 3663              		.cfi_def_cfa_offset 8
 3664              		.cfi_offset 7, -8
 3665              		.cfi_offset 14, -4
 3666 0002 00AF     		add	r7, sp, #0
 3667              	.LCFI66:
 3668              		.cfi_def_cfa_register 7
1231:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   /* Check RCC CSSF flag  */
1232:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   if(__HAL_RCC_GET_IT(RCC_IT_CSS))
 3669              		.loc 1 1232 0
 3670 0004 054B     		ldr	r3, .L267
 3671 0006 9B68     		ldr	r3, [r3, #8]
 3672 0008 03F08003 		and	r3, r3, #128
 3673 000c 002B     		cmp	r3, #0
 3674 000e 04D0     		beq	.L265
1233:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   {
1234:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     /* RCC Clock Security System interrupt user callback */
1235:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     HAL_RCC_CSSCallback();
 3675              		.loc 1 1235 0
 3676 0010 FFF7FEFF 		bl	HAL_RCC_CSSCallback
1236:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     
1237:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     /* Clear RCC CSS pending bit */
1238:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     __HAL_RCC_CLEAR_IT(RCC_IT_CSS);
 3677              		.loc 1 1238 0
 3678 0014 024B     		ldr	r3, .L267+4
 3679 0016 8022     		movs	r2, #128
 3680 0018 1A70     		strb	r2, [r3]
 3681              	.L265:
1239:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   }
1240:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** }
 3682              		.loc 1 1240 0
 3683 001a 80BD     		pop	{r7, pc}
 3684              	.L268:
 3685              		.align	2
 3686              	.L267:
 3687 001c 00100240 		.word	1073876992
 3688 0020 0A100240 		.word	1073877002
 3689              		.cfi_endproc
 3690              	.LFE75:
ARM GAS  /tmp/cc33CDhW.s 			page 99


 3692              		.section	.text.HAL_RCC_CSSCallback,"ax",%progbits
 3693              		.align	2
 3694              		.weak	HAL_RCC_CSSCallback
 3695              		.thumb
 3696              		.thumb_func
 3698              	HAL_RCC_CSSCallback:
 3699              	.LFB76:
1241:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
1242:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** /**
1243:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @brief  RCC Clock Security System interrupt callback
1244:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @retval none
1245:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   */
1246:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** __weak void HAL_RCC_CSSCallback(void)
1247:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** {
 3700              		.loc 1 1247 0
 3701              		.cfi_startproc
 3702              		@ args = 0, pretend = 0, frame = 0
 3703              		@ frame_needed = 1, uses_anonymous_args = 0
 3704              		@ link register save eliminated.
 3705 0000 80B4     		push	{r7}
 3706              	.LCFI67:
 3707              		.cfi_def_cfa_offset 4
 3708              		.cfi_offset 7, -4
 3709 0002 00AF     		add	r7, sp, #0
 3710              	.LCFI68:
 3711              		.cfi_def_cfa_register 7
1248:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
1249:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     the HAL_RCC_CSSCallback could be implemented in the user file
1250:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     */ 
1251:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** }
 3712              		.loc 1 1251 0
 3713 0004 BD46     		mov	sp, r7
 3714              	.LCFI69:
 3715              		.cfi_def_cfa_register 13
 3716              		@ sp needed
 3717 0006 5DF8047B 		ldr	r7, [sp], #4
 3718              	.LCFI70:
 3719              		.cfi_restore 7
 3720              		.cfi_def_cfa_offset 0
 3721 000a 7047     		bx	lr
 3722              		.cfi_endproc
 3723              	.LFE76:
 3725              		.text
 3726              	.Letext0:
 3727              		.file 3 "/usr/include/newlib/machine/_default_types.h"
 3728              		.file 4 "/usr/include/newlib/stdint.h"
 3729              		.file 5 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f103xb.h"
 3730              		.file 6 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f1xx.h"
 3731              		.file 7 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_def.h"
 3732              		.file 8 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc.h"
 3733              		.file 9 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc_ex.h"
 3734              		.file 10 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_gpio.h"
 3735              		.file 11 "Drivers/CMSIS/Include/core_cm3.h"
 3736              		.file 12 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/system_stm32f1xx.h"
ARM GAS  /tmp/cc33CDhW.s 			page 100


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32f1xx_hal_rcc.c
     /tmp/cc33CDhW.s:19     .text.HAL_RCC_DeInit:0000000000000000 $t
     /tmp/cc33CDhW.s:24     .text.HAL_RCC_DeInit:0000000000000000 HAL_RCC_DeInit
     /tmp/cc33CDhW.s:116    .text.HAL_RCC_DeInit:0000000000000070 $d
     /tmp/cc33CDhW.s:123    .text.HAL_RCC_OscConfig:0000000000000000 $t
     /tmp/cc33CDhW.s:128    .text.HAL_RCC_OscConfig:0000000000000000 HAL_RCC_OscConfig
     /tmp/cc33CDhW.s:537    .text.HAL_RCC_OscConfig:00000000000002c8 $d
     /tmp/cc33CDhW.s:540    .text.HAL_RCC_OscConfig:00000000000002cc $t
     /tmp/cc33CDhW.s:995    .text.HAL_RCC_OscConfig:00000000000005e8 $d
     /tmp/cc33CDhW.s:998    .text.HAL_RCC_OscConfig:00000000000005ec $t
     /tmp/cc33CDhW.s:1414   .text.HAL_RCC_OscConfig:00000000000008cc $d
     /tmp/cc33CDhW.s:1419   .text.HAL_RCC_OscConfig:00000000000008d8 $t
     /tmp/cc33CDhW.s:1807   .text.HAL_RCC_OscConfig:0000000000000b8c $d
     /tmp/cc33CDhW.s:1810   .text.HAL_RCC_OscConfig:0000000000000b90 $t
     /tmp/cc33CDhW.s:2190   .text.HAL_RCC_OscConfig:0000000000000e34 $d
     /tmp/cc33CDhW.s:2195   .text.HAL_RCC_ClockConfig:0000000000000000 $t
     /tmp/cc33CDhW.s:2200   .text.HAL_RCC_ClockConfig:0000000000000000 HAL_RCC_ClockConfig
     /tmp/cc33CDhW.s:2647   .text.HAL_RCC_ClockConfig:00000000000002a8 $d
     /tmp/cc33CDhW.s:2651   .text.HAL_RCC_ClockConfig:00000000000002b0 $t
     /tmp/cc33CDhW.s:3019   .text.HAL_RCC_GetSysClockFreq:0000000000000000 HAL_RCC_GetSysClockFreq
     /tmp/cc33CDhW.s:2764   .text.HAL_RCC_ClockConfig:000000000000036c $d
     /tmp/cc33CDhW.s:2772   .text.HAL_RCC_MCOConfig:0000000000000000 $t
     /tmp/cc33CDhW.s:2777   .text.HAL_RCC_MCOConfig:0000000000000000 HAL_RCC_MCOConfig
     /tmp/cc33CDhW.s:2861   .text.HAL_RCC_MCOConfig:0000000000000074 $d
     /tmp/cc33CDhW.s:2867   .text.HAL_RCC_EnableCSS:0000000000000000 $t
     /tmp/cc33CDhW.s:2872   .text.HAL_RCC_EnableCSS:0000000000000000 HAL_RCC_EnableCSS
     /tmp/cc33CDhW.s:2929   .text.HAL_RCC_DisableCSS:0000000000000000 $t
     /tmp/cc33CDhW.s:2934   .text.HAL_RCC_DisableCSS:0000000000000000 HAL_RCC_DisableCSS
     /tmp/cc33CDhW.s:2991   .rodata:0000000000000000 $d
     /tmp/cc33CDhW.s:3014   .text.HAL_RCC_GetSysClockFreq:0000000000000000 $t
     /tmp/cc33CDhW.s:3184   .text.HAL_RCC_GetSysClockFreq:00000000000000e0 $d
     /tmp/cc33CDhW.s:3193   .text.HAL_RCC_GetHCLKFreq:0000000000000000 $t
     /tmp/cc33CDhW.s:3198   .text.HAL_RCC_GetHCLKFreq:0000000000000000 HAL_RCC_GetHCLKFreq
     /tmp/cc33CDhW.s:3229   .text.HAL_RCC_GetHCLKFreq:0000000000000014 $d
     /tmp/cc33CDhW.s:3234   .text.HAL_RCC_GetPCLK1Freq:0000000000000000 $t
     /tmp/cc33CDhW.s:3239   .text.HAL_RCC_GetPCLK1Freq:0000000000000000 HAL_RCC_GetPCLK1Freq
     /tmp/cc33CDhW.s:3296   .text.HAL_RCC_GetPCLK1Freq:000000000000003c $d
     /tmp/cc33CDhW.s:3302   .text.HAL_RCC_GetPCLK2Freq:0000000000000000 $t
     /tmp/cc33CDhW.s:3307   .text.HAL_RCC_GetPCLK2Freq:0000000000000000 HAL_RCC_GetPCLK2Freq
     /tmp/cc33CDhW.s:3364   .text.HAL_RCC_GetPCLK2Freq:000000000000003c $d
     /tmp/cc33CDhW.s:3370   .text.HAL_RCC_GetOscConfig:0000000000000000 $t
     /tmp/cc33CDhW.s:3375   .text.HAL_RCC_GetOscConfig:0000000000000000 HAL_RCC_GetOscConfig
     /tmp/cc33CDhW.s:3564   .text.HAL_RCC_GetOscConfig:000000000000010c $d
     /tmp/cc33CDhW.s:3569   .text.HAL_RCC_GetClockConfig:0000000000000000 $t
     /tmp/cc33CDhW.s:3574   .text.HAL_RCC_GetClockConfig:0000000000000000 HAL_RCC_GetClockConfig
     /tmp/cc33CDhW.s:3644   .text.HAL_RCC_GetClockConfig:0000000000000058 $d
     /tmp/cc33CDhW.s:3650   .text.HAL_RCC_NMI_IRQHandler:0000000000000000 $t
     /tmp/cc33CDhW.s:3655   .text.HAL_RCC_NMI_IRQHandler:0000000000000000 HAL_RCC_NMI_IRQHandler
     /tmp/cc33CDhW.s:3698   .text.HAL_RCC_CSSCallback:0000000000000000 HAL_RCC_CSSCallback
     /tmp/cc33CDhW.s:3687   .text.HAL_RCC_NMI_IRQHandler:000000000000001c $d
     /tmp/cc33CDhW.s:3693   .text.HAL_RCC_CSSCallback:0000000000000000 $t
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
SystemCoreClock
HAL_GetTick
ARM GAS  /tmp/cc33CDhW.s 			page 101


HAL_Delay
HAL_InitTick
AHBPrescTable
HAL_GPIO_Init
APBPrescTable
